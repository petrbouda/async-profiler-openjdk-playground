<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="901"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="901"> </text>
<g id="frames">
<g>
<title>all (29,236 samples, 100.00%)</title><rect x="10.0" y="867.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="878.0">all</text>
</g>
<g>
<title>[Attach Listener tid=27] (22 samples, 0.08%)</title><rect x="10.0" y="851.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (10 samples, 0.03%)</title><rect x="10.0" y="835.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (10 samples, 0.03%)</title><rect x="10.0" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (10 samples, 0.03%)</title><rect x="10.0" y="803.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>start_thread (7 samples, 0.02%)</title><rect x="10.6" y="835.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.6" y="846.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (7 samples, 0.02%)</title><rect x="10.6" y="819.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.6" y="830.0"></text>
</g>
<g>
<title>Thread::call_run() (7 samples, 0.02%)</title><rect x="10.6" y="803.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.6" y="814.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (7 samples, 0.02%)</title><rect x="10.6" y="787.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.6" y="798.0"></text>
</g>
<g>
<title>attach_listener_thread_entry(JavaThread*, Thread*) (7 samples, 0.02%)</title><rect x="10.6" y="771.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="13.6" y="782.0"></text>
</g>
<g>
<title>JvmtiExport::load_agent_library(char const*, char const*, char const*, outputStream*) (7 samples, 0.02%)</title><rect x="10.6" y="755.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.6" y="766.0"></text>
</g>
<g>
<title>Agent_OnAttach (7 samples, 0.02%)</title><rect x="10.6" y="739.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="13.6" y="750.0"></text>
</g>
<g>
<title>Profiler::run(Arguments&amp;) (7 samples, 0.02%)</title><rect x="10.6" y="723.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.6" y="734.0"></text>
</g>
<g>
<title>Profiler::runInternal(Arguments&amp;, std::ostream&amp;) (7 samples, 0.02%)</title><rect x="10.6" y="707.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.6" y="718.0"></text>
</g>
<g>
<title>Profiler::start(Arguments&amp;, bool) (7 samples, 0.02%)</title><rect x="10.6" y="691.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.6" y="702.0"></text>
</g>
<g>
<title>Profiler::switchNativeMethodTraps(bool) (7 samples, 0.02%)</title><rect x="10.6" y="675.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.6" y="686.0"></text>
</g>
<g>
<title>Profiler::bindNativeLibraryLoad(JNIEnv_*, unsigned char (*)(JNIEnv_*, _jobject*, _jstring*, unsigned char)) (7 samples, 0.02%)</title><rect x="10.6" y="659.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.6" y="670.0"></text>
</g>
<g>
<title>jni_FindClass (7 samples, 0.02%)</title><rect x="10.6" y="643.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.6" y="654.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (7 samples, 0.02%)</title><rect x="10.6" y="627.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.6" y="638.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (7 samples, 0.02%)</title><rect x="10.6" y="611.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.6" y="622.0"></text>
</g>
<g>
<title>[C1 CompilerThre tid=13] (10 samples, 0.03%)</title><rect x="10.9" y="851.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.9" y="862.0"></text>
</g>
<g>
<title>start_thread (10 samples, 0.03%)</title><rect x="10.9" y="835.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.9" y="846.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (10 samples, 0.03%)</title><rect x="10.9" y="819.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.9" y="830.0"></text>
</g>
<g>
<title>Thread::call_run() (10 samples, 0.03%)</title><rect x="10.9" y="803.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.9" y="814.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (10 samples, 0.03%)</title><rect x="10.9" y="787.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.9" y="798.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (10 samples, 0.03%)</title><rect x="10.9" y="771.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.9" y="782.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (10 samples, 0.03%)</title><rect x="10.9" y="755.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.9" y="766.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (10 samples, 0.03%)</title><rect x="10.9" y="739.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.9" y="750.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (10 samples, 0.03%)</title><rect x="10.9" y="723.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.9" y="734.0"></text>
</g>
<g>
<title>Compilation::compile_method() (10 samples, 0.03%)</title><rect x="10.9" y="707.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.9" y="718.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (10 samples, 0.03%)</title><rect x="10.9" y="691.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.9" y="702.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.0] (10 samples, 0.03%)</title><rect x="10.9" y="675.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.9" y="686.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (10 samples, 0.03%)</title><rect x="10.9" y="659.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.9" y="670.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (10 samples, 0.03%)</title><rect x="10.9" y="643.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.9" y="654.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (10 samples, 0.03%)</title><rect x="10.9" y="627.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.9" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (10 samples, 0.03%)</title><rect x="10.9" y="611.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.9" y="622.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (10 samples, 0.03%)</title><rect x="10.9" y="595.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.9" y="606.0"></text>
</g>
<g>
<title>GraphBuilder::load_constant() (10 samples, 0.03%)</title><rect x="10.9" y="579.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.9" y="590.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_constant() (10 samples, 0.03%)</title><rect x="10.9" y="563.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.9" y="574.0"></text>
</g>
<g>
<title>ciEnv::get_constant_by_index_impl(constantPoolHandle const&amp;, int, int, ciInstanceKlass*) (10 samples, 0.03%)</title><rect x="10.9" y="547.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.9" y="558.0"></text>
</g>
<g>
<title>ConstantPool::string_at_impl(constantPoolHandle const&amp;, int, int, Thread*) (10 samples, 0.03%)</title><rect x="10.9" y="531.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.9" y="542.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (10 samples, 0.03%)</title><rect x="10.9" y="515.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.9" y="526.0"></text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short const*, int, unsigned long, Thread*) (10 samples, 0.03%)</title><rect x="10.9" y="499.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.9" y="510.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short const*, int, Thread*) (10 samples, 0.03%)</title><rect x="10.9" y="483.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.9" y="494.0"></text>
</g>
<g>
<title>[SIGINT handler tid=61] (8 samples, 0.03%)</title><rect x="11.3" y="851.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="14.3" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.run (8 samples, 0.03%)</title><rect x="11.3" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Signal$1.run (8 samples, 0.03%)</title><rect x="11.3" y="819.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.3" y="830.0"></text>
</g>
<g>
<title>java/lang/Terminator$1.handle (8 samples, 0.03%)</title><rect x="11.3" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.3" y="814.0"></text>
</g>
<g>
<title>[Signal Dispatcher tid=10] (16 samples, 0.05%)</title><rect x="11.6" y="851.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="14.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Signal.dispatch (16 samples, 0.05%)</title><rect x="11.6" y="835.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.6" y="846.0"></text>
</g>
<g>
<title>[main tid=6] (29,180 samples, 99.81%)</title><rect x="12.3" y="851.0" width="1177.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="15.3" y="862.0">[main tid=6]</text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (28 samples, 0.10%)</title><rect x="12.3" y="835.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="15.3" y="846.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (28 samples, 0.10%)</title><rect x="12.3" y="819.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="15.3" y="830.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (28 samples, 0.10%)</title><rect x="12.3" y="803.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.3" y="814.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (28 samples, 0.10%)</title><rect x="12.3" y="787.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="15.3" y="798.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (28 samples, 0.10%)</title><rect x="12.3" y="771.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.3" y="782.0"></text>
</g>
<g>
<title>ConstantPool::resolve_string_constants_impl(constantPoolHandle const&amp;, Thread*) (28 samples, 0.10%)</title><rect x="12.3" y="755.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.3" y="766.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (28 samples, 0.10%)</title><rect x="12.3" y="739.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.3" y="750.0"></text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short const*, int, unsigned long, Thread*) (28 samples, 0.10%)</title><rect x="12.3" y="723.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="15.3" y="734.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short const*, int, Thread*) (28 samples, 0.10%)</title><rect x="12.3" y="707.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.3" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (14 samples, 0.05%)</title><rect x="12.3" y="691.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="15.3" y="702.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (14 samples, 0.05%)</title><rect x="12.3" y="675.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="15.3" y="686.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (14 samples, 0.05%)</title><rect x="12.8" y="691.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.8" y="702.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (14 samples, 0.05%)</title><rect x="12.8" y="675.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="15.8" y="686.0"></text>
</g>
<g>
<title>com/sun/tools/javac/launcher/Main.main (26,907 samples, 92.03%)</title><rect x="13.4" y="835.0" width="1086.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.4" y="846.0">com/sun/tools/javac/launcher/Main.main</text>
</g>
<g>
<title>com/sun/tools/javac/launcher/Main.run (26,907 samples, 92.03%)</title><rect x="13.4" y="819.0" width="1086.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.4" y="830.0">com/sun/tools/javac/launcher/Main.run</text>
</g>
<g>
<title>com/sun/tools/javac/launcher/Main.execute (26,907 samples, 92.03%)</title><rect x="13.4" y="803.0" width="1086.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.4" y="814.0">com/sun/tools/javac/launcher/Main.execute</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (26,907 samples, 92.03%)</title><rect x="13.4" y="787.0" width="1086.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="16.4" y="798.0">java/lang/reflect/Method.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (26,907 samples, 92.03%)</title><rect x="13.4" y="771.0" width="1086.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.4" y="782.0">jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (26,907 samples, 92.03%)</title><rect x="13.4" y="755.0" width="1086.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.4" y="766.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (26,907 samples, 92.03%)</title><rect x="13.4" y="739.0" width="1086.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.4" y="750.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke0</text>
</g>
<g>
<title>pbouda/asyncprofiler/openjdk/AllocationTracker.main (26,907 samples, 92.03%)</title><rect x="13.4" y="723.0" width="1086.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.4" y="734.0">pbouda/asyncprofiler/openjdk/AllocationTracker.main</text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (10 samples, 0.03%)</title><rect x="13.4" y="707.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="16.4" y="718.0"></text>
</g>
<g>
<title>java/io/PrintStream.println (573 samples, 1.96%)</title><rect x="13.8" y="707.0" width="23.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.8" y="718.0">j..</text>
</g>
<g>
<title>java/io/PrintStream.writeln (573 samples, 1.96%)</title><rect x="13.8" y="691.0" width="23.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.8" y="702.0">j..</text>
</g>
<g>
<title>java/io/BufferedWriter.flushBuffer (573 samples, 1.96%)</title><rect x="13.8" y="675.0" width="23.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.8" y="686.0">j..</text>
</g>
<g>
<title>java/io/OutputStreamWriter.write (573 samples, 1.96%)</title><rect x="13.8" y="659.0" width="23.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.8" y="670.0">j..</text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.write (573 samples, 1.96%)</title><rect x="13.8" y="643.0" width="23.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="16.8" y="654.0">s..</text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.implWrite (573 samples, 1.96%)</title><rect x="13.8" y="627.0" width="23.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.8" y="638.0">s..</text>
</g>
<g>
<title>java/nio/CharBuffer.wrap (573 samples, 1.96%)</title><rect x="13.8" y="611.0" width="23.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.8" y="622.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (116 samples, 0.40%)</title><rect x="13.8" y="595.0" width="4.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.8" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (116 samples, 0.40%)</title><rect x="13.8" y="579.0" width="4.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.8" y="590.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (116 samples, 0.40%)</title><rect x="13.8" y="563.0" width="4.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="16.8" y="574.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (457 samples, 1.56%)</title><rect x="18.5" y="595.0" width="18.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="21.5" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (457 samples, 1.56%)</title><rect x="18.5" y="579.0" width="18.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="21.5" y="590.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (457 samples, 1.56%)</title><rect x="18.5" y="563.0" width="18.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="21.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.repeat (1,142 samples, 3.91%)</title><rect x="37.0" y="707.0" width="46.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.0" y="718.0">java..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (254 samples, 0.87%)</title><rect x="37.0" y="691.0" width="10.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="40.0" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (254 samples, 0.87%)</title><rect x="37.0" y="675.0" width="10.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="40.0" y="686.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (254 samples, 0.87%)</title><rect x="37.0" y="659.0" width="10.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="40.0" y="670.0"></text>
</g>
<g>
<title>InterpreterRuntime::newarray(JavaThread*, BasicType, int) (254 samples, 0.87%)</title><rect x="47.2" y="691.0" width="10.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="50.2" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (254 samples, 0.87%)</title><rect x="47.2" y="675.0" width="10.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="50.2" y="686.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (254 samples, 0.87%)</title><rect x="47.2" y="659.0" width="10.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="50.2" y="670.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (317 samples, 1.08%)</title><rect x="57.5" y="691.0" width="12.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="60.5" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (317 samples, 1.08%)</title><rect x="57.5" y="675.0" width="12.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="60.5" y="686.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (317 samples, 1.08%)</title><rect x="57.5" y="659.0" width="12.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="60.5" y="670.0"></text>
</g>
<g>
<title>Runtime1::new_type_array(JavaThread*, Klass*, int) (317 samples, 1.08%)</title><rect x="70.3" y="691.0" width="12.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="73.3" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (317 samples, 1.08%)</title><rect x="70.3" y="675.0" width="12.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="73.3" y="686.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (317 samples, 1.08%)</title><rect x="70.3" y="659.0" width="12.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="73.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,146 samples, 3.92%)</title><rect x="83.1" y="707.0" width="46.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="86.1" y="718.0">java..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800ba4c40.invoke (1,146 samples, 3.92%)</title><rect x="83.1" y="691.0" width="46.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.1" y="702.0">java..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,146 samples, 3.92%)</title><rect x="83.1" y="675.0" width="46.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.1" y="686.0">java..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (573 samples, 1.96%)</title><rect x="83.1" y="659.0" width="23.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.1" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (573 samples, 1.96%)</title><rect x="83.1" y="643.0" width="23.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="86.1" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray0 (573 samples, 1.96%)</title><rect x="83.1" y="627.0" width="23.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.1" y="638.0">j..</text>
</g>
<g>
<title>Runtime1::new_type_array(JavaThread*, Klass*, int) (573 samples, 1.96%)</title><rect x="83.1" y="611.0" width="23.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="86.1" y="622.0">R..</text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (573 samples, 1.96%)</title><rect x="83.1" y="595.0" width="23.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="86.1" y="606.0">T..</text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (573 samples, 1.96%)</title><rect x="83.1" y="579.0" width="23.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="86.1" y="590.0">E..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (573 samples, 1.96%)</title><rect x="106.2" y="659.0" width="23.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.2" y="670.0">j..</text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (573 samples, 1.96%)</title><rect x="106.2" y="643.0" width="23.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="109.2" y="654.0">R..</text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (573 samples, 1.96%)</title><rect x="106.2" y="627.0" width="23.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="109.2" y="638.0">I..</text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (573 samples, 1.96%)</title><rect x="106.2" y="611.0" width="23.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="109.2" y="622.0">E..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (49 samples, 0.17%)</title><rect x="129.3" y="707.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (49 samples, 0.17%)</title><rect x="129.3" y="691.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (49 samples, 0.17%)</title><rect x="129.3" y="675.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (49 samples, 0.17%)</title><rect x="129.3" y="659.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (47 samples, 0.16%)</title><rect x="129.3" y="643.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (47 samples, 0.16%)</title><rect x="129.3" y="627.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.16%)</title><rect x="129.3" y="611.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.makeConcatWithConstants (47 samples, 0.16%)</title><rect x="129.3" y="595.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="132.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.generateMHInlineCopy (38 samples, 0.13%)</title><rect x="129.5" y="579.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.dropArguments (9 samples, 0.03%)</title><rect x="129.6" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.dropArguments0 (7 samples, 0.02%)</title><rect x="129.7" y="547.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="132.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.foldArgumentsWithCombiner (10 samples, 0.03%)</title><rect x="130.1" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="133.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.argumentsWithCombiner (10 samples, 0.03%)</title><rect x="130.1" y="547.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.1" y="558.0"></text>
</g>
<g>
<title>pbouda/asyncprofiler/openjdk/AllocationTracker.heapMemory (23,986 samples, 82.04%)</title><rect x="131.3" y="707.0" width="968.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.3" y="718.0">pbouda/asyncprofiler/openjdk/AllocationTracker.heapMemory</text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (20 samples, 0.07%)</title><rect x="131.3" y="691.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="134.3" y="702.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (13 samples, 0.04%)</title><rect x="131.3" y="675.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="134.3" y="686.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (13 samples, 0.04%)</title><rect x="131.3" y="659.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="134.3" y="670.0"></text>
</g>
<g>
<title>LinkInfo::LinkInfo(constantPoolHandle const&amp;, int, Thread*) (12 samples, 0.04%)</title><rect x="131.3" y="643.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="134.3" y="654.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (12 samples, 0.04%)</title><rect x="131.3" y="627.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="134.3" y="638.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (12 samples, 0.04%)</title><rect x="131.3" y="611.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="134.3" y="622.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (12 samples, 0.04%)</title><rect x="131.3" y="595.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="134.3" y="606.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (12 samples, 0.04%)</title><rect x="131.3" y="579.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="134.3" y="590.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (7 samples, 0.02%)</title><rect x="131.8" y="675.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="134.8" y="686.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (7 samples, 0.02%)</title><rect x="131.8" y="659.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="134.8" y="670.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, Thread*) (7 samples, 0.02%)</title><rect x="131.8" y="643.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="134.8" y="654.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, Thread*) (7 samples, 0.02%)</title><rect x="131.8" y="627.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="134.8" y="638.0"></text>
</g>
<g>
<title>java/io/PrintStream.println (573 samples, 1.96%)</title><rect x="132.1" y="691.0" width="23.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="135.1" y="702.0">j..</text>
</g>
<g>
<title>java/io/PrintStream.writeln (573 samples, 1.96%)</title><rect x="132.1" y="675.0" width="23.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.1" y="686.0">j..</text>
</g>
<g>
<title>java/io/BufferedWriter.flushBuffer (573 samples, 1.96%)</title><rect x="132.1" y="659.0" width="23.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="135.1" y="670.0">j..</text>
</g>
<g>
<title>java/io/OutputStreamWriter.write (573 samples, 1.96%)</title><rect x="132.1" y="643.0" width="23.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="135.1" y="654.0">j..</text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.write (573 samples, 1.96%)</title><rect x="132.1" y="627.0" width="23.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.1" y="638.0">s..</text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.implWrite (573 samples, 1.96%)</title><rect x="132.1" y="611.0" width="23.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.1" y="622.0">s..</text>
</g>
<g>
<title>java/nio/CharBuffer.wrap (573 samples, 1.96%)</title><rect x="132.1" y="595.0" width="23.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.1" y="606.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (116 samples, 0.40%)</title><rect x="132.1" y="579.0" width="4.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="135.1" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (116 samples, 0.40%)</title><rect x="132.1" y="563.0" width="4.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="135.1" y="574.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (116 samples, 0.40%)</title><rect x="132.1" y="547.0" width="4.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="135.1" y="558.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (457 samples, 1.56%)</title><rect x="136.8" y="579.0" width="18.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="139.8" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (457 samples, 1.56%)</title><rect x="136.8" y="563.0" width="18.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="139.8" y="574.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (457 samples, 1.56%)</title><rect x="136.8" y="547.0" width="18.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="139.8" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (34 samples, 0.12%)</title><rect x="155.2" y="691.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.2" y="702.0"></text>
</g>
<g>
<title>com/sun/tools/javac/launcher/Main$MemoryClassLoader.loadClass (34 samples, 0.12%)</title><rect x="155.2" y="675.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.2" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (34 samples, 0.12%)</title><rect x="155.2" y="659.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (34 samples, 0.12%)</title><rect x="155.2" y="643.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (34 samples, 0.12%)</title><rect x="155.2" y="627.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (34 samples, 0.12%)</title><rect x="155.2" y="611.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (22 samples, 0.08%)</title><rect x="155.7" y="595.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="158.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (22 samples, 0.08%)</title><rect x="155.7" y="579.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="158.7" y="590.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (22 samples, 0.08%)</title><rect x="155.7" y="563.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.7" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (22 samples, 0.08%)</title><rect x="155.7" y="547.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.7" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (22 samples, 0.08%)</title><rect x="155.7" y="531.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.7" y="542.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (22 samples, 0.08%)</title><rect x="155.7" y="515.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="158.7" y="526.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (22 samples, 0.08%)</title><rect x="155.7" y="499.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="158.7" y="510.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (22 samples, 0.08%)</title><rect x="155.7" y="483.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="158.7" y="494.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (22 samples, 0.08%)</title><rect x="155.7" y="467.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="158.7" y="478.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (22 samples, 0.08%)</title><rect x="155.7" y="451.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="158.7" y="462.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (22 samples, 0.08%)</title><rect x="155.7" y="435.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="158.7" y="446.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, ClassInstanceInfo const&amp;, Thread*) (22 samples, 0.08%)</title><rect x="155.7" y="419.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="158.7" y="430.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, ClassInstanceInfo const&amp;, Thread*) (22 samples, 0.08%)</title><rect x="155.7" y="403.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="158.7" y="414.0"></text>
</g>
<g>
<title>java_lang_Class::create_mirror(Klass*, Handle, Handle, Handle, Handle, Thread*) (22 samples, 0.08%)</title><rect x="155.7" y="387.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="158.7" y="398.0"></text>
</g>
<g>
<title>java_lang_Class::initialize_mirror_fields(Klass*, Handle, Handle, Handle, Thread*) (21 samples, 0.07%)</title><rect x="155.7" y="371.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="158.7" y="382.0"></text>
</g>
<g>
<title>InstanceKlass::do_local_static_fields(void (*)(fieldDescriptor*, Handle, Thread*), Handle, Thread*) (20 samples, 0.07%)</title><rect x="155.7" y="355.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="158.7" y="366.0"></text>
</g>
<g>
<title>initialize_static_field(fieldDescriptor*, Handle, Thread*) (20 samples, 0.07%)</title><rect x="155.7" y="339.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="158.7" y="350.0"></text>
</g>
<g>
<title>ConstantPool::uncached_string_at(int, Thread*) (20 samples, 0.07%)</title><rect x="155.7" y="323.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="158.7" y="334.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (20 samples, 0.07%)</title><rect x="155.7" y="307.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="158.7" y="318.0"></text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short const*, int, unsigned long, Thread*) (20 samples, 0.07%)</title><rect x="155.7" y="291.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="158.7" y="302.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short const*, int, Thread*) (20 samples, 0.07%)</title><rect x="155.7" y="275.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="158.7" y="286.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (10 samples, 0.03%)</title><rect x="155.7" y="259.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="158.7" y="270.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (10 samples, 0.03%)</title><rect x="155.7" y="243.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="158.7" y="254.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (10 samples, 0.03%)</title><rect x="156.1" y="259.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="159.1" y="270.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (10 samples, 0.03%)</title><rect x="156.1" y="243.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="159.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c79440.linkToTargetMethod (1,146 samples, 3.92%)</title><rect x="156.6" y="691.0" width="46.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.6" y="702.0">java..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800c79c40.invoke (1,146 samples, 3.92%)</title><rect x="156.6" y="675.0" width="46.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="159.6" y="686.0">java..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,146 samples, 3.92%)</title><rect x="156.6" y="659.0" width="46.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.6" y="670.0">java..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (573 samples, 1.96%)</title><rect x="156.6" y="643.0" width="23.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.6" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (573 samples, 1.96%)</title><rect x="156.6" y="627.0" width="23.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="159.6" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray0 (573 samples, 1.96%)</title><rect x="156.6" y="611.0" width="23.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.6" y="622.0">j..</text>
</g>
<g>
<title>Runtime1::new_type_array(JavaThread*, Klass*, int) (573 samples, 1.96%)</title><rect x="156.6" y="595.0" width="23.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="159.6" y="606.0">R..</text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (573 samples, 1.96%)</title><rect x="156.6" y="579.0" width="23.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="159.6" y="590.0">T..</text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (573 samples, 1.96%)</title><rect x="156.6" y="563.0" width="23.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="159.6" y="574.0">E..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (573 samples, 1.96%)</title><rect x="179.7" y="643.0" width="23.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.7" y="654.0">j..</text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (573 samples, 1.96%)</title><rect x="179.7" y="627.0" width="23.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="182.7" y="638.0">R..</text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (573 samples, 1.96%)</title><rect x="179.7" y="611.0" width="23.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="182.7" y="622.0">I..</text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (573 samples, 1.96%)</title><rect x="179.7" y="595.0" width="23.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="182.7" y="606.0">E..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.findMethodHandleType (9 samples, 0.03%)</title><rect x="202.8" y="691.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="205.8" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (9 samples, 0.03%)</title><rect x="202.8" y="675.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="205.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (2,786 samples, 9.53%)</title><rect x="203.2" y="691.0" width="112.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.2" y="702.0">java/lang/invo..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (2,786 samples, 9.53%)</title><rect x="203.2" y="675.0" width="112.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.2" y="686.0">java/lang/invo..</text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (2,320 samples, 7.94%)</title><rect x="203.2" y="659.0" width="93.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.2" y="670.0">java/lang/i..</text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (2,320 samples, 7.94%)</title><rect x="203.2" y="643.0" width="93.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.2" y="654.0">java/lang/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (2,318 samples, 7.93%)</title><rect x="203.2" y="627.0" width="93.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.2" y="638.0">java/lang/i..</text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (2,318 samples, 7.93%)</title><rect x="203.2" y="611.0" width="93.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.2" y="622.0">java/lang/i..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,318 samples, 7.93%)</title><rect x="203.2" y="595.0" width="93.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.2" y="606.0">java/lang/i..</text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.makeConcatWithConstants (2,318 samples, 7.93%)</title><rect x="203.2" y="579.0" width="93.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.2" y="590.0">java/lang/i..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.viewAsType (10 samples, 0.03%)</title><rect x="203.4" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="206.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.copyWith (10 samples, 0.03%)</title><rect x="203.4" y="547.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLLLLL.copyWith (10 samples, 0.03%)</title><rect x="203.4" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$SpeciesData.transformHelper (10 samples, 0.03%)</title><rect x="203.4" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$SpeciesData.transformHelperType (10 samples, 0.03%)</title><rect x="203.4" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.generateMHInlineCopy (2,292 samples, 7.84%)</title><rect x="203.8" y="563.0" width="92.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.8" y="574.0">java/lang/i..</text>
</g>
<g>
<title>InterpreterRuntime::newarray(JavaThread*, BasicType, int) (9 samples, 0.03%)</title><rect x="203.8" y="547.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="206.8" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.03%)</title><rect x="203.8" y="531.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="206.8" y="542.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (9 samples, 0.03%)</title><rect x="203.8" y="515.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="206.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.dropArguments (279 samples, 0.95%)</title><rect x="204.2" y="547.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.dropArguments0 (277 samples, 0.95%)</title><rect x="204.3" y="531.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_L.copyWith (204 samples, 0.70%)</title><rect x="204.3" y="515.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_L.&lt;init&gt; (203 samples, 0.69%)</title><rect x="204.3" y="499.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="207.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (203 samples, 0.69%)</title><rect x="204.3" y="483.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="207.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (203 samples, 0.69%)</title><rect x="204.3" y="467.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="207.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (203 samples, 0.69%)</title><rect x="204.3" y="451.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="207.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (203 samples, 0.69%)</title><rect x="204.3" y="435.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (196 samples, 0.67%)</title><rect x="204.3" y="419.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (176 samples, 0.60%)</title><rect x="204.5" y="403.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (92 samples, 0.31%)</title><rect x="204.5" y="387.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classData (7 samples, 0.02%)</title><rect x="204.5" y="371.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="207.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (30 samples, 0.10%)</title><rect x="204.8" y="371.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArguments (8 samples, 0.03%)</title><rect x="204.8" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="207.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArgument (8 samples, 0.03%)</title><rect x="204.8" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitImplicitConversion (7 samples, 0.02%)</title><rect x="204.8" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitReferenceCast (7 samples, 0.02%)</title><rect x="204.8" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitTypeInsn (7 samples, 0.02%)</title><rect x="204.8" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getInvocationType (7 samples, 0.02%)</title><rect x="205.2" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitFieldInsn (7 samples, 0.02%)</title><rect x="205.5" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodEpilogue (24 samples, 0.08%)</title><rect x="206.1" y="371.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="209.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMaxs (24 samples, 0.08%)</title><rect x="206.1" y="355.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="209.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.computeAllFrames (24 samples, 0.08%)</title><rect x="206.1" y="339.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="209.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.setInputFrameFromDescriptor (23 samples, 0.08%)</title><rect x="206.2" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="209.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (14 samples, 0.05%)</title><rect x="206.5" y="307.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.05%)</title><rect x="206.5" y="291.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.05%)</title><rect x="206.5" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="209.5" y="286.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.02%)</title><rect x="206.5" y="259.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="209.5" y="270.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="206.5" y="243.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="209.5" y="254.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="206.5" y="227.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="209.5" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.02%)</title><rect x="206.8" y="259.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.8" y="270.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.02%)</title><rect x="206.8" y="243.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="209.8" y="254.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.02%)</title><rect x="206.8" y="227.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="209.8" y="238.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="206.8" y="211.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="209.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodPrologue (14 samples, 0.05%)</title><rect x="207.1" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="210.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (8 samples, 0.03%)</title><rect x="207.3" y="355.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (7 samples, 0.02%)</title><rect x="207.4" y="339.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitAnnotation (13 samples, 0.04%)</title><rect x="207.6" y="371.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="210.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/AnnotationWriter.create (13 samples, 0.04%)</title><rect x="207.6" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classFilePrologue (20 samples, 0.07%)</title><rect x="208.2" y="387.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (59 samples, 0.20%)</title><rect x="209.0" y="387.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="212.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (54 samples, 0.18%)</title><rect x="209.2" y="371.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="212.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (8 samples, 0.03%)</title><rect x="209.7" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (7 samples, 0.02%)</title><rect x="209.7" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (14 samples, 0.05%)</title><rect x="210.5" y="355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="213.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (10 samples, 0.03%)</title><rect x="210.6" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (10 samples, 0.03%)</title><rect x="210.6" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="213.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadMethod (16 samples, 0.05%)</title><rect x="211.6" y="403.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.methodType (7 samples, 0.02%)</title><rect x="212.2" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="215.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.addArgumentForm (56 samples, 0.19%)</title><rect x="212.7" y="515.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="215.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.endEdit (36 samples, 0.12%)</title><rect x="212.8" y="499.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.lambdaForm (33 samples, 0.11%)</title><rect x="212.9" y="483.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="215.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.&lt;init&gt; (27 samples, 0.09%)</title><rect x="213.0" y="467.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="216.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.&lt;init&gt; (27 samples, 0.09%)</title><rect x="213.0" y="451.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="216.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.normalize (24 samples, 0.08%)</title><rect x="213.1" y="435.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.cloneWithIndex (12 samples, 0.04%)</title><rect x="213.3" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.replaceNames (9 samples, 0.03%)</title><rect x="213.7" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (12 samples, 0.04%)</title><rect x="214.9" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="217.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (11 samples, 0.04%)</title><rect x="214.9" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (10 samples, 0.03%)</title><rect x="215.0" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.findForm (7 samples, 0.02%)</title><rect x="215.1" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalize (7 samples, 0.02%)</title><rect x="215.1" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.filterArgumentsWithCombiner (1,283 samples, 4.39%)</title><rect x="215.4" y="547.0" width="51.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="218.4" y="558.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.argumentsWithCombiner (1,283 samples, 4.39%)</title><rect x="215.4" y="531.0" width="51.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.4" y="542.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLL.copyWithExtendL (9 samples, 0.03%)</title><rect x="215.4" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="218.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$SpeciesData.transformHelper (9 samples, 0.03%)</title><rect x="215.4" y="499.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$SpeciesData.transformHelperType (9 samples, 0.03%)</title><rect x="215.4" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="218.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLL.copyWithExtendL (9 samples, 0.03%)</title><rect x="215.8" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$SpeciesData.transformHelper (9 samples, 0.03%)</title><rect x="215.8" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$SpeciesData.transformHelperType (9 samples, 0.03%)</title><rect x="215.8" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="218.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLL.copyWithExtendL (9 samples, 0.03%)</title><rect x="216.2" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$SpeciesData.transformHelper (9 samples, 0.03%)</title><rect x="216.2" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$SpeciesData.transformHelperType (9 samples, 0.03%)</title><rect x="216.2" y="483.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="219.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLLL.copyWithExtendL (10 samples, 0.03%)</title><rect x="216.5" y="515.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$SpeciesData.transformHelper (10 samples, 0.03%)</title><rect x="216.5" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="219.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$SpeciesData.transformHelperType (10 samples, 0.03%)</title><rect x="216.5" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.editor (7 samples, 0.02%)</title><rect x="216.9" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="219.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.editor (7 samples, 0.02%)</title><rect x="216.9" y="499.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.lambdaFormEditor (7 samples, 0.02%)</title><rect x="216.9" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="219.9" y="494.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (7 samples, 0.02%)</title><rect x="216.9" y="467.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="219.9" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="216.9" y="451.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="219.9" y="462.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="216.9" y="435.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="219.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.filterArgumentsForm (1,239 samples, 4.24%)</title><rect x="217.2" y="515.0" width="50.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="220.2" y="526.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor$TransformKey.of (14 samples, 0.05%)</title><rect x="217.2" y="499.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.2" y="510.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (7 samples, 0.02%)</title><rect x="217.2" y="483.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="220.2" y="494.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="217.2" y="467.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="220.2" y="478.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="217.2" y="451.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="220.2" y="462.0"></text>
</g>
<g>
<title>InterpreterRuntime::newarray(JavaThread*, BasicType, int) (7 samples, 0.02%)</title><rect x="217.5" y="483.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="220.5" y="494.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.02%)</title><rect x="217.5" y="467.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="220.5" y="478.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="217.5" y="451.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="220.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.makeArgumentCombinationForm (1,218 samples, 4.17%)</title><rect x="217.8" y="499.0" width="49.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.8" y="510.0">java/..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (21 samples, 0.07%)</title><rect x="217.8" y="483.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="220.8" y="494.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (21 samples, 0.07%)</title><rect x="217.8" y="467.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="220.8" y="478.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (21 samples, 0.07%)</title><rect x="217.8" y="451.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="220.8" y="462.0"></text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (21 samples, 0.07%)</title><rect x="218.6" y="483.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="221.6" y="494.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (21 samples, 0.07%)</title><rect x="218.6" y="467.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="221.6" y="478.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (21 samples, 0.07%)</title><rect x="218.6" y="451.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="221.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.&lt;init&gt; (21 samples, 0.07%)</title><rect x="219.5" y="483.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.5" y="494.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (7 samples, 0.02%)</title><rect x="219.5" y="467.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="222.5" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="219.5" y="451.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="222.5" y="462.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="219.5" y="435.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="222.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.&lt;init&gt; (7 samples, 0.02%)</title><rect x="219.8" y="467.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.8" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.02%)</title><rect x="219.8" y="451.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.8" y="462.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (7 samples, 0.02%)</title><rect x="219.8" y="435.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="222.8" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (7 samples, 0.02%)</title><rect x="219.8" y="419.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="222.8" y="430.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="219.8" y="403.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="222.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.02%)</title><rect x="220.0" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.0" y="478.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (7 samples, 0.02%)</title><rect x="220.0" y="451.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="223.0" y="462.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (7 samples, 0.02%)</title><rect x="220.0" y="435.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="223.0" y="446.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="220.0" y="419.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="223.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.withConstraint (7 samples, 0.02%)</title><rect x="220.3" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="223.3" y="494.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (7 samples, 0.02%)</title><rect x="220.3" y="467.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="223.3" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="220.3" y="451.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="223.3" y="462.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="220.3" y="435.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="223.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.endEdit (221 samples, 0.76%)</title><rect x="220.6" y="483.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="223.6" y="494.0"></text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (7 samples, 0.02%)</title><rect x="220.6" y="467.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="223.6" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (7 samples, 0.02%)</title><rect x="220.6" y="451.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="223.6" y="462.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="220.6" y="435.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="223.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.replaceNames (186 samples, 0.64%)</title><rect x="220.9" y="467.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.9" y="478.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (62 samples, 0.21%)</title><rect x="220.9" y="451.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="223.9" y="462.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (62 samples, 0.21%)</title><rect x="220.9" y="435.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="223.9" y="446.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (62 samples, 0.21%)</title><rect x="220.9" y="419.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="223.9" y="430.0"></text>
</g>
<g>
<title>java/lang/Object.clone (62 samples, 0.21%)</title><rect x="223.4" y="451.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="226.4" y="462.0"></text>
</g>
<g>
<title>JVM_Clone (62 samples, 0.21%)</title><rect x="223.4" y="435.0" width="2.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="226.4" y="446.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (62 samples, 0.21%)</title><rect x="223.4" y="419.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="226.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.&lt;init&gt; (62 samples, 0.21%)</title><rect x="225.9" y="451.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="228.9" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (62 samples, 0.21%)</title><rect x="225.9" y="435.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="228.9" y="446.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (62 samples, 0.21%)</title><rect x="225.9" y="419.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="228.9" y="430.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (62 samples, 0.21%)</title><rect x="225.9" y="403.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="228.9" y="414.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (62 samples, 0.21%)</title><rect x="225.9" y="387.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="228.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.clearDuplicatesAndNulls (7 samples, 0.02%)</title><rect x="228.4" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (7 samples, 0.02%)</title><rect x="228.4" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.4" y="462.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (7 samples, 0.02%)</title><rect x="228.4" y="435.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="231.4" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="228.4" y="419.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="231.4" y="430.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="228.4" y="403.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="231.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.lambdaForm (21 samples, 0.07%)</title><rect x="228.7" y="467.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.7" y="478.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (7 samples, 0.02%)</title><rect x="228.7" y="451.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="231.7" y="462.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="228.7" y="435.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="231.7" y="446.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="228.7" y="419.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="231.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.&lt;init&gt; (7 samples, 0.02%)</title><rect x="229.0" y="451.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="232.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.&lt;init&gt; (7 samples, 0.02%)</title><rect x="229.0" y="435.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="232.0" y="446.0"></text>
</g>
<g>
<title>java/lang/Object.clone (7 samples, 0.02%)</title><rect x="229.0" y="419.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="232.0" y="430.0"></text>
</g>
<g>
<title>JVM_Clone (7 samples, 0.02%)</title><rect x="229.0" y="403.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="232.0" y="414.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="229.0" y="387.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="232.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.nameArray (7 samples, 0.02%)</title><rect x="229.2" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="232.2" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.02%)</title><rect x="229.2" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="232.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.02%)</title><rect x="229.2" y="419.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="232.2" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (7 samples, 0.02%)</title><rect x="229.2" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="232.2" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (7 samples, 0.02%)</title><rect x="229.2" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="232.2" y="398.0"></text>
</g>
<g>
<title>JVM_NewArray (7 samples, 0.02%)</title><rect x="229.2" y="371.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="232.2" y="382.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (7 samples, 0.02%)</title><rect x="229.2" y="355.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="232.2" y="366.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="229.2" y="339.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="232.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.insertExpression (7 samples, 0.02%)</title><rect x="229.5" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="232.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.insertName (7 samples, 0.02%)</title><rect x="229.5" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="232.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.growNames (7 samples, 0.02%)</title><rect x="229.5" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="232.5" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.02%)</title><rect x="229.5" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.02%)</title><rect x="229.5" y="419.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.5" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (7 samples, 0.02%)</title><rect x="229.5" y="403.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="232.5" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (7 samples, 0.02%)</title><rect x="229.5" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="232.5" y="398.0"></text>
</g>
<g>
<title>JVM_NewArray (7 samples, 0.02%)</title><rect x="229.5" y="371.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="232.5" y="382.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (7 samples, 0.02%)</title><rect x="229.5" y="355.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="232.5" y="366.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="229.5" y="339.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="232.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.insertParameter (14 samples, 0.05%)</title><rect x="229.8" y="483.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="232.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.insertName (14 samples, 0.05%)</title><rect x="229.8" y="467.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="232.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.growNames (14 samples, 0.05%)</title><rect x="229.8" y="451.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.8" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.05%)</title><rect x="229.8" y="435.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="232.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.05%)</title><rect x="229.8" y="419.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="232.8" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (14 samples, 0.05%)</title><rect x="229.8" y="403.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="232.8" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (14 samples, 0.05%)</title><rect x="229.8" y="387.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="232.8" y="398.0"></text>
</g>
<g>
<title>JVM_NewArray (14 samples, 0.05%)</title><rect x="229.8" y="371.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="232.8" y="382.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (14 samples, 0.05%)</title><rect x="229.8" y="355.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="232.8" y="366.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (14 samples, 0.05%)</title><rect x="229.8" y="339.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="232.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.replaceFunctions (62 samples, 0.21%)</title><rect x="230.4" y="483.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.4" y="494.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (31 samples, 0.11%)</title><rect x="230.4" y="467.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="233.4" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (31 samples, 0.11%)</title><rect x="230.4" y="451.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="233.4" y="462.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (31 samples, 0.11%)</title><rect x="230.4" y="435.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="233.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.&lt;init&gt; (31 samples, 0.11%)</title><rect x="231.6" y="467.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="234.6" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (31 samples, 0.11%)</title><rect x="231.6" y="451.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="234.6" y="462.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (31 samples, 0.11%)</title><rect x="231.6" y="435.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="234.6" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (31 samples, 0.11%)</title><rect x="231.6" y="419.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="234.6" y="430.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (31 samples, 0.11%)</title><rect x="231.6" y="403.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="234.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.replaceParameterByCopy (14 samples, 0.05%)</title><rect x="232.9" y="483.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.noteDuplicate (14 samples, 0.05%)</title><rect x="232.9" y="467.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.9" y="478.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (7 samples, 0.02%)</title><rect x="232.9" y="451.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="235.9" y="462.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="232.9" y="435.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="235.9" y="446.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="232.9" y="419.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="235.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.02%)</title><rect x="233.2" y="451.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.02%)</title><rect x="233.2" y="435.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="236.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.02%)</title><rect x="233.2" y="419.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="236.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.02%)</title><rect x="233.2" y="403.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="236.2" y="414.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (7 samples, 0.02%)</title><rect x="233.2" y="387.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="236.2" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (7 samples, 0.02%)</title><rect x="233.2" y="371.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="236.2" y="382.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="233.2" y="355.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="236.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.startEdit (7 samples, 0.02%)</title><rect x="233.4" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="236.4" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.02%)</title><rect x="233.4" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.4" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.02%)</title><rect x="233.4" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.4" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (7 samples, 0.02%)</title><rect x="233.4" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.4" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (7 samples, 0.02%)</title><rect x="233.4" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="236.4" y="430.0"></text>
</g>
<g>
<title>JVM_NewArray (7 samples, 0.02%)</title><rect x="233.4" y="403.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="236.4" y="414.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (7 samples, 0.02%)</title><rect x="233.4" y="387.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="236.4" y="398.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="233.4" y="371.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="236.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.buffer (7 samples, 0.02%)</title><rect x="233.7" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="236.7" y="494.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (7 samples, 0.02%)</title><rect x="233.7" y="467.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="236.7" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="233.7" y="451.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="236.7" y="462.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="233.7" y="435.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="236.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.newSpeciesData (816 samples, 2.79%)</title><rect x="234.0" y="483.0" width="32.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.0" y="494.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$SpeciesData.extendWith (816 samples, 2.79%)</title><rect x="234.0" y="467.0" width="32.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.0" y="478.0">ja..</text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.03%)</title><rect x="234.3" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="234.3" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer.findSpecies (800 samples, 2.74%)</title><rect x="234.7" y="451.0" width="32.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.7" y="462.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Specializer.newSpeciesData (32 samples, 0.11%)</title><rect x="234.7" y="435.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Specializer.newSpeciesData (32 samples, 0.11%)</title><rect x="234.7" y="419.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$SpeciesData.&lt;init&gt; (28 samples, 0.10%)</title><rect x="234.8" y="403.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$SpeciesData.&lt;init&gt; (24 samples, 0.08%)</title><rect x="235.0" y="387.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="238.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$SpeciesData.deriveFieldTypes (8 samples, 0.03%)</title><rect x="235.1" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="238.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$SpeciesData.deriveFieldTypes (8 samples, 0.03%)</title><rect x="235.1" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.1" y="366.0"></text>
</g>
<g>
<title>java/util/List.copyOf (12 samples, 0.04%)</title><rect x="235.5" y="371.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.5" y="382.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (12 samples, 0.04%)</title><rect x="235.5" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="238.5" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (8 samples, 0.03%)</title><rect x="235.6" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="238.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.loadSpecies (758 samples, 2.59%)</title><rect x="235.9" y="435.0" width="30.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="238.9" y="446.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$SpeciesData.deriveClassName (24 samples, 0.08%)</title><rect x="235.9" y="419.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.03%)</title><rect x="236.3" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.3" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.03%)</title><rect x="236.3" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.3" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.03%)</title><rect x="236.3" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="239.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.03%)</title><rect x="236.3" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.3" y="366.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.03%)</title><rect x="236.3" y="339.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="239.3" y="350.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.03%)</title><rect x="236.3" y="323.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="239.3" y="334.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="236.3" y="307.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="239.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.03%)</title><rect x="236.6" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="236.6" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="239.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.linkCodeToSpeciesData (8 samples, 0.03%)</title><rect x="236.9" y="419.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.resolveOrFail (8 samples, 0.03%)</title><rect x="236.9" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="239.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.linkSpeciesDataToCode (718 samples, 2.46%)</title><rect x="237.2" y="419.0" width="29.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="240.2" y="430.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.findFactories (214 samples, 0.73%)</title><rect x="237.2" y="403.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.findFactory (206 samples, 0.70%)</title><rect x="237.4" y="387.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="240.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findStatic (174 samples, 0.60%)</title><rect x="237.4" y="371.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="240.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethod (158 samples, 0.54%)</title><rect x="237.4" y="355.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodCommon (158 samples, 0.54%)</title><rect x="237.4" y="339.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (158 samples, 0.54%)</title><rect x="237.4" y="323.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (154 samples, 0.53%)</title><rect x="237.6" y="307.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (154 samples, 0.53%)</title><rect x="237.6" y="291.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (138 samples, 0.47%)</title><rect x="237.6" y="275.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="240.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makePreparedLambdaForm (134 samples, 0.46%)</title><rect x="237.6" y="259.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.6" y="270.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (16 samples, 0.05%)</title><rect x="237.6" y="243.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="240.6" y="254.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (16 samples, 0.05%)</title><rect x="237.6" y="227.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="240.6" y="238.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="237.6" y="211.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="240.6" y="222.0"></text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (8 samples, 0.03%)</title><rect x="238.2" y="243.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="241.2" y="254.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (8 samples, 0.03%)</title><rect x="238.2" y="227.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="241.2" y="238.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="238.2" y="211.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="241.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.&lt;init&gt; (12 samples, 0.04%)</title><rect x="238.5" y="243.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.arguments (7 samples, 0.02%)</title><rect x="239.2" y="243.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (20 samples, 0.07%)</title><rect x="239.5" y="243.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="242.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (12 samples, 0.04%)</title><rect x="239.5" y="227.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.lookupPregenerated (12 samples, 0.04%)</title><rect x="239.5" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.resolveFrom (12 samples, 0.04%)</title><rect x="239.5" y="195.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="242.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolveOrNull (8 samples, 0.03%)</title><rect x="239.6" y="179.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolve (8 samples, 0.03%)</title><rect x="239.6" y="163.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.methodType (8 samples, 0.03%)</title><rect x="239.9" y="227.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolveOrFail (8 samples, 0.03%)</title><rect x="240.3" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="243.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolve (8 samples, 0.03%)</title><rect x="240.3" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="243.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.appendParameterTypes (35 samples, 0.12%)</title><rect x="240.6" y="243.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="243.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (35 samples, 0.12%)</title><rect x="240.6" y="227.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (31 samples, 0.11%)</title><rect x="240.7" y="211.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="243.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.findForm (21 samples, 0.07%)</title><rect x="241.1" y="195.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="244.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalize (21 samples, 0.07%)</title><rect x="241.1" y="179.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="244.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (18 samples, 0.06%)</title><rect x="241.1" y="163.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="244.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.findForm (9 samples, 0.03%)</title><rect x="241.5" y="147.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="244.5" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.invokerType (20 samples, 0.07%)</title><rect x="242.0" y="243.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (20 samples, 0.07%)</title><rect x="242.0" y="227.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (16 samples, 0.05%)</title><rect x="242.2" y="211.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.shouldBeInitialized (16 samples, 0.05%)</title><rect x="243.1" y="275.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="246.1" y="286.0"></text>
</g>
<g>
<title>sun/invoke/util/VerifyAccess.isSamePackage (16 samples, 0.05%)</title><rect x="243.1" y="259.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="246.1" y="270.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (16 samples, 0.05%)</title><rect x="243.1" y="243.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="246.1" y="254.0"></text>
</g>
<g>
<title>java/lang/Class.getName (8 samples, 0.03%)</title><rect x="243.1" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.1" y="238.0"></text>
</g>
<g>
<title>java/lang/Class.initClassName (8 samples, 0.03%)</title><rect x="243.1" y="211.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.1" y="222.0"></text>
</g>
<g>
<title>JVM_InitClassName (8 samples, 0.03%)</title><rect x="243.1" y="195.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="246.1" y="206.0"></text>
</g>
<g>
<title>java_lang_Class::name(Handle, Thread*) (8 samples, 0.03%)</title><rect x="243.1" y="179.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="246.1" y="190.0"></text>
</g>
<g>
<title>StringTable::intern(char const*, Thread*) (8 samples, 0.03%)</title><rect x="243.1" y="163.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="246.1" y="174.0"></text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short const*, int, unsigned long, Thread*) (8 samples, 0.03%)</title><rect x="243.1" y="147.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="246.1" y="158.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short const*, int, Thread*) (8 samples, 0.03%)</title><rect x="243.1" y="131.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="246.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.03%)</title><rect x="243.4" y="227.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="243.4" y="211.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="246.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.resolveOrFail (16 samples, 0.05%)</title><rect x="243.8" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="246.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolveOrFail (12 samples, 0.04%)</title><rect x="243.9" y="339.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="246.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolve (12 samples, 0.04%)</title><rect x="243.9" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="246.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.resolve (8 samples, 0.03%)</title><rect x="244.1" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.1" y="318.0"></text>
</g>
<g>
<title>MHN_resolve_Mem (8 samples, 0.03%)</title><rect x="244.1" y="291.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="247.1" y="302.0"></text>
</g>
<g>
<title>MethodHandles::resolve_MemberName(Handle, Klass*, bool, Thread*) (8 samples, 0.03%)</title><rect x="244.1" y="275.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="247.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.appendParameterTypes (28 samples, 0.10%)</title><rect x="244.4" y="371.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="247.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (28 samples, 0.10%)</title><rect x="244.4" y="355.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (24 samples, 0.08%)</title><rect x="244.4" y="339.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (20 samples, 0.07%)</title><rect x="244.6" y="323.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="247.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType$ConcurrentWeakInternSet.add (8 samples, 0.03%)</title><rect x="244.7" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.findForm (8 samples, 0.03%)</title><rect x="245.1" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalize (8 samples, 0.03%)</title><rect x="245.1" y="291.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="248.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.findGetters (463 samples, 1.58%)</title><rect x="245.9" y="403.0" width="18.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="248.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.findGetter (451 samples, 1.54%)</title><rect x="246.0" y="387.0" width="18.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="249.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Specializer$Factory.chooseFieldName (232 samples, 0.79%)</title><rect x="246.0" y="371.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.0" y="382.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (29 samples, 0.10%)</title><rect x="246.0" y="355.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="249.0" y="366.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (29 samples, 0.10%)</title><rect x="246.0" y="339.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="249.0" y="350.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (29 samples, 0.10%)</title><rect x="246.0" y="323.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="249.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (29 samples, 0.10%)</title><rect x="247.2" y="355.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="250.2" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (29 samples, 0.10%)</title><rect x="247.2" y="339.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.2" y="350.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (29 samples, 0.10%)</title><rect x="247.2" y="323.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="250.2" y="334.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (29 samples, 0.10%)</title><rect x="247.2" y="307.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="250.2" y="318.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (29 samples, 0.10%)</title><rect x="247.2" y="291.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="250.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (58 samples, 0.20%)</title><rect x="248.4" y="355.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (58 samples, 0.20%)</title><rect x="248.4" y="339.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="251.4" y="350.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (29 samples, 0.10%)</title><rect x="248.4" y="323.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="251.4" y="334.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (29 samples, 0.10%)</title><rect x="248.4" y="307.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="251.4" y="318.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (29 samples, 0.10%)</title><rect x="248.4" y="291.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="251.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.10%)</title><rect x="249.5" y="323.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="252.5" y="334.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (29 samples, 0.10%)</title><rect x="249.5" y="307.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="252.5" y="318.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (29 samples, 0.10%)</title><rect x="249.5" y="291.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="252.5" y="302.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (29 samples, 0.10%)</title><rect x="249.5" y="275.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="252.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.chooseFieldName (116 samples, 0.40%)</title><rect x="250.7" y="355.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="253.7" y="366.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (29 samples, 0.10%)</title><rect x="250.7" y="339.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="253.7" y="350.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (29 samples, 0.10%)</title><rect x="250.7" y="323.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="253.7" y="334.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (29 samples, 0.10%)</title><rect x="250.7" y="307.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="253.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (29 samples, 0.10%)</title><rect x="251.9" y="339.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.9" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (29 samples, 0.10%)</title><rect x="251.9" y="323.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.9" y="334.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (29 samples, 0.10%)</title><rect x="251.9" y="307.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="254.9" y="318.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (29 samples, 0.10%)</title><rect x="251.9" y="291.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="254.9" y="302.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (29 samples, 0.10%)</title><rect x="251.9" y="275.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="254.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (58 samples, 0.20%)</title><rect x="253.1" y="339.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (58 samples, 0.20%)</title><rect x="253.1" y="323.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="256.1" y="334.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (29 samples, 0.10%)</title><rect x="253.1" y="307.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="256.1" y="318.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (29 samples, 0.10%)</title><rect x="253.1" y="291.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="256.1" y="302.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (29 samples, 0.10%)</title><rect x="253.1" y="275.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="256.1" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.10%)</title><rect x="254.2" y="307.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.2" y="318.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (29 samples, 0.10%)</title><rect x="254.2" y="291.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="257.2" y="302.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (29 samples, 0.10%)</title><rect x="254.2" y="275.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="257.2" y="286.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (29 samples, 0.10%)</title><rect x="254.2" y="259.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="257.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findGetter (219 samples, 0.75%)</title><rect x="255.4" y="371.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectField (161 samples, 0.55%)</title><rect x="255.4" y="355.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="258.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectFieldCommon (161 samples, 0.55%)</title><rect x="255.4" y="339.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (161 samples, 0.55%)</title><rect x="255.4" y="323.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (161 samples, 0.55%)</title><rect x="255.4" y="307.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.4" y="318.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (29 samples, 0.10%)</title><rect x="255.4" y="291.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="258.4" y="302.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (29 samples, 0.10%)</title><rect x="255.4" y="275.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="258.4" y="286.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (29 samples, 0.10%)</title><rect x="255.4" y="259.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="258.4" y="270.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (29 samples, 0.10%)</title><rect x="256.6" y="291.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="259.6" y="302.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (29 samples, 0.10%)</title><rect x="256.6" y="275.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="259.6" y="286.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (29 samples, 0.10%)</title><rect x="256.6" y="259.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="259.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getMethodOrFieldType (29 samples, 0.10%)</title><rect x="257.7" y="291.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.methodType (29 samples, 0.10%)</title><rect x="257.7" y="275.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="260.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (29 samples, 0.10%)</title><rect x="257.7" y="259.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="260.7" y="270.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (29 samples, 0.10%)</title><rect x="257.7" y="243.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="260.7" y="254.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (29 samples, 0.10%)</title><rect x="257.7" y="227.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="260.7" y="238.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (29 samples, 0.10%)</title><rect x="257.7" y="211.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="260.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (74 samples, 0.25%)</title><rect x="258.9" y="291.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="261.9" y="302.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (29 samples, 0.10%)</title><rect x="258.9" y="275.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="261.9" y="286.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (29 samples, 0.10%)</title><rect x="258.9" y="259.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="261.9" y="270.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (29 samples, 0.10%)</title><rect x="258.9" y="243.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="261.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (45 samples, 0.15%)</title><rect x="260.1" y="275.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.1" y="286.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (29 samples, 0.10%)</title><rect x="260.1" y="259.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="263.1" y="270.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (29 samples, 0.10%)</title><rect x="260.1" y="243.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="263.1" y="254.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (29 samples, 0.10%)</title><rect x="260.1" y="227.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="263.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType$ConcurrentWeakInternSet.add (8 samples, 0.03%)</title><rect x="261.2" y="259.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="264.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.findForm (8 samples, 0.03%)</title><rect x="261.6" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="264.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalize (8 samples, 0.03%)</title><rect x="261.6" y="243.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="264.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.resolveOrFail (58 samples, 0.20%)</title><rect x="261.9" y="355.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="264.9" y="366.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (29 samples, 0.10%)</title><rect x="261.9" y="339.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="264.9" y="350.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (29 samples, 0.10%)</title><rect x="261.9" y="323.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="264.9" y="334.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (29 samples, 0.10%)</title><rect x="261.9" y="307.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="264.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolveOrFail (29 samples, 0.10%)</title><rect x="263.1" y="339.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="266.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolve (29 samples, 0.10%)</title><rect x="263.1" y="323.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="266.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.clone (29 samples, 0.10%)</title><rect x="263.1" y="307.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="266.1" y="318.0"></text>
</g>
<g>
<title>java/lang/Object.clone (29 samples, 0.10%)</title><rect x="263.1" y="291.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.1" y="302.0"></text>
</g>
<g>
<title>JVM_Clone (29 samples, 0.10%)</title><rect x="263.1" y="275.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="266.1" y="286.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (29 samples, 0.10%)</title><rect x="263.1" y="259.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="266.1" y="270.0"></text>
</g>
<g>
<title>java/util/List.of (8 samples, 0.03%)</title><rect x="264.2" y="387.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.makeNominalGetters (41 samples, 0.14%)</title><rect x="264.6" y="403.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.6" y="414.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (29 samples, 0.10%)</title><rect x="264.6" y="387.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="267.6" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (29 samples, 0.10%)</title><rect x="264.6" y="371.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="267.6" y="382.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (29 samples, 0.10%)</title><rect x="264.6" y="355.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="267.6" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (8 samples, 0.03%)</title><rect x="265.9" y="387.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="268.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.loadClassOrNull (8 samples, 0.03%)</title><rect x="266.2" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="269.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (8 samples, 0.03%)</title><rect x="266.2" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="269.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (8 samples, 0.03%)</title><rect x="266.2" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="269.2" y="398.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (8 samples, 0.03%)</title><rect x="266.2" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="269.2" y="382.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (8 samples, 0.03%)</title><rect x="266.2" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="269.2" y="366.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (8 samples, 0.03%)</title><rect x="266.2" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="269.2" y="350.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (8 samples, 0.03%)</title><rect x="266.2" y="323.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="269.2" y="334.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (8 samples, 0.03%)</title><rect x="266.2" y="307.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="269.2" y="318.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (8 samples, 0.03%)</title><rect x="266.2" y="291.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="269.2" y="302.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (8 samples, 0.03%)</title><rect x="266.2" y="275.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="269.2" y="286.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (8 samples, 0.03%)</title><rect x="266.2" y="259.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="269.2" y="270.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (8 samples, 0.03%)</title><rect x="266.2" y="243.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="269.2" y="254.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, ClassInstanceInfo const&amp;, Thread*) (8 samples, 0.03%)</title><rect x="266.2" y="227.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="269.2" y="238.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, ClassInstanceInfo const&amp;, Thread*) (8 samples, 0.03%)</title><rect x="266.2" y="211.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="269.2" y="222.0"></text>
</g>
<g>
<title>java_lang_Class::create_mirror(Klass*, Handle, Handle, Handle, Handle, Thread*) (8 samples, 0.03%)</title><rect x="266.2" y="195.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="269.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (10 samples, 0.03%)</title><rect x="266.5" y="435.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="269.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.putInCache (7 samples, 0.02%)</title><rect x="266.9" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="269.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor$TransformKey.withResult (7 samples, 0.02%)</title><rect x="266.9" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="269.9" y="494.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (7 samples, 0.02%)</title><rect x="266.9" y="467.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="269.9" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="266.9" y="451.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="269.9" y="462.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="266.9" y="435.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="269.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.foldArgumentsWithCombiner (693 samples, 2.37%)</title><rect x="267.2" y="547.0" width="28.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="270.2" y="558.0">j..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.argumentsWithCombiner (693 samples, 2.37%)</title><rect x="267.2" y="531.0" width="28.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="270.2" y="542.0">j..</text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLL.copyWithExtendL (9 samples, 0.03%)</title><rect x="267.2" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="270.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$SpeciesData.transformHelper (9 samples, 0.03%)</title><rect x="267.2" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="270.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$SpeciesData.transformHelperType (9 samples, 0.03%)</title><rect x="267.2" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="270.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLLLL.copyWithExtendL (10 samples, 0.03%)</title><rect x="267.6" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="270.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$SpeciesData.transformHelper (10 samples, 0.03%)</title><rect x="267.6" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="270.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$SpeciesData.transformHelperType (10 samples, 0.03%)</title><rect x="267.6" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="270.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.foldArgumentsForm (660 samples, 2.26%)</title><rect x="268.1" y="515.0" width="26.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.1" y="526.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.makeArgumentCombinationForm (654 samples, 2.24%)</title><rect x="268.2" y="499.0" width="26.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="271.2" y="510.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.endEdit (153 samples, 0.52%)</title><rect x="269.0" y="483.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.replaceNames (84 samples, 0.29%)</title><rect x="269.0" y="467.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="272.0" y="478.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (10 samples, 0.03%)</title><rect x="269.0" y="451.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="272.0" y="462.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (10 samples, 0.03%)</title><rect x="269.0" y="435.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="272.0" y="446.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (10 samples, 0.03%)</title><rect x="269.0" y="419.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="272.0" y="430.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (18 samples, 0.06%)</title><rect x="269.4" y="451.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="272.4" y="462.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (18 samples, 0.06%)</title><rect x="269.4" y="435.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="272.4" y="446.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (18 samples, 0.06%)</title><rect x="269.4" y="419.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="272.4" y="430.0"></text>
</g>
<g>
<title>java/lang/Object.clone (28 samples, 0.10%)</title><rect x="270.2" y="451.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="273.2" y="462.0"></text>
</g>
<g>
<title>JVM_Clone (28 samples, 0.10%)</title><rect x="270.2" y="435.0" width="1.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="273.2" y="446.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (28 samples, 0.10%)</title><rect x="270.2" y="419.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="273.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.&lt;init&gt; (28 samples, 0.10%)</title><rect x="271.3" y="451.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.3" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (28 samples, 0.10%)</title><rect x="271.3" y="435.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.3" y="446.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (28 samples, 0.10%)</title><rect x="271.3" y="419.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="274.3" y="430.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (28 samples, 0.10%)</title><rect x="271.3" y="403.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="274.3" y="414.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (28 samples, 0.10%)</title><rect x="271.3" y="387.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="274.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.lambdaForm (65 samples, 0.22%)</title><rect x="272.5" y="467.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="275.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.&lt;init&gt; (61 samples, 0.21%)</title><rect x="272.6" y="451.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="275.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.&lt;init&gt; (61 samples, 0.21%)</title><rect x="272.6" y="435.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="275.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.normalize (59 samples, 0.20%)</title><rect x="272.7" y="419.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.cloneWithIndex (9 samples, 0.03%)</title><rect x="272.8" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="275.8" y="414.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (9 samples, 0.03%)</title><rect x="272.8" y="387.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="275.8" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (9 samples, 0.03%)</title><rect x="272.8" y="371.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="275.8" y="382.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (9 samples, 0.03%)</title><rect x="272.8" y="355.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="275.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.replaceNames (48 samples, 0.16%)</title><rect x="273.1" y="403.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.1" y="414.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (10 samples, 0.03%)</title><rect x="273.4" y="387.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="276.4" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (10 samples, 0.03%)</title><rect x="273.4" y="371.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="276.4" y="382.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (10 samples, 0.03%)</title><rect x="273.4" y="355.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="276.4" y="366.0"></text>
</g>
<g>
<title>java/lang/Object.clone (16 samples, 0.05%)</title><rect x="273.8" y="387.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="276.8" y="398.0"></text>
</g>
<g>
<title>JVM_Clone (16 samples, 0.05%)</title><rect x="273.8" y="371.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="276.8" y="382.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="273.8" y="355.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="276.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.&lt;init&gt; (16 samples, 0.05%)</title><rect x="274.4" y="387.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.4" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.05%)</title><rect x="274.4" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="277.4" y="382.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (16 samples, 0.05%)</title><rect x="274.4" y="355.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="277.4" y="366.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (16 samples, 0.05%)</title><rect x="274.4" y="339.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="277.4" y="350.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="274.4" y="323.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="277.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormBuffer.replaceFunctions (28 samples, 0.10%)</title><rect x="275.2" y="483.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.2" y="494.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (14 samples, 0.05%)</title><rect x="275.2" y="467.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="278.2" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (14 samples, 0.05%)</title><rect x="275.2" y="451.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="278.2" y="462.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (14 samples, 0.05%)</title><rect x="275.2" y="435.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="278.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.&lt;init&gt; (14 samples, 0.05%)</title><rect x="275.8" y="467.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="278.8" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.05%)</title><rect x="275.8" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="278.8" y="462.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (14 samples, 0.05%)</title><rect x="275.8" y="435.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="278.8" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (14 samples, 0.05%)</title><rect x="275.8" y="419.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="278.8" y="430.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (14 samples, 0.05%)</title><rect x="275.8" y="403.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="278.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.newSpeciesData (445 samples, 1.52%)</title><rect x="276.7" y="483.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="279.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$SpeciesData.extendWith (445 samples, 1.52%)</title><rect x="276.7" y="467.0" width="17.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="279.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer.findSpecies (437 samples, 1.49%)</title><rect x="277.0" y="451.0" width="17.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Specializer.newSpeciesData (16 samples, 0.05%)</title><rect x="277.0" y="435.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Specializer.newSpeciesData (16 samples, 0.05%)</title><rect x="277.0" y="419.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$SpeciesData.&lt;init&gt; (14 samples, 0.05%)</title><rect x="277.1" y="403.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="280.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$SpeciesData.&lt;init&gt; (12 samples, 0.04%)</title><rect x="277.2" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="280.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.loadSpecies (411 samples, 1.41%)</title><rect x="277.6" y="435.0" width="16.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="280.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$SpeciesData.deriveClassName (12 samples, 0.04%)</title><rect x="277.6" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.linkSpeciesDataToCode (391 samples, 1.34%)</title><rect x="278.3" y="419.0" width="15.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.findFactories (115 samples, 0.39%)</title><rect x="278.3" y="403.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.findFactory (111 samples, 0.38%)</title><rect x="278.4" y="387.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findStatic (95 samples, 0.32%)</title><rect x="278.4" y="371.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="281.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethod (87 samples, 0.30%)</title><rect x="278.4" y="355.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="281.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodCommon (87 samples, 0.30%)</title><rect x="278.4" y="339.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="281.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (87 samples, 0.30%)</title><rect x="278.4" y="323.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (85 samples, 0.29%)</title><rect x="278.4" y="307.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (85 samples, 0.29%)</title><rect x="278.4" y="291.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="281.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (77 samples, 0.26%)</title><rect x="278.4" y="275.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makePreparedLambdaForm (75 samples, 0.26%)</title><rect x="278.4" y="259.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="281.4" y="270.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (8 samples, 0.03%)</title><rect x="278.4" y="243.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="281.4" y="254.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="278.4" y="227.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="281.4" y="238.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="278.4" y="211.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="281.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (10 samples, 0.03%)</title><rect x="279.5" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.appendParameterTypes (22 samples, 0.08%)</title><rect x="280.0" y="243.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (22 samples, 0.08%)</title><rect x="280.0" y="227.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (20 samples, 0.07%)</title><rect x="280.1" y="211.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.findForm (14 samples, 0.05%)</title><rect x="280.3" y="195.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalize (14 samples, 0.05%)</title><rect x="280.3" y="179.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (12 samples, 0.04%)</title><rect x="280.3" y="163.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.invokerType (12 samples, 0.04%)</title><rect x="280.9" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (12 samples, 0.04%)</title><rect x="280.9" y="227.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="283.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (10 samples, 0.03%)</title><rect x="281.0" y="211.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.shouldBeInitialized (8 samples, 0.03%)</title><rect x="281.6" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.6" y="286.0"></text>
</g>
<g>
<title>sun/invoke/util/VerifyAccess.isSamePackage (8 samples, 0.03%)</title><rect x="281.6" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.6" y="270.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (8 samples, 0.03%)</title><rect x="281.6" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.resolveOrFail (8 samples, 0.03%)</title><rect x="281.9" y="355.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="284.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.appendParameterTypes (14 samples, 0.05%)</title><rect x="282.2" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (14 samples, 0.05%)</title><rect x="282.2" y="355.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="285.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (12 samples, 0.04%)</title><rect x="282.2" y="339.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (10 samples, 0.03%)</title><rect x="282.3" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="285.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.findGetters (254 samples, 0.87%)</title><rect x="282.9" y="403.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.findGetter (248 samples, 0.85%)</title><rect x="283.0" y="387.0" width="10.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Specializer$Factory.chooseFieldName (128 samples, 0.44%)</title><rect x="283.0" y="371.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.0" y="382.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (16 samples, 0.05%)</title><rect x="283.0" y="355.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="286.0" y="366.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (16 samples, 0.05%)</title><rect x="283.0" y="339.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="286.0" y="350.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="283.0" y="323.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="286.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (16 samples, 0.05%)</title><rect x="283.6" y="355.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="286.6" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (16 samples, 0.05%)</title><rect x="283.6" y="339.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.6" y="350.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (16 samples, 0.05%)</title><rect x="283.6" y="323.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="286.6" y="334.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (16 samples, 0.05%)</title><rect x="283.6" y="307.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="286.6" y="318.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="283.6" y="291.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="286.6" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (32 samples, 0.11%)</title><rect x="284.3" y="355.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.11%)</title><rect x="284.3" y="339.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.3" y="350.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (16 samples, 0.05%)</title><rect x="284.3" y="323.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="287.3" y="334.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (16 samples, 0.05%)</title><rect x="284.3" y="307.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="287.3" y="318.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="284.3" y="291.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="287.3" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.05%)</title><rect x="284.9" y="323.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="287.9" y="334.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (16 samples, 0.05%)</title><rect x="284.9" y="307.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="287.9" y="318.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (16 samples, 0.05%)</title><rect x="284.9" y="291.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="287.9" y="302.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="284.9" y="275.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="287.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.chooseFieldName (64 samples, 0.22%)</title><rect x="285.6" y="355.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.6" y="366.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (16 samples, 0.05%)</title><rect x="285.6" y="339.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="288.6" y="350.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (16 samples, 0.05%)</title><rect x="285.6" y="323.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="288.6" y="334.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="285.6" y="307.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="288.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (16 samples, 0.05%)</title><rect x="286.2" y="339.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.2" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (16 samples, 0.05%)</title><rect x="286.2" y="323.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.2" y="334.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (16 samples, 0.05%)</title><rect x="286.2" y="307.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="289.2" y="318.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (16 samples, 0.05%)</title><rect x="286.2" y="291.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="289.2" y="302.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="286.2" y="275.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="289.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (32 samples, 0.11%)</title><rect x="286.9" y="339.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.11%)</title><rect x="286.9" y="323.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.9" y="334.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (16 samples, 0.05%)</title><rect x="286.9" y="307.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="289.9" y="318.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (16 samples, 0.05%)</title><rect x="286.9" y="291.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="289.9" y="302.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="286.9" y="275.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="289.9" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.05%)</title><rect x="287.5" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.5" y="318.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (16 samples, 0.05%)</title><rect x="287.5" y="291.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="290.5" y="302.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (16 samples, 0.05%)</title><rect x="287.5" y="275.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="290.5" y="286.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="287.5" y="259.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="290.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findGetter (120 samples, 0.41%)</title><rect x="288.2" y="371.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="291.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectField (88 samples, 0.30%)</title><rect x="288.2" y="355.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="291.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectFieldCommon (88 samples, 0.30%)</title><rect x="288.2" y="339.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (88 samples, 0.30%)</title><rect x="288.2" y="323.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="291.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (88 samples, 0.30%)</title><rect x="288.2" y="307.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="291.2" y="318.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (16 samples, 0.05%)</title><rect x="288.2" y="291.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="291.2" y="302.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (16 samples, 0.05%)</title><rect x="288.2" y="275.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="291.2" y="286.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="288.2" y="259.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="291.2" y="270.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (16 samples, 0.05%)</title><rect x="288.8" y="291.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="291.8" y="302.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (16 samples, 0.05%)</title><rect x="288.8" y="275.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="291.8" y="286.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="288.8" y="259.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="291.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getMethodOrFieldType (16 samples, 0.05%)</title><rect x="289.5" y="291.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.methodType (16 samples, 0.05%)</title><rect x="289.5" y="275.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="292.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (16 samples, 0.05%)</title><rect x="289.5" y="259.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="292.5" y="270.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (16 samples, 0.05%)</title><rect x="289.5" y="243.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="292.5" y="254.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (16 samples, 0.05%)</title><rect x="289.5" y="227.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="292.5" y="238.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="289.5" y="211.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="292.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (40 samples, 0.14%)</title><rect x="290.1" y="291.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="293.1" y="302.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (16 samples, 0.05%)</title><rect x="290.1" y="275.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="293.1" y="286.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (16 samples, 0.05%)</title><rect x="290.1" y="259.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="293.1" y="270.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="290.1" y="243.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="293.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (24 samples, 0.08%)</title><rect x="290.8" y="275.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.8" y="286.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (16 samples, 0.05%)</title><rect x="290.8" y="259.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="293.8" y="270.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (16 samples, 0.05%)</title><rect x="290.8" y="243.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="293.8" y="254.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="290.8" y="227.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="293.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.resolveOrFail (32 samples, 0.11%)</title><rect x="291.7" y="355.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.7" y="366.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (16 samples, 0.05%)</title><rect x="291.7" y="339.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="294.7" y="350.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (16 samples, 0.05%)</title><rect x="291.7" y="323.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="294.7" y="334.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="291.7" y="307.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="294.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolveOrFail (16 samples, 0.05%)</title><rect x="292.4" y="339.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="295.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolve (16 samples, 0.05%)</title><rect x="292.4" y="323.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.clone (16 samples, 0.05%)</title><rect x="292.4" y="307.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="295.4" y="318.0"></text>
</g>
<g>
<title>java/lang/Object.clone (16 samples, 0.05%)</title><rect x="292.4" y="291.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="295.4" y="302.0"></text>
</g>
<g>
<title>JVM_Clone (16 samples, 0.05%)</title><rect x="292.4" y="275.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="295.4" y="286.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="292.4" y="259.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="295.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.makeNominalGetters (22 samples, 0.08%)</title><rect x="293.2" y="403.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.2" y="414.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (16 samples, 0.05%)</title><rect x="293.2" y="387.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="296.2" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (16 samples, 0.05%)</title><rect x="293.2" y="371.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="296.2" y="382.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="293.2" y="355.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="296.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (10 samples, 0.03%)</title><rect x="294.2" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.dropParameterTypes (12 samples, 0.04%)</title><rect x="294.7" y="515.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="297.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (10 samples, 0.03%)</title><rect x="294.7" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="297.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.prepender (20 samples, 0.07%)</title><rect x="295.4" y="547.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.insertArguments (16 samples, 0.05%)</title><rect x="295.6" y="531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="298.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.bindArgumentL (16 samples, 0.05%)</title><rect x="295.6" y="515.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.bindArgumentL (12 samples, 0.04%)</title><rect x="295.7" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="298.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.bindArgumentType (8 samples, 0.03%)</title><rect x="295.9" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.dropParameterTypes (8 samples, 0.03%)</title><rect x="295.9" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.parseRecipe (13 samples, 0.04%)</title><rect x="296.3" y="563.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.03%)</title><rect x="296.4" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="299.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="296.4" y="531.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="299.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers.linkToTargetMethod (466 samples, 1.59%)</title><rect x="296.8" y="659.0" width="18.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="299.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers.callSiteForm (466 samples, 1.59%)</title><rect x="296.8" y="643.0" width="18.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="299.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.&lt;init&gt; (267 samples, 0.91%)</title><rect x="297.0" y="627.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$NamedFunction.&lt;init&gt; (265 samples, 0.91%)</title><rect x="297.0" y="611.0" width="10.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="300.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers.basicInvoker (263 samples, 0.90%)</title><rect x="297.0" y="595.0" width="10.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="300.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (259 samples, 0.89%)</title><rect x="297.0" y="579.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="300.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (259 samples, 0.89%)</title><rect x="297.0" y="563.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="300.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (259 samples, 0.89%)</title><rect x="297.0" y="547.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (251 samples, 0.86%)</title><rect x="297.1" y="531.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="300.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (251 samples, 0.86%)</title><rect x="297.1" y="515.0" width="10.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (248 samples, 0.85%)</title><rect x="297.1" y="499.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="300.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makePreparedLambdaForm (247 samples, 0.84%)</title><rect x="297.1" y="483.0" width="10.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (211 samples, 0.72%)</title><rect x="297.6" y="467.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (209 samples, 0.71%)</title><rect x="297.6" y="451.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="300.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.&lt;init&gt; (7 samples, 0.02%)</title><rect x="297.6" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="300.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.&lt;init&gt; (7 samples, 0.02%)</title><rect x="297.6" y="419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.&lt;init&gt; (7 samples, 0.02%)</title><rect x="297.6" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="300.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (184 samples, 0.63%)</title><rect x="297.9" y="435.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="300.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (101 samples, 0.35%)</title><rect x="297.9" y="419.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classData (7 samples, 0.02%)</title><rect x="297.9" y="403.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (41 samples, 0.14%)</title><rect x="298.3" y="403.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="301.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.toMethodDescriptorString (14 samples, 0.05%)</title><rect x="298.6" y="387.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="301.6" y="398.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseMethod (14 samples, 0.05%)</title><rect x="298.6" y="371.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="301.6" y="382.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (10 samples, 0.03%)</title><rect x="298.7" y="355.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="301.7" y="366.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (7 samples, 0.02%)</title><rect x="298.7" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (19 samples, 0.06%)</title><rect x="299.1" y="387.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (13 samples, 0.04%)</title><rect x="299.4" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="302.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (13 samples, 0.04%)</title><rect x="299.4" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (7 samples, 0.02%)</title><rect x="299.6" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="302.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodEpilogue (22 samples, 0.08%)</title><rect x="300.0" y="403.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="303.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMaxs (22 samples, 0.08%)</title><rect x="300.0" y="387.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.computeAllFrames (22 samples, 0.08%)</title><rect x="300.0" y="371.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="303.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.setInputFrameFromDescriptor (21 samples, 0.07%)</title><rect x="300.0" y="355.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (12 samples, 0.04%)</title><rect x="300.4" y="339.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="303.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.04%)</title><rect x="300.4" y="323.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.04%)</title><rect x="300.4" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="303.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodPrologue (14 samples, 0.05%)</title><rect x="300.9" y="403.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (8 samples, 0.03%)</title><rect x="301.1" y="387.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="304.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (7 samples, 0.02%)</title><rect x="301.2" y="371.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="304.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitAnnotation (13 samples, 0.04%)</title><rect x="301.4" y="403.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="304.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/AnnotationWriter.create (13 samples, 0.04%)</title><rect x="301.4" y="387.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classFilePrologue (20 samples, 0.07%)</title><rect x="302.0" y="419.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (58 samples, 0.20%)</title><rect x="302.8" y="419.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (53 samples, 0.18%)</title><rect x="303.0" y="403.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="306.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="303.5" y="387.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="306.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (14 samples, 0.05%)</title><rect x="304.2" y="387.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="307.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (10 samples, 0.03%)</title><rect x="304.4" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (10 samples, 0.03%)</title><rect x="304.4" y="355.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="307.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadMethod (15 samples, 0.05%)</title><rect x="305.3" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.appendParameterTypes (11 samples, 0.04%)</title><rect x="306.2" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="309.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (11 samples, 0.04%)</title><rect x="306.2" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="309.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (10 samples, 0.03%)</title><rect x="306.2" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="309.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.findForm (7 samples, 0.02%)</title><rect x="306.3" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="309.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalize (7 samples, 0.02%)</title><rect x="306.3" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="309.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.invokerType (11 samples, 0.04%)</title><rect x="306.6" y="467.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="309.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (11 samples, 0.04%)</title><rect x="306.6" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="309.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (10 samples, 0.03%)</title><rect x="306.7" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="309.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.findForm (7 samples, 0.02%)</title><rect x="306.8" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="309.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalize (7 samples, 0.02%)</title><rect x="306.8" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (181 samples, 0.62%)</title><rect x="307.8" y="627.0" width="7.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (179 samples, 0.61%)</title><rect x="307.8" y="611.0" width="7.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (157 samples, 0.54%)</title><rect x="308.0" y="595.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (73 samples, 0.25%)</title><rect x="308.0" y="579.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="311.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classData (7 samples, 0.02%)</title><rect x="308.0" y="563.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="311.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (20 samples, 0.07%)</title><rect x="308.3" y="563.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (7 samples, 0.02%)</title><rect x="308.9" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodEpilogue (17 samples, 0.06%)</title><rect x="309.2" y="563.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMaxs (17 samples, 0.06%)</title><rect x="309.2" y="547.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="312.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.computeAllFrames (17 samples, 0.06%)</title><rect x="309.2" y="531.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="312.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.setInputFrameFromDescriptor (16 samples, 0.05%)</title><rect x="309.2" y="515.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="312.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (10 samples, 0.03%)</title><rect x="309.4" y="499.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="312.4" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.03%)</title><rect x="309.4" y="483.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="312.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.03%)</title><rect x="309.4" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodPrologue (14 samples, 0.05%)</title><rect x="309.8" y="563.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="312.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (8 samples, 0.03%)</title><rect x="310.1" y="547.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="313.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (7 samples, 0.02%)</title><rect x="310.1" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="313.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitAnnotation (13 samples, 0.04%)</title><rect x="310.4" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="313.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/AnnotationWriter.create (13 samples, 0.04%)</title><rect x="310.4" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="313.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classFilePrologue (20 samples, 0.07%)</title><rect x="310.9" y="579.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="313.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (59 samples, 0.20%)</title><rect x="311.7" y="579.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="314.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (54 samples, 0.18%)</title><rect x="311.9" y="563.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="312.4" y="547.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (15 samples, 0.05%)</title><rect x="313.2" y="547.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (11 samples, 0.04%)</title><rect x="313.4" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (11 samples, 0.04%)</title><rect x="313.4" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="316.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (7 samples, 0.02%)</title><rect x="313.5" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="316.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadMethod (16 samples, 0.05%)</title><rect x="314.3" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.appendParameterTypes (11 samples, 0.04%)</title><rect x="315.1" y="627.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="318.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (11 samples, 0.04%)</title><rect x="315.1" y="611.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="318.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (10 samples, 0.03%)</title><rect x="315.2" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="318.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.findForm (7 samples, 0.02%)</title><rect x="315.3" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="318.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalize (7 samples, 0.02%)</title><rect x="315.3" y="563.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.3" y="574.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory.&lt;clinit&gt; (190 samples, 0.65%)</title><rect x="315.7" y="691.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="318.7" y="702.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (16 samples, 0.05%)</title><rect x="315.7" y="675.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="318.7" y="686.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (16 samples, 0.05%)</title><rect x="315.7" y="659.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="318.7" y="670.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (16 samples, 0.05%)</title><rect x="315.7" y="643.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="318.7" y="654.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, Thread*) (16 samples, 0.05%)</title><rect x="315.7" y="627.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="318.7" y="638.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, Thread*) (16 samples, 0.05%)</title><rect x="315.7" y="611.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="318.7" y="622.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_bsm(Thread*) (15 samples, 0.05%)</title><rect x="315.7" y="595.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="318.7" y="606.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_args(Thread*) (7 samples, 0.02%)</title><rect x="315.7" y="579.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="318.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (134 samples, 0.46%)</title><rect x="316.3" y="675.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="319.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (134 samples, 0.46%)</title><rect x="316.3" y="659.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="319.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (134 samples, 0.46%)</title><rect x="316.3" y="643.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="319.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (134 samples, 0.46%)</title><rect x="316.3" y="627.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (133 samples, 0.45%)</title><rect x="316.3" y="611.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="319.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x0000000800c78040.invokeStatic (133 samples, 0.45%)</title><rect x="316.3" y="595.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="319.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (133 samples, 0.45%)</title><rect x="316.3" y="579.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="319.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.&lt;init&gt; (28 samples, 0.10%)</title><rect x="316.4" y="563.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="319.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.lambdaClassName (8 samples, 0.03%)</title><rect x="316.5" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="319.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.toMethodDescriptorString (11 samples, 0.04%)</title><rect x="316.9" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="319.9" y="558.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseMethod (11 samples, 0.04%)</title><rect x="316.9" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="319.9" y="542.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (7 samples, 0.02%)</title><rect x="317.1" y="515.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (104 samples, 0.36%)</title><rect x="317.5" y="563.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="320.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (81 samples, 0.28%)</title><rect x="317.7" y="547.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="320.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateInnerClass (81 samples, 0.28%)</title><rect x="317.7" y="531.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="320.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate (25 samples, 0.09%)</title><rect x="317.9" y="515.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="320.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.convertType (18 samples, 0.06%)</title><rect x="317.9" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="320.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.cast (8 samples, 0.03%)</title><rect x="317.9" y="483.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="320.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.descriptorToName (8 samples, 0.03%)</title><rect x="317.9" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="320.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.03%)</title><rect x="317.9" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="320.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="317.9" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.9" y="446.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (10 samples, 0.03%)</title><rect x="318.2" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="321.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodVisitor.visitMethodInsn (7 samples, 0.02%)</title><rect x="318.6" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="321.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (7 samples, 0.02%)</title><rect x="318.6" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="321.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (7 samples, 0.02%)</title><rect x="318.6" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="321.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (7 samples, 0.02%)</title><rect x="318.6" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="321.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateConstructor (9 samples, 0.03%)</title><rect x="318.9" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="321.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="318.9" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="321.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.defineHiddenClass (25 samples, 0.09%)</title><rect x="319.3" y="515.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="322.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.makeHiddenClassDefiner (20 samples, 0.07%)</title><rect x="319.4" y="499.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassFile.newInstance (18 samples, 0.06%)</title><rect x="319.4" y="483.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="322.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visit (8 samples, 0.03%)</title><rect x="320.4" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.constant (8 samples, 0.03%)</title><rect x="321.0" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="324.0" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (7 samples, 0.02%)</title><rect x="321.4" y="547.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.4" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (7 samples, 0.02%)</title><rect x="321.4" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$1.run (7 samples, 0.02%)</title><rect x="321.4" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$1.run (7 samples, 0.02%)</title><rect x="321.4" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="324.4" y="510.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors (7 samples, 0.02%)</title><rect x="321.4" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="324.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (14 samples, 0.05%)</title><rect x="321.7" y="675.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (12 samples, 0.04%)</title><rect x="321.8" y="659.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="324.8" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (25 samples, 0.09%)</title><rect x="322.3" y="675.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.3" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (25 samples, 0.09%)</title><rect x="322.3" y="659.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.3" y="670.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory$$Lambda$207.0x0000000800b69b70.run (25 samples, 0.09%)</title><rect x="322.3" y="643.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="325.3" y="654.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory.lambda$static$8 (25 samples, 0.09%)</title><rect x="322.3" y="627.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="325.3" y="638.0"></text>
</g>
<g>
<title>java/lang/System.loadLibrary (23 samples, 0.08%)</title><rect x="322.4" y="611.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="325.4" y="622.0"></text>
</g>
<g>
<title>java/lang/Runtime.loadLibrary0 (23 samples, 0.08%)</title><rect x="322.4" y="595.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="325.4" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadLibrary (23 samples, 0.08%)</title><rect x="322.4" y="579.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="325.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/NativeLibraries.loadLibrary (23 samples, 0.08%)</title><rect x="322.4" y="563.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/NativeLibraries.findFromPaths (23 samples, 0.08%)</title><rect x="322.4" y="547.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="325.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/NativeLibraries.loadLibrary (14 samples, 0.05%)</title><rect x="322.8" y="531.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.8" y="542.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory.getMemoryMXBean (18,649 samples, 63.79%)</title><rect x="323.3" y="691.0" width="752.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.3" y="702.0">java/lang/management/ManagementFactory.getMemoryMXBean</text>
</g>
<g>
<title>java/lang/management/ManagementFactory.getPlatformMXBean (18,645 samples, 63.77%)</title><rect x="323.5" y="675.0" width="752.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.5" y="686.0">java/lang/management/ManagementFactory.getPlatformMXBean</text>
</g>
<g>
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder.&lt;clinit&gt; (3,435 samples, 11.75%)</title><rect x="323.6" y="659.0" width="138.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.6" y="670.0">java/lang/managem..</text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (56 samples, 0.19%)</title><rect x="323.7" y="643.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="326.7" y="654.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (56 samples, 0.19%)</title><rect x="323.7" y="627.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="326.7" y="638.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (56 samples, 0.19%)</title><rect x="323.7" y="611.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="326.7" y="622.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, Thread*) (56 samples, 0.19%)</title><rect x="323.7" y="595.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="326.7" y="606.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, Thread*) (56 samples, 0.19%)</title><rect x="323.7" y="579.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="326.7" y="590.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_bsm(Thread*) (52 samples, 0.18%)</title><rect x="323.7" y="563.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="326.7" y="574.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_args(Thread*) (35 samples, 0.12%)</title><rect x="323.7" y="547.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="326.7" y="558.0"></text>
</g>
<g>
<title>ConstantPool::copy_bootstrap_arguments_at_impl(constantPoolHandle const&amp;, int, int, int, objArrayHandle, int, bool, Handle, Thread*) (31 samples, 0.11%)</title><rect x="323.7" y="531.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="326.7" y="542.0"></text>
</g>
<g>
<title>ConstantPool::resolve_constant_at_impl(constantPoolHandle const&amp;, int, int, bool*, Thread*) (31 samples, 0.11%)</title><rect x="323.7" y="515.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="326.7" y="526.0"></text>
</g>
<g>
<title>SystemDictionary::link_method_handle_constant(Klass*, int, Klass*, Symbol*, Symbol*, Thread*) (27 samples, 0.09%)</title><rect x="323.9" y="499.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="326.9" y="510.0"></text>
</g>
<g>
<title>java_lang_String::create_from_symbol(Symbol*, Thread*) (16 samples, 0.05%)</title><rect x="324.3" y="483.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="327.3" y="494.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="324.3" y="467.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="327.3" y="478.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="324.3" y="451.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="327.3" y="462.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.03%)</title><rect x="324.7" y="467.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="327.7" y="478.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="324.7" y="451.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="327.7" y="462.0"></text>
</g>
<g>
<title>java_lang_String::create_from_symbol(Symbol*, Thread*) (8 samples, 0.03%)</title><rect x="325.5" y="547.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="328.5" y="558.0"></text>
</g>
<g>
<title>java/io/FilePermission.&lt;clinit&gt; (30 samples, 0.10%)</title><rect x="326.1" y="643.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystem.getPath (20 samples, 0.07%)</title><rect x="326.6" y="627.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.6" y="638.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.&lt;init&gt; (16 samples, 0.05%)</title><rect x="326.7" y="611.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.encode (16 samples, 0.05%)</title><rect x="326.7" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.findMethodHandleType (19 samples, 0.06%)</title><rect x="327.4" y="643.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="330.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (19 samples, 0.06%)</title><rect x="327.4" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.4" y="638.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (11 samples, 0.04%)</title><rect x="327.4" y="611.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="330.4" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (11 samples, 0.04%)</title><rect x="327.4" y="595.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="330.4" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (11 samples, 0.04%)</title><rect x="327.4" y="579.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="330.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (705 samples, 2.41%)</title><rect x="328.1" y="643.0" width="28.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="331.1" y="654.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (705 samples, 2.41%)</title><rect x="328.1" y="627.0" width="28.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="331.1" y="638.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (705 samples, 2.41%)</title><rect x="328.1" y="611.0" width="28.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.1" y="622.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (705 samples, 2.41%)</title><rect x="328.1" y="595.0" width="28.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="331.1" y="606.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (701 samples, 2.40%)</title><rect x="328.1" y="579.0" width="28.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="331.1" y="590.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x0000000800c78040.invokeStatic (701 samples, 2.40%)</title><rect x="328.1" y="563.0" width="28.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.1" y="574.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (701 samples, 2.40%)</title><rect x="328.1" y="547.0" width="28.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="331.1" y="558.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.&lt;init&gt; (133 samples, 0.45%)</title><rect x="328.3" y="531.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.replace (8 samples, 0.03%)</title><rect x="328.4" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="331.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (8 samples, 0.03%)</title><rect x="328.4" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="331.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.lambdaClassName (32 samples, 0.11%)</title><rect x="328.9" y="515.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.replace (8 samples, 0.03%)</title><rect x="329.1" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (8 samples, 0.03%)</title><rect x="329.1" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="332.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.03%)</title><rect x="329.6" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.6" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.03%)</title><rect x="329.6" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="332.6" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.03%)</title><rect x="329.6" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.6" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.03%)</title><rect x="329.6" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.6" y="462.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.03%)</title><rect x="329.6" y="435.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="332.6" y="446.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.03%)</title><rect x="329.6" y="419.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="332.6" y="430.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="329.6" y="403.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="332.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.03%)</title><rect x="329.9" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="332.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="329.9" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="332.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.toMethodDescriptorString (65 samples, 0.22%)</title><rect x="330.4" y="515.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.4" y="526.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseMethod (65 samples, 0.22%)</title><rect x="330.4" y="499.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="333.4" y="510.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (52 samples, 0.18%)</title><rect x="330.9" y="483.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="333.9" y="494.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (47 samples, 0.16%)</title><rect x="330.9" y="467.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.replace (12 samples, 0.04%)</title><rect x="331.2" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (12 samples, 0.04%)</title><rect x="331.2" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="334.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.03%)</title><rect x="332.0" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="335.0" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.03%)</title><rect x="332.0" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="335.0" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (9 samples, 0.03%)</title><rect x="332.0" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="335.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.03%)</title><rect x="332.0" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.0" y="414.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (9 samples, 0.03%)</title><rect x="332.0" y="387.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="335.0" y="398.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.03%)</title><rect x="332.0" y="371.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="335.0" y="382.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (9 samples, 0.03%)</title><rect x="332.0" y="355.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="335.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (12 samples, 0.04%)</title><rect x="332.3" y="451.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.04%)</title><rect x="332.3" y="435.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="335.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.&lt;init&gt; (16 samples, 0.05%)</title><rect x="333.0" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="336.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.&lt;init&gt; (16 samples, 0.05%)</title><rect x="333.0" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="336.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.&lt;init&gt; (12 samples, 0.04%)</title><rect x="333.2" y="483.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="336.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (564 samples, 1.93%)</title><rect x="333.7" y="531.0" width="22.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="336.7" y="542.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (8 samples, 0.03%)</title><rect x="333.7" y="515.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="336.7" y="526.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="333.7" y="499.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="336.7" y="510.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="333.7" y="483.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="336.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/ConstantCallSite.&lt;init&gt; (8 samples, 0.03%)</title><rect x="334.1" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="337.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.&lt;init&gt; (8 samples, 0.03%)</title><rect x="334.1" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives$CallSiteContext.make (8 samples, 0.03%)</title><rect x="334.1" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="337.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (472 samples, 1.61%)</title><rect x="334.5" y="515.0" width="19.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="337.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateInnerClass (472 samples, 1.61%)</title><rect x="334.5" y="499.0" width="19.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="337.5" y="510.0"></text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (8 samples, 0.03%)</title><rect x="334.6" y="483.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="337.6" y="494.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (8 samples, 0.03%)</title><rect x="334.6" y="467.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="337.6" y="478.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="334.6" y="451.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="337.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.replace (8 samples, 0.03%)</title><rect x="334.9" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (8 samples, 0.03%)</title><rect x="334.9" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate (248 samples, 0.85%)</title><rect x="335.3" y="483.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.convertArgumentTypes (144 samples, 0.49%)</title><rect x="335.3" y="467.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="338.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.convertType (144 samples, 0.49%)</title><rect x="335.3" y="451.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.cast (40 samples, 0.14%)</title><rect x="335.3" y="435.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.descriptorToName (32 samples, 0.11%)</title><rect x="335.3" y="419.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.11%)</title><rect x="335.3" y="403.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="338.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.11%)</title><rect x="335.3" y="387.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.3" y="398.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (16 samples, 0.05%)</title><rect x="335.3" y="371.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="338.3" y="382.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (16 samples, 0.05%)</title><rect x="335.3" y="355.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="338.3" y="366.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="335.3" y="339.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="338.3" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.05%)</title><rect x="335.9" y="371.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.9" y="382.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (16 samples, 0.05%)</title><rect x="335.9" y="355.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="338.9" y="366.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (16 samples, 0.05%)</title><rect x="335.9" y="339.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="338.9" y="350.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="335.9" y="323.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="338.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodVisitor.visitTypeInsn (8 samples, 0.03%)</title><rect x="336.6" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitTypeInsn (8 samples, 0.03%)</title><rect x="336.6" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="339.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantClass (8 samples, 0.03%)</title><rect x="336.6" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="339.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8Reference (8 samples, 0.03%)</title><rect x="336.6" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="339.6" y="382.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (104 samples, 0.36%)</title><rect x="336.9" y="435.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.9" y="446.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (8 samples, 0.03%)</title><rect x="336.9" y="419.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="339.9" y="430.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="336.9" y="403.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="339.9" y="414.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="336.9" y="387.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="339.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (8 samples, 0.03%)</title><rect x="337.2" y="419.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.2" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (8 samples, 0.03%)</title><rect x="337.2" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.2" y="414.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (8 samples, 0.03%)</title><rect x="337.2" y="387.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="340.2" y="398.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.03%)</title><rect x="337.2" y="371.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="340.2" y="382.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="337.2" y="355.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="340.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (16 samples, 0.05%)</title><rect x="337.5" y="419.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.05%)</title><rect x="337.5" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.5" y="414.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.03%)</title><rect x="337.5" y="387.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="340.5" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="337.5" y="371.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="340.5" y="382.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="337.5" y="355.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="340.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.03%)</title><rect x="337.9" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.9" y="398.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.03%)</title><rect x="337.9" y="371.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="340.9" y="382.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.03%)</title><rect x="337.9" y="355.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="340.9" y="366.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="337.9" y="339.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="340.9" y="350.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (72 samples, 0.25%)</title><rect x="338.2" y="419.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.2" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (64 samples, 0.22%)</title><rect x="338.2" y="403.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.2" y="414.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (8 samples, 0.03%)</title><rect x="338.2" y="387.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="341.2" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="338.2" y="371.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="341.2" y="382.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="338.2" y="355.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="341.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.replace (16 samples, 0.05%)</title><rect x="338.5" y="387.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="341.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (16 samples, 0.05%)</title><rect x="338.5" y="371.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.5" y="382.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.03%)</title><rect x="338.5" y="355.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="341.5" y="366.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="338.5" y="339.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="341.5" y="350.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="338.5" y="323.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="341.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (8 samples, 0.03%)</title><rect x="338.8" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="341.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (8 samples, 0.03%)</title><rect x="338.8" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="341.8" y="350.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (8 samples, 0.03%)</title><rect x="338.8" y="323.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="341.8" y="334.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.03%)</title><rect x="338.8" y="307.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="341.8" y="318.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="338.8" y="291.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="341.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (8 samples, 0.03%)</title><rect x="339.1" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.1" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (8 samples, 0.03%)</title><rect x="339.1" y="371.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="342.1" y="382.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (8 samples, 0.03%)</title><rect x="339.1" y="355.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="342.1" y="366.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.03%)</title><rect x="339.1" y="339.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="342.1" y="350.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="339.1" y="323.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="342.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (16 samples, 0.05%)</title><rect x="339.5" y="387.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.5" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (16 samples, 0.05%)</title><rect x="339.5" y="371.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="342.5" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (16 samples, 0.05%)</title><rect x="339.5" y="355.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="342.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.05%)</title><rect x="339.5" y="339.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="342.5" y="350.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (16 samples, 0.05%)</title><rect x="339.5" y="323.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="342.5" y="334.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (16 samples, 0.05%)</title><rect x="339.5" y="307.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="342.5" y="318.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="339.5" y="291.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="342.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (16 samples, 0.05%)</title><rect x="340.1" y="387.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="343.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.05%)</title><rect x="340.1" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="343.1" y="382.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.03%)</title><rect x="340.1" y="355.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="343.1" y="366.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="340.1" y="339.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="343.1" y="350.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="340.1" y="323.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="343.1" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.03%)</title><rect x="340.4" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="343.4" y="366.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.03%)</title><rect x="340.4" y="339.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="343.4" y="350.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.03%)</title><rect x="340.4" y="323.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="343.4" y="334.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="340.4" y="307.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="343.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.03%)</title><rect x="340.8" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.8" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.03%)</title><rect x="340.8" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="343.8" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.03%)</title><rect x="340.8" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="343.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.03%)</title><rect x="340.8" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="343.8" y="366.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.03%)</title><rect x="340.8" y="339.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="343.8" y="350.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.03%)</title><rect x="340.8" y="323.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="343.8" y="334.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="340.8" y="307.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="343.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.convertType (79 samples, 0.27%)</title><rect x="341.1" y="467.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="344.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.cast (32 samples, 0.11%)</title><rect x="341.1" y="451.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="344.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.descriptorToName (32 samples, 0.11%)</title><rect x="341.1" y="435.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="344.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.11%)</title><rect x="341.1" y="419.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="344.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.11%)</title><rect x="341.1" y="403.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="344.1" y="414.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (16 samples, 0.05%)</title><rect x="341.1" y="387.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="344.1" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (16 samples, 0.05%)</title><rect x="341.1" y="371.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="344.1" y="382.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="341.1" y="355.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="344.1" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.05%)</title><rect x="341.7" y="387.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="344.7" y="398.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (16 samples, 0.05%)</title><rect x="341.7" y="371.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="344.7" y="382.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (16 samples, 0.05%)</title><rect x="341.7" y="355.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="344.7" y="366.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="341.7" y="339.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="344.7" y="350.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (47 samples, 0.16%)</title><rect x="342.4" y="451.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="345.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.03%)</title><rect x="342.7" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="345.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="342.7" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="345.7" y="430.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (31 samples, 0.11%)</title><rect x="343.0" y="435.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="346.0" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (28 samples, 0.10%)</title><rect x="343.0" y="419.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="346.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.replace (8 samples, 0.03%)</title><rect x="343.2" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="346.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (8 samples, 0.03%)</title><rect x="343.2" y="387.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="346.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.03%)</title><rect x="343.8" y="403.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="346.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="343.8" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodVisitor.visitMethodInsn (25 samples, 0.09%)</title><rect x="344.3" y="467.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="347.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (25 samples, 0.09%)</title><rect x="344.3" y="451.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="347.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (25 samples, 0.09%)</title><rect x="344.3" y="435.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (25 samples, 0.09%)</title><rect x="344.3" y="419.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="347.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantClass (7 samples, 0.02%)</title><rect x="344.4" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="347.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8Reference (7 samples, 0.02%)</title><rect x="344.4" y="387.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (14 samples, 0.05%)</title><rect x="344.7" y="403.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8 (10 samples, 0.03%)</title><rect x="344.9" y="387.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="347.9" y="398.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.03%)</title><rect x="344.9" y="371.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="347.9" y="382.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="344.9" y="355.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="347.9" y="366.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="344.9" y="339.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="347.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateConstructor (32 samples, 0.11%)</title><rect x="345.3" y="483.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (24 samples, 0.08%)</title><rect x="345.3" y="467.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (20 samples, 0.07%)</title><rect x="345.4" y="451.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="348.4" y="462.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (8 samples, 0.03%)</title><rect x="345.4" y="435.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="348.4" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="345.4" y="419.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="348.4" y="430.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="345.4" y="403.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="348.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8 (8 samples, 0.03%)</title><rect x="345.9" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.9" y="446.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.03%)</title><rect x="345.9" y="419.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="348.9" y="430.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="345.9" y="403.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="348.9" y="414.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="345.9" y="387.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="348.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (8 samples, 0.03%)</title><rect x="346.2" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="349.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (8 samples, 0.03%)</title><rect x="346.2" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="349.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (8 samples, 0.03%)</title><rect x="346.2" y="435.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="349.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.defineHiddenClass (100 samples, 0.34%)</title><rect x="346.6" y="483.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="349.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassDefiner.defineClassAsLookup (12 samples, 0.04%)</title><rect x="346.7" y="467.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassDefiner.defineClass (8 samples, 0.03%)</title><rect x="346.9" y="451.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="349.9" y="462.0"></text>
</g>
<g>
<title>java/lang/System$2.defineClass (8 samples, 0.03%)</title><rect x="346.9" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="349.9" y="446.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass0 (8 samples, 0.03%)</title><rect x="346.9" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="349.9" y="430.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass0 (8 samples, 0.03%)</title><rect x="346.9" y="403.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="349.9" y="414.0"></text>
</g>
<g>
<title>JVM_LookupDefineClass (8 samples, 0.03%)</title><rect x="346.9" y="387.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="349.9" y="398.0"></text>
</g>
<g>
<title>jvm_lookup_define_class(JNIEnv_*, _jclass*, char const*, signed char const*, int, _jobject*, unsigned char, int, _jobject*, Thread*) (8 samples, 0.03%)</title><rect x="346.9" y="371.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="349.9" y="382.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, ClassFileStream*, ClassLoadInfo const&amp;, Thread*) (8 samples, 0.03%)</title><rect x="346.9" y="355.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="349.9" y="366.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (8 samples, 0.03%)</title><rect x="346.9" y="339.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="349.9" y="350.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, ClassInstanceInfo const&amp;, Thread*) (8 samples, 0.03%)</title><rect x="346.9" y="323.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="349.9" y="334.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, ClassInstanceInfo const&amp;, Thread*) (8 samples, 0.03%)</title><rect x="346.9" y="307.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="349.9" y="318.0"></text>
</g>
<g>
<title>java_lang_Class::create_mirror(Klass*, Handle, Handle, Handle, Handle, Thread*) (8 samples, 0.03%)</title><rect x="346.9" y="291.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="349.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.makeHiddenClassDefiner (80 samples, 0.27%)</title><rect x="347.2" y="467.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="350.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassFile.newInstance (72 samples, 0.25%)</title><rect x="347.2" y="451.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="350.2" y="462.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (8 samples, 0.03%)</title><rect x="347.2" y="435.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="350.2" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="347.2" y="419.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="350.2" y="430.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="347.2" y="403.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="350.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.03%)</title><rect x="347.7" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="350.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="347.7" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="350.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassReader.&lt;init&gt; (8 samples, 0.03%)</title><rect x="348.0" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="351.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassReader.&lt;init&gt; (8 samples, 0.03%)</title><rect x="348.0" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="351.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassReader.&lt;init&gt; (8 samples, 0.03%)</title><rect x="348.0" y="403.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="351.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassReader.readConst (12 samples, 0.04%)</title><rect x="348.3" y="435.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="351.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassReader.readUTF8 (8 samples, 0.03%)</title><rect x="348.3" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassReader.readUtf (8 samples, 0.03%)</title><rect x="348.3" y="403.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassReader.readUtf (8 samples, 0.03%)</title><rect x="348.3" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="351.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getClassName (8 samples, 0.03%)</title><rect x="348.8" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="351.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.replace (8 samples, 0.03%)</title><rect x="348.8" y="419.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="351.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (8 samples, 0.03%)</title><rect x="348.8" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="351.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (24 samples, 0.08%)</title><rect x="349.2" y="435.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.03%)</title><rect x="349.5" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.5" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.03%)</title><rect x="349.5" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="352.5" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.03%)</title><rect x="349.5" y="387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="352.5" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.03%)</title><rect x="349.5" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="352.5" y="382.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.03%)</title><rect x="349.5" y="355.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="352.5" y="366.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.03%)</title><rect x="349.5" y="339.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="352.5" y="350.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="349.5" y="323.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="352.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.03%)</title><rect x="349.8" y="419.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="352.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="349.8" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="352.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.makeHiddenClassDefiner (8 samples, 0.03%)</title><rect x="350.1" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.toByteArray (12 samples, 0.04%)</title><rect x="350.6" y="483.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visit (36 samples, 0.12%)</title><rect x="351.1" y="483.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="354.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantClass (20 samples, 0.07%)</title><rect x="351.3" y="467.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="354.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8Reference (20 samples, 0.07%)</title><rect x="351.3" y="451.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="354.3" y="462.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (8 samples, 0.03%)</title><rect x="351.3" y="435.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="354.3" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="351.3" y="419.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="354.3" y="430.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="351.3" y="403.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="354.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8 (10 samples, 0.03%)</title><rect x="351.7" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="354.7" y="446.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.03%)</title><rect x="351.7" y="419.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="354.7" y="430.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="351.7" y="403.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="354.7" y="414.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="351.7" y="387.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="354.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.setMajorVersionAndClassName (12 samples, 0.04%)</title><rect x="352.1" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="355.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantClass (12 samples, 0.04%)</title><rect x="352.1" y="451.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="355.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8Reference (12 samples, 0.04%)</title><rect x="352.1" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="355.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8 (8 samples, 0.03%)</title><rect x="352.2" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="355.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (24 samples, 0.08%)</title><rect x="352.5" y="483.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="355.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (20 samples, 0.07%)</title><rect x="352.7" y="467.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="355.7" y="478.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (8 samples, 0.03%)</title><rect x="352.7" y="451.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="355.7" y="462.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="352.7" y="435.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="355.7" y="446.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="352.7" y="419.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="355.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8 (8 samples, 0.03%)</title><rect x="353.2" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.2" y="462.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.03%)</title><rect x="353.2" y="435.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="356.2" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="353.2" y="419.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="356.2" y="430.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="353.2" y="403.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="356.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.constant (32 samples, 0.11%)</title><rect x="353.5" y="515.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.bindTo (16 samples, 0.05%)</title><rect x="353.5" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="356.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.bindArgumentL (16 samples, 0.05%)</title><rect x="353.5" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="356.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.bindArgumentL (16 samples, 0.05%)</title><rect x="353.5" y="467.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="356.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.bindArgumentL (12 samples, 0.04%)</title><rect x="353.7" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="356.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.identity (16 samples, 0.05%)</title><rect x="354.2" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="357.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.makeIdentity (16 samples, 0.05%)</title><rect x="354.2" y="483.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="357.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleImpl.makeIntrinsic (8 samples, 0.03%)</title><rect x="354.2" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="357.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.methodType (8 samples, 0.03%)</title><rect x="354.5" y="467.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="357.5" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (12 samples, 0.04%)</title><rect x="354.8" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="357.8" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstanceWithCaller (12 samples, 0.04%)</title><rect x="354.8" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.8" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.acquireConstructorAccessor (8 samples, 0.03%)</title><rect x="354.8" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="357.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.newConstructorAccessor (8 samples, 0.03%)</title><rect x="354.8" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="357.8" y="478.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (8 samples, 0.03%)</title><rect x="354.8" y="451.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="357.8" y="462.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="354.8" y="435.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="357.8" y="446.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="354.8" y="419.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="357.8" y="430.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (28 samples, 0.10%)</title><rect x="355.3" y="515.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="358.3" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (28 samples, 0.10%)</title><rect x="355.3" y="499.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$1.run (28 samples, 0.10%)</title><rect x="355.3" y="483.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$1.run (28 samples, 0.10%)</title><rect x="355.3" y="467.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="358.3" y="478.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors (28 samples, 0.10%)</title><rect x="355.3" y="451.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="358.3" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.copyConstructors (8 samples, 0.03%)</title><rect x="355.3" y="435.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.3" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (20 samples, 0.07%)</title><rect x="355.6" y="435.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="358.6" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors0 (12 samples, 0.04%)</title><rect x="355.6" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.6" y="430.0"></text>
</g>
<g>
<title>JVM_GetClassDeclaredConstructors (12 samples, 0.04%)</title><rect x="355.6" y="403.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="358.6" y="414.0"></text>
</g>
<g>
<title>get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, Thread*) (12 samples, 0.04%)</title><rect x="355.6" y="387.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="358.6" y="398.0"></text>
</g>
<g>
<title>Reflection::new_constructor(methodHandle const&amp;, Thread*) (8 samples, 0.03%)</title><rect x="355.8" y="371.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="358.8" y="382.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (8 samples, 0.03%)</title><rect x="356.1" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.1" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.newReflectionData (8 samples, 0.03%)</title><rect x="356.1" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="359.1" y="414.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (8 samples, 0.03%)</title><rect x="356.1" y="387.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="359.1" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="356.1" y="371.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="359.1" y="382.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="356.1" y="355.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="359.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (261 samples, 0.89%)</title><rect x="356.6" y="643.0" width="10.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="359.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (256 samples, 0.88%)</title><rect x="356.8" y="627.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="359.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodForConstant (227 samples, 0.78%)</title><rect x="357.2" y="611.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="360.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodNoSecurityManager (227 samples, 0.78%)</title><rect x="357.2" y="595.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodCommon (227 samples, 0.78%)</title><rect x="357.2" y="579.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="360.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (227 samples, 0.78%)</title><rect x="357.2" y="563.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="360.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (216 samples, 0.74%)</title><rect x="357.4" y="547.0" width="8.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (213 samples, 0.73%)</title><rect x="357.4" y="531.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="360.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (213 samples, 0.73%)</title><rect x="357.4" y="515.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="360.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makePreparedLambdaForm (212 samples, 0.73%)</title><rect x="357.4" y="499.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="360.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (195 samples, 0.67%)</title><rect x="357.9" y="483.0" width="7.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="360.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (193 samples, 0.66%)</title><rect x="357.9" y="467.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="360.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.&lt;init&gt; (7 samples, 0.02%)</title><rect x="357.9" y="451.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="360.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.&lt;init&gt; (7 samples, 0.02%)</title><rect x="357.9" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="360.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.&lt;init&gt; (7 samples, 0.02%)</title><rect x="357.9" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="360.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (160 samples, 0.55%)</title><rect x="358.2" y="451.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="361.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (77 samples, 0.26%)</title><rect x="358.2" y="435.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="361.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classData (7 samples, 0.02%)</title><rect x="358.2" y="419.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="361.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (27 samples, 0.09%)</title><rect x="358.6" y="419.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="361.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (19 samples, 0.06%)</title><rect x="358.9" y="403.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="361.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (13 samples, 0.04%)</title><rect x="359.1" y="387.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (13 samples, 0.04%)</title><rect x="359.1" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="362.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (7 samples, 0.02%)</title><rect x="359.4" y="355.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="362.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodEpilogue (19 samples, 0.06%)</title><rect x="359.7" y="419.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMaxs (19 samples, 0.06%)</title><rect x="359.7" y="403.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="362.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.computeAllFrames (19 samples, 0.06%)</title><rect x="359.7" y="387.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="362.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.setInputFrameFromDescriptor (18 samples, 0.06%)</title><rect x="359.7" y="371.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodPrologue (8 samples, 0.03%)</title><rect x="360.5" y="419.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="363.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (8 samples, 0.03%)</title><rect x="360.5" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="363.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (7 samples, 0.02%)</title><rect x="360.5" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="363.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitAnnotation (13 samples, 0.04%)</title><rect x="360.8" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="363.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/AnnotationWriter.create (13 samples, 0.04%)</title><rect x="360.8" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="363.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classFilePrologue (20 samples, 0.07%)</title><rect x="361.3" y="435.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="364.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (58 samples, 0.20%)</title><rect x="362.1" y="435.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (53 samples, 0.18%)</title><rect x="362.3" y="419.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="362.8" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="365.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (14 samples, 0.05%)</title><rect x="363.6" y="403.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="366.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (10 samples, 0.03%)</title><rect x="363.7" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="366.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (10 samples, 0.03%)</title><rect x="363.7" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="366.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadMethod (15 samples, 0.05%)</title><rect x="364.7" y="451.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.lookupPregenerated (10 samples, 0.03%)</title><rect x="365.3" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="368.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.resolveFrom (10 samples, 0.03%)</title><rect x="365.3" y="435.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="368.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolveOrNull (9 samples, 0.03%)</title><rect x="365.3" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolve (9 samples, 0.03%)</title><rect x="365.3" y="403.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.resolve (8 samples, 0.03%)</title><rect x="365.3" y="387.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="368.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.resolveOrFail (8 samples, 0.03%)</title><rect x="366.4" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (10 samples, 0.03%)</title><rect x="366.7" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.hashCode (10 samples, 0.03%)</title><rect x="366.7" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="369.7" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (764 samples, 2.61%)</title><rect x="367.1" y="643.0" width="30.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="370.1" y="654.0">ja..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (760 samples, 2.60%)</title><rect x="367.2" y="627.0" width="30.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="370.2" y="638.0">ja..</text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (760 samples, 2.60%)</title><rect x="367.2" y="611.0" width="30.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="370.2" y="622.0">ja..</text>
</g>
<g>
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder$$Lambda$208.0x0000000800b6a398.run (760 samples, 2.60%)</title><rect x="367.2" y="595.0" width="30.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="370.2" y="606.0">ja..</text>
</g>
<g>
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder.lambda$static$0 (760 samples, 2.60%)</title><rect x="367.2" y="579.0" width="30.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="370.2" y="590.0">ja..</text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (11 samples, 0.04%)</title><rect x="367.4" y="563.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="370.4" y="574.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (11 samples, 0.04%)</title><rect x="367.4" y="547.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="370.4" y="558.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (11 samples, 0.04%)</title><rect x="367.4" y="531.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="370.4" y="542.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, Thread*) (11 samples, 0.04%)</title><rect x="367.4" y="515.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="370.4" y="526.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, Thread*) (11 samples, 0.04%)</title><rect x="367.4" y="499.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="370.4" y="510.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_bsm(Thread*) (10 samples, 0.03%)</title><rect x="367.4" y="483.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="370.4" y="494.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_args(Thread*) (7 samples, 0.02%)</title><rect x="367.4" y="467.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="370.4" y="478.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (467 samples, 1.60%)</title><rect x="367.9" y="563.0" width="18.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="370.9" y="574.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.hasNext (125 samples, 0.43%)</title><rect x="367.9" y="547.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="370.9" y="558.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$2.hasNext (125 samples, 0.43%)</title><rect x="367.9" y="531.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="370.9" y="542.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.hasNext (75 samples, 0.26%)</title><rect x="367.9" y="515.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="370.9" y="526.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.hasNextService (75 samples, 0.26%)</title><rect x="367.9" y="499.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="370.9" y="510.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.nextProviderClass (75 samples, 0.26%)</title><rect x="367.9" y="483.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="370.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResources (69 samples, 0.24%)</title><rect x="368.2" y="467.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResources (69 samples, 0.24%)</title><rect x="368.2" y="451.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="371.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (61 samples, 0.21%)</title><rect x="368.3" y="435.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="371.3" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (59 samples, 0.20%)</title><rect x="368.3" y="419.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.3" y="430.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (59 samples, 0.20%)</title><rect x="368.3" y="403.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="371.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (59 samples, 0.20%)</title><rect x="368.3" y="387.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="371.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (59 samples, 0.20%)</title><rect x="368.3" y="371.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="371.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (58 samples, 0.20%)</title><rect x="368.4" y="355.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (58 samples, 0.20%)</title><rect x="368.4" y="339.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (58 samples, 0.20%)</title><rect x="368.4" y="323.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (58 samples, 0.20%)</title><rect x="368.4" y="307.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getAttributes (22 samples, 0.08%)</title><rect x="368.4" y="291.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.slice (11 samples, 0.04%)</title><rect x="368.4" y="275.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="371.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11 samples, 0.04%)</title><rect x="368.4" y="259.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="371.4" y="270.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (11 samples, 0.04%)</title><rect x="368.4" y="243.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="371.4" y="254.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (11 samples, 0.04%)</title><rect x="368.4" y="227.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="371.4" y="238.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (11 samples, 0.04%)</title><rect x="368.4" y="211.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="371.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.decompress (11 samples, 0.04%)</title><rect x="368.8" y="275.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="371.8" y="286.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (11 samples, 0.04%)</title><rect x="368.8" y="259.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="371.8" y="270.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (11 samples, 0.04%)</title><rect x="368.8" y="243.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="371.8" y="254.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (11 samples, 0.04%)</title><rect x="368.8" y="227.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="371.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verify (36 samples, 0.12%)</title><rect x="369.3" y="291.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="372.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.get (33 samples, 0.11%)</title><rect x="369.4" y="275.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="372.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getString (33 samples, 0.11%)</title><rect x="369.4" y="259.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="372.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.stringFromByteBuffer (33 samples, 0.11%)</title><rect x="369.4" y="243.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="372.4" y="254.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (11 samples, 0.04%)</title><rect x="369.4" y="227.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="372.4" y="238.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (11 samples, 0.04%)</title><rect x="369.4" y="211.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="372.4" y="222.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (11 samples, 0.04%)</title><rect x="369.4" y="195.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="372.4" y="206.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (11 samples, 0.04%)</title><rect x="369.8" y="227.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="372.8" y="238.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (11 samples, 0.04%)</title><rect x="369.8" y="211.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="372.8" y="222.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (11 samples, 0.04%)</title><rect x="369.8" y="195.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="372.8" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.04%)</title><rect x="370.3" y="227.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.04%)</title><rect x="370.3" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="373.3" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 0.04%)</title><rect x="370.3" y="195.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="373.3" y="206.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (11 samples, 0.04%)</title><rect x="370.3" y="179.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="373.3" y="190.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (11 samples, 0.04%)</title><rect x="370.3" y="163.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="373.3" y="174.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (11 samples, 0.04%)</title><rect x="370.3" y="147.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="373.3" y="158.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ModuleServicesLookupIterator.hasNext (50 samples, 0.17%)</title><rect x="371.0" y="515.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="374.0" y="526.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.loadProvider (49 samples, 0.17%)</title><rect x="371.0" y="499.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="374.0" y="510.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.findStaticProviderMethod (29 samples, 0.10%)</title><rect x="371.3" y="483.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="374.3" y="494.0"></text>
</g>
<g>
<title>java/lang/System$2.getDeclaredPublicMethods (27 samples, 0.09%)</title><rect x="371.4" y="467.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="374.4" y="478.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredPublicMethods (27 samples, 0.09%)</title><rect x="371.4" y="451.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.4" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredMethods (25 samples, 0.09%)</title><rect x="371.5" y="435.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.5" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredMethods0 (21 samples, 0.07%)</title><rect x="371.5" y="419.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="374.5" y="430.0"></text>
</g>
<g>
<title>JVM_GetClassDeclaredMethods (21 samples, 0.07%)</title><rect x="371.5" y="403.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="374.5" y="414.0"></text>
</g>
<g>
<title>get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, Thread*) (21 samples, 0.07%)</title><rect x="371.5" y="387.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="374.5" y="398.0"></text>
</g>
<g>
<title>Reflection::new_method(methodHandle const&amp;, bool, Thread*) (16 samples, 0.05%)</title><rect x="371.7" y="371.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="374.7" y="382.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.getConstructor (12 samples, 0.04%)</title><rect x="372.5" y="483.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="375.5" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 0.03%)</title><rect x="372.6" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="375.6" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (10 samples, 0.03%)</title><rect x="372.6" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.6" y="462.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$1.run (10 samples, 0.03%)</title><rect x="372.6" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="375.6" y="446.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$1.run (10 samples, 0.03%)</title><rect x="372.6" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.6" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (8 samples, 0.03%)</title><rect x="372.6" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="375.6" y="414.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.next (334 samples, 1.14%)</title><rect x="373.0" y="547.0" width="13.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.0" y="558.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.get (333 samples, 1.14%)</title><rect x="373.0" y="531.0" width="13.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.0" y="542.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.newInstance (333 samples, 1.14%)</title><rect x="373.0" y="515.0" width="13.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="376.0" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (331 samples, 1.13%)</title><rect x="373.1" y="499.0" width="13.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="376.1" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstanceWithCaller (331 samples, 1.13%)</title><rect x="373.1" y="483.0" width="13.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="376.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (327 samples, 1.12%)</title><rect x="373.3" y="467.0" width="13.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (327 samples, 1.12%)</title><rect x="373.3" y="451.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (327 samples, 1.12%)</title><rect x="373.3" y="435.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="376.3" y="446.0"></text>
</g>
<g>
<title>com/sun/management/internal/PlatformMBeanProviderImpl.&lt;clinit&gt; (177 samples, 0.61%)</title><rect x="373.3" y="419.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="376.3" y="430.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (16 samples, 0.05%)</title><rect x="373.3" y="403.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="376.3" y="414.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (16 samples, 0.05%)</title><rect x="373.3" y="387.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="376.3" y="398.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (16 samples, 0.05%)</title><rect x="373.3" y="371.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="376.3" y="382.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, Thread*) (16 samples, 0.05%)</title><rect x="373.3" y="355.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="376.3" y="366.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, Thread*) (16 samples, 0.05%)</title><rect x="373.3" y="339.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="376.3" y="350.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_bsm(Thread*) (15 samples, 0.05%)</title><rect x="373.3" y="323.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="376.3" y="334.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_args(Thread*) (7 samples, 0.02%)</title><rect x="373.3" y="307.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="376.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (123 samples, 0.42%)</title><rect x="374.0" y="403.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="377.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (123 samples, 0.42%)</title><rect x="374.0" y="387.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (123 samples, 0.42%)</title><rect x="374.0" y="371.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="377.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (123 samples, 0.42%)</title><rect x="374.0" y="355.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="377.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (122 samples, 0.42%)</title><rect x="374.0" y="339.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="377.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x0000000800c78040.invokeStatic (122 samples, 0.42%)</title><rect x="374.0" y="323.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (122 samples, 0.42%)</title><rect x="374.0" y="307.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="377.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.&lt;init&gt; (17 samples, 0.06%)</title><rect x="374.1" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="377.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.lambdaClassName (8 samples, 0.03%)</title><rect x="374.2" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (104 samples, 0.36%)</title><rect x="374.7" y="291.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (81 samples, 0.28%)</title><rect x="374.9" y="275.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateInnerClass (81 samples, 0.28%)</title><rect x="374.9" y="259.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="377.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate (25 samples, 0.09%)</title><rect x="375.1" y="243.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="378.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.convertType (18 samples, 0.06%)</title><rect x="375.1" y="227.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.cast (8 samples, 0.03%)</title><rect x="375.1" y="211.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.descriptorToName (8 samples, 0.03%)</title><rect x="375.1" y="195.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="378.1" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.03%)</title><rect x="375.1" y="179.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="378.1" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="375.1" y="163.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="378.1" y="174.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (10 samples, 0.03%)</title><rect x="375.5" y="211.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodVisitor.visitMethodInsn (7 samples, 0.02%)</title><rect x="375.9" y="227.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (7 samples, 0.02%)</title><rect x="375.9" y="211.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (7 samples, 0.02%)</title><rect x="375.9" y="195.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="378.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (7 samples, 0.02%)</title><rect x="375.9" y="179.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="378.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateConstructor (8 samples, 0.03%)</title><rect x="376.2" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.defineHiddenClass (25 samples, 0.09%)</title><rect x="376.5" y="243.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.makeHiddenClassDefiner (20 samples, 0.07%)</title><rect x="376.6" y="227.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="379.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassFile.newInstance (18 samples, 0.06%)</title><rect x="376.6" y="211.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="379.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visit (9 samples, 0.03%)</title><rect x="377.6" y="243.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.constant (8 samples, 0.03%)</title><rect x="378.2" y="275.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="381.2" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (7 samples, 0.02%)</title><rect x="378.7" y="275.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="381.7" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (7 samples, 0.02%)</title><rect x="378.7" y="259.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="381.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$1.run (7 samples, 0.02%)</title><rect x="378.7" y="243.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="381.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$1.run (7 samples, 0.02%)</title><rect x="378.7" y="227.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="381.7" y="238.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors (7 samples, 0.02%)</title><rect x="378.7" y="211.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="381.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (12 samples, 0.04%)</title><rect x="379.0" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (10 samples, 0.03%)</title><rect x="379.1" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="382.1" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (25 samples, 0.09%)</title><rect x="379.5" y="403.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="382.5" y="414.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (25 samples, 0.09%)</title><rect x="379.5" y="387.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.5" y="398.0"></text>
</g>
<g>
<title>com/sun/management/internal/PlatformMBeanProviderImpl$$Lambda$210.0x0000000800b6b260.run (25 samples, 0.09%)</title><rect x="379.5" y="371.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.5" y="382.0"></text>
</g>
<g>
<title>com/sun/management/internal/PlatformMBeanProviderImpl.lambda$static$0 (25 samples, 0.09%)</title><rect x="379.5" y="355.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.5" y="366.0"></text>
</g>
<g>
<title>java/lang/System.loadLibrary (23 samples, 0.08%)</title><rect x="379.5" y="339.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="382.5" y="350.0"></text>
</g>
<g>
<title>java/lang/Runtime.loadLibrary0 (23 samples, 0.08%)</title><rect x="379.5" y="323.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.5" y="334.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadLibrary (23 samples, 0.08%)</title><rect x="379.5" y="307.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/loader/NativeLibraries.loadLibrary (23 samples, 0.08%)</title><rect x="379.5" y="291.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/loader/NativeLibraries.findFromPaths (23 samples, 0.08%)</title><rect x="379.5" y="275.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/loader/NativeLibraries.loadLibrary (14 samples, 0.05%)</title><rect x="379.9" y="259.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.9" y="270.0"></text>
</g>
<g>
<title>com/sun/management/internal/PlatformMBeanProviderImpl.&lt;init&gt; (148 samples, 0.51%)</title><rect x="380.5" y="419.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="383.5" y="430.0"></text>
</g>
<g>
<title>com/sun/management/internal/PlatformMBeanProviderImpl.init (147 samples, 0.50%)</title><rect x="380.5" y="403.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="383.5" y="414.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (24 samples, 0.08%)</title><rect x="380.5" y="387.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="383.5" y="398.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (12 samples, 0.04%)</title><rect x="380.5" y="371.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="383.5" y="382.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (12 samples, 0.04%)</title><rect x="380.5" y="355.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="383.5" y="366.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (12 samples, 0.04%)</title><rect x="380.5" y="339.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="383.5" y="350.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (12 samples, 0.04%)</title><rect x="380.5" y="323.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="383.5" y="334.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (12 samples, 0.04%)</title><rect x="380.5" y="307.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="383.5" y="318.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (12 samples, 0.04%)</title><rect x="380.5" y="291.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="383.5" y="302.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, ClassInstanceInfo const&amp;, Thread*) (10 samples, 0.03%)</title><rect x="380.6" y="275.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="383.6" y="286.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, ClassInstanceInfo const&amp;, Thread*) (10 samples, 0.03%)</title><rect x="380.6" y="259.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="383.6" y="270.0"></text>
</g>
<g>
<title>java_lang_Class::create_mirror(Klass*, Handle, Handle, Handle, Handle, Thread*) (10 samples, 0.03%)</title><rect x="380.6" y="243.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="383.6" y="254.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (16 samples, 0.05%)</title><rect x="381.4" y="387.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="384.4" y="398.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (16 samples, 0.05%)</title><rect x="381.4" y="371.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="384.4" y="382.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (16 samples, 0.05%)</title><rect x="381.4" y="355.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="384.4" y="366.0"></text>
</g>
<g>
<title>LinkInfo::LinkInfo(constantPoolHandle const&amp;, int, Thread*) (14 samples, 0.05%)</title><rect x="381.4" y="339.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="384.4" y="350.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (14 samples, 0.05%)</title><rect x="381.4" y="323.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="384.4" y="334.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (14 samples, 0.05%)</title><rect x="381.4" y="307.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="384.4" y="318.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (14 samples, 0.05%)</title><rect x="381.4" y="291.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="384.4" y="302.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (14 samples, 0.05%)</title><rect x="381.4" y="275.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="384.4" y="286.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (14 samples, 0.05%)</title><rect x="381.4" y="259.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="384.4" y="270.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (14 samples, 0.05%)</title><rect x="381.4" y="243.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="384.4" y="254.0"></text>
</g>
<g>
<title>com/sun/management/internal/DiagnosticCommandImpl.getDiagnosticCommandMBean (38 samples, 0.13%)</title><rect x="382.3" y="387.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="385.3" y="398.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (17 samples, 0.06%)</title><rect x="382.3" y="371.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="385.3" y="382.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (17 samples, 0.06%)</title><rect x="382.3" y="355.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="385.3" y="366.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (17 samples, 0.06%)</title><rect x="382.3" y="339.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="385.3" y="350.0"></text>
</g>
<g>
<title>LinkInfo::LinkInfo(constantPoolHandle const&amp;, int, Thread*) (16 samples, 0.05%)</title><rect x="382.3" y="323.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="385.3" y="334.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (16 samples, 0.05%)</title><rect x="382.3" y="307.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="385.3" y="318.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (16 samples, 0.05%)</title><rect x="382.3" y="291.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="385.3" y="302.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (16 samples, 0.05%)</title><rect x="382.3" y="275.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="385.3" y="286.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (16 samples, 0.05%)</title><rect x="382.3" y="259.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="385.3" y="270.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (16 samples, 0.05%)</title><rect x="382.3" y="243.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="385.3" y="254.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (16 samples, 0.05%)</title><rect x="382.3" y="227.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="385.3" y="238.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, ClassInstanceInfo const&amp;, Thread*) (16 samples, 0.05%)</title><rect x="382.3" y="211.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="385.3" y="222.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, ClassInstanceInfo const&amp;, Thread*) (16 samples, 0.05%)</title><rect x="382.3" y="195.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="385.3" y="206.0"></text>
</g>
<g>
<title>java_lang_Class::create_mirror(Klass*, Handle, Handle, Handle, Handle, Thread*) (16 samples, 0.05%)</title><rect x="382.3" y="179.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="385.3" y="190.0"></text>
</g>
<g>
<title>java_lang_Class::initialize_mirror_fields(Klass*, Handle, Handle, Handle, Thread*) (15 samples, 0.05%)</title><rect x="382.4" y="163.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="385.4" y="174.0"></text>
</g>
<g>
<title>InstanceKlass::do_local_static_fields(void (*)(fieldDescriptor*, Handle, Thread*), Handle, Thread*) (14 samples, 0.05%)</title><rect x="382.4" y="147.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="385.4" y="158.0"></text>
</g>
<g>
<title>initialize_static_field(fieldDescriptor*, Handle, Thread*) (14 samples, 0.05%)</title><rect x="382.4" y="131.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="385.4" y="142.0"></text>
</g>
<g>
<title>ConstantPool::uncached_string_at(int, Thread*) (14 samples, 0.05%)</title><rect x="382.4" y="115.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="385.4" y="126.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (14 samples, 0.05%)</title><rect x="382.4" y="99.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="385.4" y="110.0"></text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short const*, int, unsigned long, Thread*) (14 samples, 0.05%)</title><rect x="382.4" y="83.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="385.4" y="94.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short const*, int, Thread*) (14 samples, 0.05%)</title><rect x="382.4" y="67.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="385.4" y="78.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="382.4" y="51.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="385.4" y="62.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="382.4" y="35.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="385.4" y="46.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.02%)</title><rect x="382.7" y="51.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="385.7" y="62.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="382.7" y="35.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="385.7" y="46.0"></text>
</g>
<g>
<title>sun/management/ManagementFactoryHelper.&lt;clinit&gt; (19 samples, 0.06%)</title><rect x="383.1" y="371.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.1" y="382.0"></text>
</g>
<g>
<title>sun/management/VMManagementImpl.&lt;clinit&gt; (8 samples, 0.03%)</title><rect x="383.5" y="355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.5" y="366.0"></text>
</g>
<g>
<title>com/sun/management/internal/PlatformMBeanProviderImpl$1.&lt;init&gt; (19 samples, 0.06%)</title><rect x="383.8" y="387.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (8 samples, 0.03%)</title><rect x="384.2" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="387.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.02%)</title><rect x="384.2" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (7 samples, 0.02%)</title><rect x="384.2" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="387.2" y="350.0"></text>
</g>
<g>
<title>com/sun/management/internal/PlatformMBeanProviderImpl$2.&lt;init&gt; (16 samples, 0.05%)</title><rect x="384.6" y="387.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="387.6" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (7 samples, 0.02%)</title><rect x="384.9" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.9" y="382.0"></text>
</g>
<g>
<title>com/sun/management/internal/PlatformMBeanProviderImpl$3.&lt;init&gt; (19 samples, 0.06%)</title><rect x="385.2" y="387.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="388.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (8 samples, 0.03%)</title><rect x="385.6" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.6" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.02%)</title><rect x="385.6" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="388.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (7 samples, 0.02%)</title><rect x="385.6" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.6" y="350.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.iterator (7 samples, 0.02%)</title><rect x="386.4" y="547.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="389.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.findMethodHandleType (10 samples, 0.03%)</title><rect x="386.8" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="389.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (10 samples, 0.03%)</title><rect x="386.8" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (148 samples, 0.51%)</title><rect x="387.2" y="563.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (148 samples, 0.51%)</title><rect x="387.2" y="547.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (148 samples, 0.51%)</title><rect x="387.2" y="531.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="390.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (148 samples, 0.51%)</title><rect x="387.2" y="515.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (147 samples, 0.50%)</title><rect x="387.2" y="499.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x0000000800c78040.invokeStatic (147 samples, 0.50%)</title><rect x="387.2" y="483.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (147 samples, 0.50%)</title><rect x="387.2" y="467.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.&lt;init&gt; (33 samples, 0.11%)</title><rect x="387.2" y="451.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="390.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.lambdaClassName (8 samples, 0.03%)</title><rect x="387.6" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="390.6" y="446.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (10 samples, 0.03%)</title><rect x="388.1" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (113 samples, 0.39%)</title><rect x="388.5" y="451.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (92 samples, 0.31%)</title><rect x="388.7" y="435.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="391.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateInnerClass (92 samples, 0.31%)</title><rect x="388.7" y="419.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="391.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate (30 samples, 0.10%)</title><rect x="388.9" y="403.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="391.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.convertArgumentTypes (24 samples, 0.08%)</title><rect x="388.9" y="387.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.convertType (24 samples, 0.08%)</title><rect x="388.9" y="371.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.cast (11 samples, 0.04%)</title><rect x="388.9" y="355.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.descriptorToName (8 samples, 0.03%)</title><rect x="388.9" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="391.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.03%)</title><rect x="388.9" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="391.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="388.9" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.9" y="318.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (13 samples, 0.04%)</title><rect x="389.3" y="355.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="392.3" y="366.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (9 samples, 0.03%)</title><rect x="389.5" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="392.5" y="350.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (8 samples, 0.03%)</title><rect x="389.5" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="392.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateConstructor (11 samples, 0.04%)</title><rect x="390.1" y="403.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="393.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.defineHiddenClass (25 samples, 0.09%)</title><rect x="390.5" y="403.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="393.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.makeHiddenClassDefiner (20 samples, 0.07%)</title><rect x="390.7" y="387.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="393.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassFile.newInstance (18 samples, 0.06%)</title><rect x="390.7" y="371.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="393.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visit (9 samples, 0.03%)</title><rect x="391.7" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findConstructor (16 samples, 0.05%)</title><rect x="392.4" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="395.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectConstructor (9 samples, 0.03%)</title><rect x="392.4" y="419.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectConstructorCommon (9 samples, 0.03%)</title><rect x="392.4" y="403.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="395.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (9 samples, 0.03%)</title><rect x="392.4" y="387.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makeAllocator (9 samples, 0.03%)</title><rect x="392.4" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="395.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.resolveOrFail (7 samples, 0.02%)</title><rect x="392.8" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.8" y="430.0"></text>
</g>
<g>
<title>java/lang/management/DefaultPlatformMBeanProvider.&lt;init&gt; (110 samples, 0.38%)</title><rect x="393.3" y="563.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="396.3" y="574.0"></text>
</g>
<g>
<title>java/lang/management/DefaultPlatformMBeanProvider.init (109 samples, 0.37%)</title><rect x="393.3" y="547.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.3" y="558.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (45 samples, 0.15%)</title><rect x="393.3" y="531.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="396.3" y="542.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (22 samples, 0.08%)</title><rect x="393.3" y="515.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="396.3" y="526.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (22 samples, 0.08%)</title><rect x="393.3" y="499.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="396.3" y="510.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (22 samples, 0.08%)</title><rect x="393.3" y="483.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="396.3" y="494.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (22 samples, 0.08%)</title><rect x="393.3" y="467.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="396.3" y="478.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (22 samples, 0.08%)</title><rect x="393.3" y="451.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="396.3" y="462.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (22 samples, 0.08%)</title><rect x="393.3" y="435.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="396.3" y="446.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, ClassInstanceInfo const&amp;, Thread*) (22 samples, 0.08%)</title><rect x="393.3" y="419.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="396.3" y="430.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, ClassInstanceInfo const&amp;, Thread*) (22 samples, 0.08%)</title><rect x="393.3" y="403.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="396.3" y="414.0"></text>
</g>
<g>
<title>java_lang_Class::create_mirror(Klass*, Handle, Handle, Handle, Handle, Thread*) (22 samples, 0.08%)</title><rect x="393.3" y="387.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="396.3" y="398.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::allocate_instance(Klass*, Thread*) (11 samples, 0.04%)</title><rect x="393.3" y="371.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="396.3" y="382.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (11 samples, 0.04%)</title><rect x="393.3" y="355.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="396.3" y="366.0"></text>
</g>
<g>
<title>java_lang_Class::initialize_mirror_fields(Klass*, Handle, Handle, Handle, Thread*) (11 samples, 0.04%)</title><rect x="393.8" y="371.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="396.8" y="382.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (11 samples, 0.04%)</title><rect x="393.8" y="355.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="396.8" y="366.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (11 samples, 0.04%)</title><rect x="393.8" y="339.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="396.8" y="350.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (12 samples, 0.04%)</title><rect x="394.2" y="515.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="397.2" y="526.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (12 samples, 0.04%)</title><rect x="394.2" y="499.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="397.2" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (11 samples, 0.04%)</title><rect x="394.7" y="515.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="397.7" y="526.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (11 samples, 0.04%)</title><rect x="394.7" y="499.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="397.7" y="510.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (11 samples, 0.04%)</title><rect x="394.7" y="483.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="397.7" y="494.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (11 samples, 0.04%)</title><rect x="394.7" y="467.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="397.7" y="478.0"></text>
</g>
<g>
<title>Rewriter::make_constant_pool_cache(Thread*) (11 samples, 0.04%)</title><rect x="394.7" y="451.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="397.7" y="462.0"></text>
</g>
<g>
<title>ConstantPool::initialize_resolved_references(ClassLoaderData*, GrowableArray&lt;int&gt; const&amp;, int, Thread*) (11 samples, 0.04%)</title><rect x="394.7" y="435.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="397.7" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (11 samples, 0.04%)</title><rect x="394.7" y="419.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="397.7" y="430.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (11 samples, 0.04%)</title><rect x="394.7" y="403.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="397.7" y="414.0"></text>
</g>
<g>
<title>java/lang/management/DefaultPlatformMBeanProvider$4.&lt;init&gt; (12 samples, 0.04%)</title><rect x="395.9" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (7 samples, 0.02%)</title><rect x="396.0" y="515.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.0" y="526.0"></text>
</g>
<g>
<title>sun/management/ManagementFactoryHelper.isPlatformLoggingMXBeanAvailable (15 samples, 0.05%)</title><rect x="397.1" y="531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="400.1" y="542.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (7 samples, 0.02%)</title><rect x="397.1" y="515.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="400.1" y="526.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (7 samples, 0.02%)</title><rect x="397.1" y="499.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="400.1" y="510.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (7 samples, 0.02%)</title><rect x="397.1" y="483.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="400.1" y="494.0"></text>
</g>
<g>
<title>sun/management/ManagementFactoryHelper$LoggingMXBeanAccess.&lt;clinit&gt; (8 samples, 0.03%)</title><rect x="397.4" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="400.4" y="526.0"></text>
</g>
<g>
<title>sun/management/ManagementFactoryHelper$LoggingMXBeanAccess.loadLoggingClass (8 samples, 0.03%)</title><rect x="397.4" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="400.4" y="510.0"></text>
</g>
<g>
<title>java/util/function/Function.identity (130 samples, 0.44%)</title><rect x="398.0" y="643.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.0" y="654.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (16 samples, 0.05%)</title><rect x="398.0" y="627.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="401.0" y="638.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (16 samples, 0.05%)</title><rect x="398.0" y="611.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="401.0" y="622.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (16 samples, 0.05%)</title><rect x="398.0" y="595.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="401.0" y="606.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, Thread*) (16 samples, 0.05%)</title><rect x="398.0" y="579.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="401.0" y="590.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, Thread*) (16 samples, 0.05%)</title><rect x="398.0" y="563.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="401.0" y="574.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_bsm(Thread*) (15 samples, 0.05%)</title><rect x="398.0" y="547.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="401.0" y="558.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_args(Thread*) (7 samples, 0.02%)</title><rect x="398.0" y="531.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="401.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (101 samples, 0.35%)</title><rect x="398.7" y="627.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (101 samples, 0.35%)</title><rect x="398.7" y="611.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="401.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (101 samples, 0.35%)</title><rect x="398.7" y="595.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (101 samples, 0.35%)</title><rect x="398.7" y="579.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (100 samples, 0.34%)</title><rect x="398.7" y="563.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="401.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x0000000800c78040.invokeStatic (100 samples, 0.34%)</title><rect x="398.7" y="547.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="401.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (100 samples, 0.34%)</title><rect x="398.7" y="531.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="401.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.&lt;init&gt; (17 samples, 0.06%)</title><rect x="398.8" y="515.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.lambdaClassName (8 samples, 0.03%)</title><rect x="398.9" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="401.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (82 samples, 0.28%)</title><rect x="399.4" y="515.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="402.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (59 samples, 0.20%)</title><rect x="399.6" y="499.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateInnerClass (59 samples, 0.20%)</title><rect x="399.6" y="483.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="402.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateConstructor (8 samples, 0.03%)</title><rect x="400.0" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="403.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.defineHiddenClass (25 samples, 0.09%)</title><rect x="400.3" y="467.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="403.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.makeHiddenClassDefiner (20 samples, 0.07%)</title><rect x="400.5" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="403.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassFile.newInstance (18 samples, 0.06%)</title><rect x="400.5" y="435.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="403.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visit (8 samples, 0.03%)</title><rect x="401.4" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="404.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="401.7" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="404.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.constant (8 samples, 0.03%)</title><rect x="402.0" y="499.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="405.0" y="510.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (7 samples, 0.02%)</title><rect x="402.5" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="405.5" y="510.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (7 samples, 0.02%)</title><rect x="402.5" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="405.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$1.run (7 samples, 0.02%)</title><rect x="402.5" y="467.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$1.run (7 samples, 0.02%)</title><rect x="402.5" y="451.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.5" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors (7 samples, 0.02%)</title><rect x="402.5" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (12 samples, 0.04%)</title><rect x="402.8" y="627.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="405.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (10 samples, 0.03%)</title><rect x="402.9" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="405.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (977 samples, 3.34%)</title><rect x="403.3" y="643.0" width="39.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="406.3" y="654.0">jav..</text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (12 samples, 0.04%)</title><rect x="403.3" y="627.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="406.3" y="638.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (12 samples, 0.04%)</title><rect x="403.3" y="611.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="406.3" y="622.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (12 samples, 0.04%)</title><rect x="403.3" y="595.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="406.3" y="606.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, Thread*) (12 samples, 0.04%)</title><rect x="403.3" y="579.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="406.3" y="590.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, Thread*) (12 samples, 0.04%)</title><rect x="403.3" y="563.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="406.3" y="574.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_bsm(Thread*) (11 samples, 0.04%)</title><rect x="403.3" y="547.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="406.3" y="558.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_args(Thread*) (8 samples, 0.03%)</title><rect x="403.3" y="531.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="406.3" y="542.0"></text>
</g>
<g>
<title>ConstantPool::copy_bootstrap_arguments_at_impl(constantPoolHandle const&amp;, int, int, int, objArrayHandle, int, bool, Handle, Thread*) (7 samples, 0.02%)</title><rect x="403.3" y="515.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="406.3" y="526.0"></text>
</g>
<g>
<title>ConstantPool::resolve_constant_at_impl(constantPoolHandle const&amp;, int, int, bool*, Thread*) (7 samples, 0.02%)</title><rect x="403.3" y="499.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="406.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (121 samples, 0.41%)</title><rect x="404.0" y="627.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="407.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (121 samples, 0.41%)</title><rect x="404.0" y="611.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="407.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (121 samples, 0.41%)</title><rect x="404.0" y="595.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="407.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (121 samples, 0.41%)</title><rect x="404.0" y="579.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="407.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (120 samples, 0.41%)</title><rect x="404.0" y="563.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (120 samples, 0.41%)</title><rect x="404.0" y="547.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (120 samples, 0.41%)</title><rect x="404.0" y="531.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.&lt;init&gt; (17 samples, 0.06%)</title><rect x="404.0" y="515.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.lambdaClassName (8 samples, 0.03%)</title><rect x="404.2" y="499.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (102 samples, 0.35%)</title><rect x="404.7" y="515.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="407.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (79 samples, 0.27%)</title><rect x="404.9" y="499.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateInnerClass (79 samples, 0.27%)</title><rect x="404.9" y="483.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="407.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate (23 samples, 0.08%)</title><rect x="405.1" y="467.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.convertType (20 samples, 0.07%)</title><rect x="405.1" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="408.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.cast (8 samples, 0.03%)</title><rect x="405.1" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="408.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.descriptorToName (8 samples, 0.03%)</title><rect x="405.1" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="408.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.03%)</title><rect x="405.1" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="408.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="405.1" y="387.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="408.1" y="398.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (12 samples, 0.04%)</title><rect x="405.4" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.4" y="446.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (8 samples, 0.03%)</title><rect x="405.6" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="408.6" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (7 samples, 0.02%)</title><rect x="405.6" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="408.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateConstructor (8 samples, 0.03%)</title><rect x="406.0" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="409.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.defineHiddenClass (25 samples, 0.09%)</title><rect x="406.3" y="467.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="409.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.makeHiddenClassDefiner (20 samples, 0.07%)</title><rect x="406.5" y="451.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="409.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassFile.newInstance (18 samples, 0.06%)</title><rect x="406.5" y="435.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="409.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visit (8 samples, 0.03%)</title><rect x="407.5" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="410.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="407.8" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.constant (8 samples, 0.03%)</title><rect x="408.1" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.1" y="510.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (7 samples, 0.02%)</title><rect x="408.5" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="411.5" y="510.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (7 samples, 0.02%)</title><rect x="408.5" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="411.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$1.run (7 samples, 0.02%)</title><rect x="408.5" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$1.run (7 samples, 0.02%)</title><rect x="408.5" y="451.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.5" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors (7 samples, 0.02%)</title><rect x="408.5" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (22 samples, 0.08%)</title><rect x="408.8" y="627.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (21 samples, 0.07%)</title><rect x="408.9" y="611.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="411.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodForConstant (8 samples, 0.03%)</title><rect x="409.0" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="412.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectConstructorNoSecurityManager (8 samples, 0.03%)</title><rect x="409.0" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="412.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectConstructorCommon (8 samples, 0.03%)</title><rect x="409.0" y="563.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (8 samples, 0.03%)</title><rect x="409.0" y="547.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="412.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makeAllocator (8 samples, 0.03%)</title><rect x="409.0" y="531.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="412.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (817 samples, 2.79%)</title><rect x="409.7" y="627.0" width="33.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="412.7" y="638.0">ja..</text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (13 samples, 0.04%)</title><rect x="409.8" y="611.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="412.8" y="622.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (13 samples, 0.04%)</title><rect x="409.8" y="595.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="412.8" y="606.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (13 samples, 0.04%)</title><rect x="409.8" y="579.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="412.8" y="590.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, Thread*) (13 samples, 0.04%)</title><rect x="409.8" y="563.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="412.8" y="574.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, Thread*) (13 samples, 0.04%)</title><rect x="409.8" y="547.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="412.8" y="558.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_bsm(Thread*) (12 samples, 0.04%)</title><rect x="409.8" y="531.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="412.8" y="542.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_args(Thread*) (9 samples, 0.03%)</title><rect x="409.8" y="515.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="412.8" y="526.0"></text>
</g>
<g>
<title>ConstantPool::copy_bootstrap_arguments_at_impl(constantPoolHandle const&amp;, int, int, int, objArrayHandle, int, bool, Handle, Thread*) (8 samples, 0.03%)</title><rect x="409.8" y="499.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="412.8" y="510.0"></text>
</g>
<g>
<title>ConstantPool::resolve_constant_at_impl(constantPoolHandle const&amp;, int, int, bool*, Thread*) (8 samples, 0.03%)</title><rect x="409.8" y="483.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="412.8" y="494.0"></text>
</g>
<g>
<title>SystemDictionary::link_method_handle_constant(Klass*, int, Klass*, Symbol*, Symbol*, Thread*) (7 samples, 0.02%)</title><rect x="409.8" y="467.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="412.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.findMethodHandleType (15 samples, 0.05%)</title><rect x="410.3" y="611.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="413.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (15 samples, 0.05%)</title><rect x="410.3" y="595.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="413.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (268 samples, 0.92%)</title><rect x="410.9" y="611.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="413.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (268 samples, 0.92%)</title><rect x="410.9" y="595.0" width="10.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (268 samples, 0.92%)</title><rect x="410.9" y="579.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (268 samples, 0.92%)</title><rect x="410.9" y="563.0" width="10.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="413.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (267 samples, 0.91%)</title><rect x="410.9" y="547.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (267 samples, 0.91%)</title><rect x="410.9" y="531.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="413.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (267 samples, 0.91%)</title><rect x="410.9" y="515.0" width="10.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.&lt;init&gt; (107 samples, 0.37%)</title><rect x="411.0" y="499.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="414.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.lambdaClassName (8 samples, 0.03%)</title><rect x="411.7" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.toMethodDescriptorString (35 samples, 0.12%)</title><rect x="412.2" y="483.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.2" y="494.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseMethod (35 samples, 0.12%)</title><rect x="412.2" y="467.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="415.2" y="478.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (31 samples, 0.11%)</title><rect x="412.4" y="451.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="415.4" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (28 samples, 0.10%)</title><rect x="412.4" y="435.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="415.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.replace (8 samples, 0.03%)</title><rect x="412.6" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (8 samples, 0.03%)</title><rect x="412.6" y="403.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.03%)</title><rect x="413.2" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="413.2" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="416.2" y="414.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (37 samples, 0.13%)</title><rect x="413.8" y="483.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="416.8" y="494.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (25 samples, 0.09%)</title><rect x="414.3" y="467.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.3" y="478.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (22 samples, 0.08%)</title><rect x="414.3" y="451.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (159 samples, 0.54%)</title><rect x="415.3" y="499.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="418.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (138 samples, 0.47%)</title><rect x="415.4" y="483.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="418.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateInnerClass (138 samples, 0.47%)</title><rect x="415.4" y="467.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="418.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate (37 samples, 0.13%)</title><rect x="415.6" y="451.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.convertArgumentTypes (30 samples, 0.10%)</title><rect x="415.6" y="435.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.convertType (30 samples, 0.10%)</title><rect x="415.6" y="419.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="418.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.cast (10 samples, 0.03%)</title><rect x="415.6" y="403.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.descriptorToName (8 samples, 0.03%)</title><rect x="415.6" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.6" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.03%)</title><rect x="415.6" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="415.6" y="355.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="418.6" y="366.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (20 samples, 0.07%)</title><rect x="416.0" y="403.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.0" y="414.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (12 samples, 0.04%)</title><rect x="416.4" y="387.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (12 samples, 0.04%)</title><rect x="416.4" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="419.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodVisitor.visitMethodInsn (7 samples, 0.02%)</title><rect x="416.8" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="419.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (7 samples, 0.02%)</title><rect x="416.8" y="419.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="419.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (7 samples, 0.02%)</title><rect x="416.8" y="403.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="419.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (7 samples, 0.02%)</title><rect x="416.8" y="387.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="419.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateConstructor (45 samples, 0.15%)</title><rect x="417.1" y="451.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.toMethodDescriptorString (29 samples, 0.10%)</title><rect x="417.1" y="435.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="420.1" y="446.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseMethod (29 samples, 0.10%)</title><rect x="417.1" y="419.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="420.1" y="430.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (25 samples, 0.09%)</title><rect x="417.3" y="403.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.3" y="414.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (22 samples, 0.08%)</title><rect x="417.3" y="387.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="418.3" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="421.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.defineHiddenClass (25 samples, 0.09%)</title><rect x="418.9" y="451.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="421.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.makeHiddenClassDefiner (20 samples, 0.07%)</title><rect x="419.1" y="435.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="422.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassFile.newInstance (18 samples, 0.06%)</title><rect x="419.1" y="419.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="422.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visit (8 samples, 0.03%)</title><rect x="420.1" y="451.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="423.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitField (9 samples, 0.03%)</title><rect x="420.4" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="423.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findConstructor (16 samples, 0.05%)</title><rect x="421.0" y="483.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectConstructor (9 samples, 0.03%)</title><rect x="421.0" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectConstructorCommon (9 samples, 0.03%)</title><rect x="421.0" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (9 samples, 0.03%)</title><rect x="421.0" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makeAllocator (9 samples, 0.03%)</title><rect x="421.0" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.resolveOrFail (7 samples, 0.02%)</title><rect x="421.4" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (233 samples, 0.80%)</title><rect x="421.8" y="611.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (232 samples, 0.79%)</title><rect x="421.8" y="595.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodForConstant (228 samples, 0.78%)</title><rect x="421.8" y="579.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodNoSecurityManager (228 samples, 0.78%)</title><rect x="421.8" y="563.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodCommon (228 samples, 0.78%)</title><rect x="421.8" y="547.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (228 samples, 0.78%)</title><rect x="421.8" y="531.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (227 samples, 0.78%)</title><rect x="421.9" y="515.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (227 samples, 0.78%)</title><rect x="421.9" y="499.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="424.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (227 samples, 0.78%)</title><rect x="421.9" y="483.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="424.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makePreparedLambdaForm (226 samples, 0.77%)</title><rect x="421.9" y="467.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (208 samples, 0.71%)</title><rect x="422.3" y="451.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (206 samples, 0.70%)</title><rect x="422.3" y="435.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="425.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.&lt;init&gt; (7 samples, 0.02%)</title><rect x="422.4" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="425.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.&lt;init&gt; (7 samples, 0.02%)</title><rect x="422.4" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="425.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.&lt;init&gt; (7 samples, 0.02%)</title><rect x="422.4" y="387.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="425.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (173 samples, 0.59%)</title><rect x="422.7" y="419.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (90 samples, 0.31%)</title><rect x="422.7" y="403.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="425.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classData (7 samples, 0.02%)</title><rect x="422.7" y="387.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="425.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (25 samples, 0.09%)</title><rect x="423.0" y="387.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (17 samples, 0.06%)</title><rect x="423.3" y="371.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="426.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (13 samples, 0.04%)</title><rect x="423.5" y="355.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (13 samples, 0.04%)</title><rect x="423.5" y="339.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (7 samples, 0.02%)</title><rect x="423.7" y="323.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="426.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodEpilogue (34 samples, 0.12%)</title><rect x="424.1" y="387.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMaxs (34 samples, 0.12%)</title><rect x="424.1" y="371.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="427.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.computeAllFrames (34 samples, 0.12%)</title><rect x="424.1" y="355.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="427.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.setInputFrameFromDescriptor (33 samples, 0.11%)</title><rect x="424.1" y="339.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="427.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.getAbstractTypeFromDescriptor (12 samples, 0.04%)</title><rect x="424.2" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="427.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.04%)</title><rect x="424.2" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.04%)</title><rect x="424.2" y="291.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="427.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getArgumentTypes (7 samples, 0.02%)</title><rect x="424.7" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="427.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (12 samples, 0.04%)</title><rect x="425.0" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="428.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.04%)</title><rect x="425.0" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="428.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.04%)</title><rect x="425.0" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodPrologue (8 samples, 0.03%)</title><rect x="425.4" y="387.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="428.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (8 samples, 0.03%)</title><rect x="425.4" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="428.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (7 samples, 0.02%)</title><rect x="425.5" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="428.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitAnnotation (13 samples, 0.04%)</title><rect x="425.8" y="387.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="428.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/AnnotationWriter.create (13 samples, 0.04%)</title><rect x="425.8" y="371.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="428.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classFilePrologue (20 samples, 0.07%)</title><rect x="426.3" y="403.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="429.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (58 samples, 0.20%)</title><rect x="427.1" y="403.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="430.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (53 samples, 0.18%)</title><rect x="427.3" y="387.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="430.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="427.8" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (14 samples, 0.05%)</title><rect x="428.5" y="371.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="431.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (10 samples, 0.03%)</title><rect x="428.7" y="355.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="431.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (10 samples, 0.03%)</title><rect x="428.7" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="431.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadMethod (15 samples, 0.05%)</title><rect x="429.6" y="419.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="432.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.lookupPregenerated (10 samples, 0.03%)</title><rect x="430.2" y="419.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="433.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.resolveFrom (10 samples, 0.03%)</title><rect x="430.2" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolveOrNull (9 samples, 0.03%)</title><rect x="430.3" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="433.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolve (9 samples, 0.03%)</title><rect x="430.3" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.resolve (8 samples, 0.03%)</title><rect x="430.3" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.mapMerger (286 samples, 0.98%)</title><rect x="431.2" y="611.0" width="11.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="434.2" y="622.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (13 samples, 0.04%)</title><rect x="431.2" y="595.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="434.2" y="606.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (13 samples, 0.04%)</title><rect x="431.2" y="579.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="434.2" y="590.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (13 samples, 0.04%)</title><rect x="431.2" y="563.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="434.2" y="574.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, Thread*) (13 samples, 0.04%)</title><rect x="431.2" y="547.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="434.2" y="558.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, Thread*) (13 samples, 0.04%)</title><rect x="431.2" y="531.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="434.2" y="542.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_bsm(Thread*) (12 samples, 0.04%)</title><rect x="431.2" y="515.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="434.2" y="526.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_args(Thread*) (9 samples, 0.03%)</title><rect x="431.2" y="499.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="434.2" y="510.0"></text>
</g>
<g>
<title>ConstantPool::copy_bootstrap_arguments_at_impl(constantPoolHandle const&amp;, int, int, int, objArrayHandle, int, bool, Handle, Thread*) (8 samples, 0.03%)</title><rect x="431.2" y="483.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="434.2" y="494.0"></text>
</g>
<g>
<title>ConstantPool::resolve_constant_at_impl(constantPoolHandle const&amp;, int, int, bool*, Thread*) (8 samples, 0.03%)</title><rect x="431.2" y="467.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="434.2" y="478.0"></text>
</g>
<g>
<title>SystemDictionary::link_method_handle_constant(Klass*, int, Klass*, Symbol*, Symbol*, Thread*) (7 samples, 0.02%)</title><rect x="431.2" y="451.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="434.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.findMethodHandleType (11 samples, 0.04%)</title><rect x="431.7" y="595.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="434.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (11 samples, 0.04%)</title><rect x="431.7" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="434.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (255 samples, 0.87%)</title><rect x="432.2" y="595.0" width="10.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="435.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (255 samples, 0.87%)</title><rect x="432.2" y="579.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="435.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (255 samples, 0.87%)</title><rect x="432.2" y="563.0" width="10.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="435.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (255 samples, 0.87%)</title><rect x="432.2" y="547.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="435.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (254 samples, 0.87%)</title><rect x="432.2" y="531.0" width="10.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="435.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (254 samples, 0.87%)</title><rect x="432.2" y="515.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="435.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (254 samples, 0.87%)</title><rect x="432.2" y="499.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.&lt;init&gt; (73 samples, 0.25%)</title><rect x="432.2" y="483.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="435.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.lambdaClassName (8 samples, 0.03%)</title><rect x="432.6" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="435.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.toMethodDescriptorString (33 samples, 0.11%)</title><rect x="433.1" y="467.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="436.1" y="478.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseMethod (33 samples, 0.11%)</title><rect x="433.1" y="451.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="436.1" y="462.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (29 samples, 0.10%)</title><rect x="433.3" y="435.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.3" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (26 samples, 0.09%)</title><rect x="433.3" y="419.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="436.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.replace (8 samples, 0.03%)</title><rect x="433.5" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="436.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (8 samples, 0.03%)</title><rect x="433.5" y="387.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="436.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.03%)</title><rect x="434.0" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="437.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="434.0" y="387.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.0" y="398.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (13 samples, 0.04%)</title><rect x="434.6" y="467.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="437.6" y="478.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (9 samples, 0.03%)</title><rect x="434.8" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="437.8" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (8 samples, 0.03%)</title><rect x="434.8" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="437.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (180 samples, 0.62%)</title><rect x="435.2" y="483.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="438.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (159 samples, 0.54%)</title><rect x="435.3" y="467.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="438.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateInnerClass (159 samples, 0.54%)</title><rect x="435.3" y="451.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="438.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate (82 samples, 0.28%)</title><rect x="435.5" y="435.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="438.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.convertArgumentTypes (58 samples, 0.20%)</title><rect x="435.5" y="419.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.convertType (58 samples, 0.20%)</title><rect x="435.5" y="403.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.cast (18 samples, 0.06%)</title><rect x="435.5" y="387.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="438.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.descriptorToName (16 samples, 0.05%)</title><rect x="435.5" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.05%)</title><rect x="435.5" y="355.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.05%)</title><rect x="435.5" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="438.5" y="350.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.03%)</title><rect x="435.5" y="323.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="438.5" y="334.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="435.5" y="307.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="438.5" y="318.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="435.5" y="291.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="438.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.03%)</title><rect x="435.8" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.8" y="334.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.03%)</title><rect x="435.8" y="307.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="438.8" y="318.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.03%)</title><rect x="435.8" y="291.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="438.8" y="302.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="435.8" y="275.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="438.8" y="286.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (40 samples, 0.14%)</title><rect x="436.2" y="387.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="439.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.03%)</title><rect x="436.5" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="436.5" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="439.5" y="366.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (24 samples, 0.08%)</title><rect x="436.9" y="371.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="439.9" y="382.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (24 samples, 0.08%)</title><rect x="436.9" y="355.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="439.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.replace (8 samples, 0.03%)</title><rect x="437.0" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="440.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (8 samples, 0.03%)</title><rect x="437.0" y="323.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="440.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.03%)</title><rect x="437.5" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="440.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="437.5" y="323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.convertType (18 samples, 0.06%)</title><rect x="437.8" y="419.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="440.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.cast (8 samples, 0.03%)</title><rect x="437.8" y="403.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="440.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.descriptorToName (8 samples, 0.03%)</title><rect x="437.8" y="387.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="440.8" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.03%)</title><rect x="437.8" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="440.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="437.8" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.8" y="366.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (10 samples, 0.03%)</title><rect x="438.2" y="403.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="441.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateConstructor (25 samples, 0.09%)</title><rect x="438.8" y="435.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="441.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.toMethodDescriptorString (14 samples, 0.05%)</title><rect x="438.8" y="419.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="441.8" y="430.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseMethod (14 samples, 0.05%)</title><rect x="438.8" y="403.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="441.8" y="414.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (9 samples, 0.03%)</title><rect x="439.0" y="387.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (8 samples, 0.03%)</title><rect x="439.0" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.defineHiddenClass (25 samples, 0.09%)</title><rect x="439.8" y="435.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.makeHiddenClassDefiner (20 samples, 0.07%)</title><rect x="440.0" y="419.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="443.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassFile.newInstance (18 samples, 0.06%)</title><rect x="440.0" y="403.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="443.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visit (8 samples, 0.03%)</title><rect x="440.9" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="443.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="441.4" y="435.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="444.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findConstructor (16 samples, 0.05%)</title><rect x="441.7" y="467.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="444.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectConstructor (9 samples, 0.03%)</title><rect x="441.7" y="451.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="444.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectConstructorCommon (9 samples, 0.03%)</title><rect x="441.7" y="435.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="444.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (9 samples, 0.03%)</title><rect x="441.7" y="419.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="444.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makeAllocator (9 samples, 0.03%)</title><rect x="441.7" y="403.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="444.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.resolveOrFail (7 samples, 0.02%)</title><rect x="442.1" y="451.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="445.1" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (481 samples, 1.65%)</title><rect x="442.7" y="643.0" width="19.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="445.7" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (480 samples, 1.64%)</title><rect x="442.7" y="627.0" width="19.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="445.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (480 samples, 1.64%)</title><rect x="442.7" y="611.0" width="19.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="445.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (479 samples, 1.64%)</title><rect x="442.7" y="595.0" width="19.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (476 samples, 1.63%)</title><rect x="442.7" y="579.0" width="19.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.7" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (475 samples, 1.62%)</title><rect x="442.7" y="563.0" width="19.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="445.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$7$1.accept (475 samples, 1.62%)</title><rect x="442.7" y="547.0" width="19.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="445.7" y="558.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder$$Lambda$211.0x0000000800b6fcf8.apply (459 samples, 1.57%)</title><rect x="442.7" y="531.0" width="18.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="445.7" y="542.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder.lambda$static$1 (459 samples, 1.57%)</title><rect x="442.7" y="515.0" width="18.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.7" y="526.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder.toPlatformComponentStream (459 samples, 1.57%)</title><rect x="442.7" y="499.0" width="18.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="445.7" y="510.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (17 samples, 0.06%)</title><rect x="442.7" y="483.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="445.7" y="494.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (17 samples, 0.06%)</title><rect x="442.7" y="467.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="445.7" y="478.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (17 samples, 0.06%)</title><rect x="442.7" y="451.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="445.7" y="462.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, Thread*) (17 samples, 0.06%)</title><rect x="442.7" y="435.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="445.7" y="446.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, Thread*) (17 samples, 0.06%)</title><rect x="442.7" y="419.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="445.7" y="430.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_bsm(Thread*) (15 samples, 0.05%)</title><rect x="442.7" y="403.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="445.7" y="414.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_args(Thread*) (9 samples, 0.03%)</title><rect x="442.7" y="387.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="445.7" y="398.0"></text>
</g>
<g>
<title>ConstantPool::copy_bootstrap_arguments_at_impl(constantPoolHandle const&amp;, int, int, int, objArrayHandle, int, bool, Handle, Thread*) (7 samples, 0.02%)</title><rect x="442.7" y="371.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="445.7" y="382.0"></text>
</g>
<g>
<title>ConstantPool::resolve_constant_at_impl(constantPoolHandle const&amp;, int, int, bool*, Thread*) (7 samples, 0.02%)</title><rect x="442.7" y="355.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="445.7" y="366.0"></text>
</g>
<g>
<title>SystemDictionary::link_method_handle_constant(Klass*, int, Klass*, Symbol*, Symbol*, Thread*) (7 samples, 0.02%)</title><rect x="442.7" y="339.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="445.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (356 samples, 1.22%)</title><rect x="443.5" y="483.0" width="14.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="446.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (356 samples, 1.22%)</title><rect x="443.5" y="467.0" width="14.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="446.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (356 samples, 1.22%)</title><rect x="443.5" y="451.0" width="14.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="446.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (356 samples, 1.22%)</title><rect x="443.5" y="435.0" width="14.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="446.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (354 samples, 1.21%)</title><rect x="443.5" y="419.0" width="14.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="446.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x0000000800c78040.invokeStatic (354 samples, 1.21%)</title><rect x="443.5" y="403.0" width="14.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="446.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (354 samples, 1.21%)</title><rect x="443.5" y="387.0" width="14.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="446.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.&lt;init&gt; (34 samples, 0.12%)</title><rect x="443.6" y="371.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="446.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.lambdaClassName (16 samples, 0.05%)</title><rect x="443.9" y="355.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="446.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.&lt;init&gt; (8 samples, 0.03%)</title><rect x="444.6" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="447.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.&lt;init&gt; (8 samples, 0.03%)</title><rect x="444.6" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (318 samples, 1.09%)</title><rect x="445.0" y="371.0" width="12.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="448.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (272 samples, 0.93%)</title><rect x="445.4" y="355.0" width="11.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateInnerClass (272 samples, 0.93%)</title><rect x="445.4" y="339.0" width="11.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="448.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate (160 samples, 0.55%)</title><rect x="445.8" y="323.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="448.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.convertArgumentTypes (108 samples, 0.37%)</title><rect x="445.8" y="307.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="448.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.convertType (108 samples, 0.37%)</title><rect x="445.8" y="291.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="448.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.cast (30 samples, 0.10%)</title><rect x="445.8" y="275.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="448.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.descriptorToName (24 samples, 0.08%)</title><rect x="445.8" y="259.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.8" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.08%)</title><rect x="445.8" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="448.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.08%)</title><rect x="445.8" y="227.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="448.8" y="238.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (12 samples, 0.04%)</title><rect x="445.8" y="211.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="448.8" y="222.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (12 samples, 0.04%)</title><rect x="445.8" y="195.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="448.8" y="206.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (12 samples, 0.04%)</title><rect x="445.8" y="179.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="448.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.04%)</title><rect x="446.3" y="211.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="449.3" y="222.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (12 samples, 0.04%)</title><rect x="446.3" y="195.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="449.3" y="206.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (12 samples, 0.04%)</title><rect x="446.3" y="179.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="449.3" y="190.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (12 samples, 0.04%)</title><rect x="446.3" y="163.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="449.3" y="174.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (78 samples, 0.27%)</title><rect x="447.0" y="275.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="450.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (12 samples, 0.04%)</title><rect x="447.5" y="259.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="450.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.04%)</title><rect x="447.5" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="450.5" y="254.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (54 samples, 0.18%)</title><rect x="448.0" y="259.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="451.0" y="270.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (48 samples, 0.16%)</title><rect x="448.0" y="243.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="451.0" y="254.0"></text>
</g>
<g>
<title>java/lang/String.replace (12 samples, 0.04%)</title><rect x="448.2" y="227.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="451.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (12 samples, 0.04%)</title><rect x="448.2" y="211.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="451.2" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (12 samples, 0.04%)</title><rect x="448.9" y="227.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.9" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (12 samples, 0.04%)</title><rect x="448.9" y="211.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="451.9" y="222.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (12 samples, 0.04%)</title><rect x="448.9" y="195.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.9" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.04%)</title><rect x="448.9" y="179.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="451.9" y="190.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (12 samples, 0.04%)</title><rect x="448.9" y="163.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="451.9" y="174.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (12 samples, 0.04%)</title><rect x="448.9" y="147.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="451.9" y="158.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (12 samples, 0.04%)</title><rect x="448.9" y="131.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="451.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (12 samples, 0.04%)</title><rect x="449.4" y="227.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="452.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.04%)</title><rect x="449.4" y="211.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.convertType (41 samples, 0.14%)</title><rect x="450.1" y="307.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.cast (16 samples, 0.05%)</title><rect x="450.1" y="291.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.descriptorToName (16 samples, 0.05%)</title><rect x="450.1" y="275.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.05%)</title><rect x="450.1" y="259.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.05%)</title><rect x="450.1" y="243.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.1" y="254.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.03%)</title><rect x="450.1" y="227.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="453.1" y="238.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="450.1" y="211.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="453.1" y="222.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="450.1" y="195.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="453.1" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.03%)</title><rect x="450.5" y="227.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.5" y="238.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.03%)</title><rect x="450.5" y="211.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="453.5" y="222.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.03%)</title><rect x="450.5" y="195.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="453.5" y="206.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="450.5" y="179.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="453.5" y="190.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (25 samples, 0.09%)</title><rect x="450.8" y="291.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.8" y="302.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (17 samples, 0.06%)</title><rect x="451.1" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.1" y="286.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (15 samples, 0.05%)</title><rect x="451.1" y="259.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="454.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodVisitor.visitMethodInsn (11 samples, 0.04%)</title><rect x="451.8" y="307.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="454.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (11 samples, 0.04%)</title><rect x="451.8" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="454.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (11 samples, 0.04%)</title><rect x="451.8" y="275.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (11 samples, 0.04%)</title><rect x="451.8" y="259.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="454.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (7 samples, 0.02%)</title><rect x="452.0" y="243.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateConstructor (16 samples, 0.05%)</title><rect x="452.2" y="323.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="455.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (12 samples, 0.04%)</title><rect x="452.2" y="307.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (10 samples, 0.03%)</title><rect x="452.3" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.defineHiddenClass (50 samples, 0.17%)</title><rect x="452.9" y="323.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="455.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.makeHiddenClassDefiner (40 samples, 0.14%)</title><rect x="453.2" y="307.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="456.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassFile.newInstance (36 samples, 0.12%)</title><rect x="453.2" y="291.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="456.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (12 samples, 0.04%)</title><rect x="454.2" y="275.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="457.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visit (18 samples, 0.06%)</title><rect x="455.1" y="323.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantClass (10 samples, 0.03%)</title><rect x="455.2" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="458.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8Reference (10 samples, 0.03%)</title><rect x="455.2" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="458.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (12 samples, 0.04%)</title><rect x="455.9" y="323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (10 samples, 0.03%)</title><rect x="456.0" y="307.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.constant (16 samples, 0.05%)</title><rect x="456.4" y="355.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.bindTo (8 samples, 0.03%)</title><rect x="456.4" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="459.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.bindArgumentL (8 samples, 0.03%)</title><rect x="456.4" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.bindArgumentL (8 samples, 0.03%)</title><rect x="456.4" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="459.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.identity (8 samples, 0.03%)</title><rect x="456.7" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="459.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.makeIdentity (8 samples, 0.03%)</title><rect x="456.7" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="459.7" y="334.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (14 samples, 0.05%)</title><rect x="457.2" y="355.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.2" y="366.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (14 samples, 0.05%)</title><rect x="457.2" y="339.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="460.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$1.run (14 samples, 0.05%)</title><rect x="457.2" y="323.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="460.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$1.run (14 samples, 0.05%)</title><rect x="457.2" y="307.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="460.2" y="318.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors (14 samples, 0.05%)</title><rect x="457.2" y="291.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="460.2" y="302.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (10 samples, 0.03%)</title><rect x="457.4" y="275.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.4" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (14 samples, 0.05%)</title><rect x="458.1" y="483.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.1" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap$Values.spliterator (7 samples, 0.02%)</title><rect x="458.3" y="467.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.3" y="478.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (7 samples, 0.02%)</title><rect x="458.3" y="451.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="461.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (9 samples, 0.03%)</title><rect x="459.0" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="462.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toMap (9 samples, 0.03%)</title><rect x="459.0" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (39 samples, 0.13%)</title><rect x="459.3" y="483.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (36 samples, 0.12%)</title><rect x="459.3" y="467.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="462.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (36 samples, 0.12%)</title><rect x="459.3" y="451.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="462.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (33 samples, 0.11%)</title><rect x="459.3" y="435.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (33 samples, 0.11%)</title><rect x="459.3" y="419.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="462.3" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (28 samples, 0.10%)</title><rect x="459.3" y="403.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (28 samples, 0.10%)</title><rect x="459.3" y="387.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="462.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$216.0x0000000800b70820.accept (28 samples, 0.10%)</title><rect x="459.3" y="371.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="462.3" y="382.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (28 samples, 0.10%)</title><rect x="459.3" y="355.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.3" y="366.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder$$Lambda$218.0x0000000800b713b8.apply (10 samples, 0.03%)</title><rect x="459.3" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="462.3" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (18 samples, 0.06%)</title><rect x="459.7" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.7" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (16 samples, 0.05%)</title><rect x="459.7" y="323.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="462.7" y="334.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (16 samples, 0.05%)</title><rect x="459.7" y="307.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="462.7" y="318.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (16 samples, 0.05%)</title><rect x="459.7" y="291.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="462.7" y="302.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (16 samples, 0.05%)</title><rect x="459.7" y="275.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="462.7" y="286.0"></text>
</g>
<g>
<title>jdk/management/jfr/internal/FlightRecorderMXBeanProvider.getPlatformComponentList (8 samples, 0.03%)</title><rect x="460.9" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="463.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.forEach (16 samples, 0.05%)</title><rect x="461.2" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="464.2" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap$ValueSpliterator.forEachRemaining (16 samples, 0.05%)</title><rect x="461.2" y="515.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (16 samples, 0.05%)</title><rect x="461.2" y="499.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$216.0x0000000800b70820.accept (16 samples, 0.05%)</title><rect x="461.2" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="464.2" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.lambda$toMap$68 (16 samples, 0.05%)</title><rect x="461.2" y="467.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="464.2" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.merge (16 samples, 0.05%)</title><rect x="461.2" y="451.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="464.2" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (14 samples, 0.05%)</title><rect x="461.2" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.2" y="446.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (14 samples, 0.05%)</title><rect x="461.2" y="419.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="464.2" y="430.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (14 samples, 0.05%)</title><rect x="461.2" y="403.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="464.2" y="414.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (14 samples, 0.05%)</title><rect x="461.2" y="387.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="464.2" y="398.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder.findSingleton (6,258 samples, 21.41%)</title><rect x="462.2" y="659.0" width="252.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="465.2" y="670.0">java/lang/management/ManagementFac..</text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (25 samples, 0.09%)</title><rect x="462.2" y="643.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="465.2" y="654.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (25 samples, 0.09%)</title><rect x="462.2" y="627.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="465.2" y="638.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (25 samples, 0.09%)</title><rect x="462.2" y="611.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="465.2" y="622.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, Thread*) (25 samples, 0.09%)</title><rect x="462.2" y="595.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="465.2" y="606.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, Thread*) (25 samples, 0.09%)</title><rect x="462.2" y="579.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="465.2" y="590.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_bsm(Thread*) (23 samples, 0.08%)</title><rect x="462.2" y="563.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="465.2" y="574.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_args(Thread*) (17 samples, 0.06%)</title><rect x="462.2" y="547.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="465.2" y="558.0"></text>
</g>
<g>
<title>ConstantPool::copy_bootstrap_arguments_at_impl(constantPoolHandle const&amp;, int, int, int, objArrayHandle, int, bool, Handle, Thread*) (15 samples, 0.05%)</title><rect x="462.2" y="531.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="465.2" y="542.0"></text>
</g>
<g>
<title>ConstantPool::resolve_constant_at_impl(constantPoolHandle const&amp;, int, int, bool*, Thread*) (15 samples, 0.05%)</title><rect x="462.2" y="515.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="465.2" y="526.0"></text>
</g>
<g>
<title>SystemDictionary::link_method_handle_constant(Klass*, int, Klass*, Symbol*, Symbol*, Thread*) (14 samples, 0.05%)</title><rect x="462.3" y="499.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="465.3" y="510.0"></text>
</g>
<g>
<title>java_lang_String::create_from_symbol(Symbol*, Thread*) (8 samples, 0.03%)</title><rect x="462.5" y="483.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="465.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,146 samples, 3.92%)</title><rect x="463.3" y="643.0" width="46.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.3" y="654.0">java..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1,146 samples, 3.92%)</title><rect x="463.3" y="627.0" width="46.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.3" y="638.0">java..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1,146 samples, 3.92%)</title><rect x="463.3" y="611.0" width="46.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.3" y="622.0">java..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (702 samples, 2.40%)</title><rect x="463.3" y="595.0" width="28.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="466.3" y="606.0">Op..</text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (702 samples, 2.40%)</title><rect x="463.3" y="579.0" width="28.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="466.3" y="590.0">In..</text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (702 samples, 2.40%)</title><rect x="463.3" y="563.0" width="28.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="466.3" y="574.0">Ep..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (444 samples, 1.52%)</title><rect x="491.6" y="595.0" width="17.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.6" y="606.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance (444 samples, 1.52%)</title><rect x="491.6" y="579.0" width="17.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="494.6" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (444 samples, 1.52%)</title><rect x="491.6" y="563.0" width="17.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="494.6" y="574.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (444 samples, 1.52%)</title><rect x="491.6" y="547.0" width="17.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="494.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.findMethodHandleType (25 samples, 0.09%)</title><rect x="509.5" y="643.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="512.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (25 samples, 0.09%)</title><rect x="509.5" y="627.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="512.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType$ConcurrentWeakInternSet.add (10 samples, 0.03%)</title><rect x="509.7" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.findForm (10 samples, 0.03%)</title><rect x="510.1" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalize (10 samples, 0.03%)</title><rect x="510.1" y="595.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (459 samples, 1.57%)</title><rect x="510.5" y="643.0" width="18.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="513.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (459 samples, 1.57%)</title><rect x="510.5" y="627.0" width="18.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (459 samples, 1.57%)</title><rect x="510.5" y="611.0" width="18.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (459 samples, 1.57%)</title><rect x="510.5" y="595.0" width="18.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="513.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (457 samples, 1.56%)</title><rect x="510.5" y="579.0" width="18.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="513.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x0000000800c78040.invokeStatic (457 samples, 1.56%)</title><rect x="510.5" y="563.0" width="18.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="513.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (457 samples, 1.56%)</title><rect x="510.5" y="547.0" width="18.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="513.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.&lt;init&gt; (135 samples, 0.46%)</title><rect x="510.6" y="531.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.lambdaClassName (16 samples, 0.05%)</title><rect x="511.4" y="515.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.toMethodDescriptorString (61 samples, 0.21%)</title><rect x="512.3" y="515.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.3" y="526.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseMethod (61 samples, 0.21%)</title><rect x="512.3" y="499.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.3" y="510.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (52 samples, 0.18%)</title><rect x="512.7" y="483.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="515.7" y="494.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (46 samples, 0.16%)</title><rect x="512.7" y="467.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.replace (12 samples, 0.04%)</title><rect x="512.9" y="451.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (12 samples, 0.04%)</title><rect x="512.9" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.03%)</title><rect x="513.6" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="516.6" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (10 samples, 0.03%)</title><rect x="513.6" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.6" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (10 samples, 0.03%)</title><rect x="513.6" y="419.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.03%)</title><rect x="513.6" y="403.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.6" y="414.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (10 samples, 0.03%)</title><rect x="513.6" y="387.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="516.6" y="398.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (10 samples, 0.03%)</title><rect x="513.6" y="371.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="516.6" y="382.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (10 samples, 0.03%)</title><rect x="513.6" y="355.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="516.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (12 samples, 0.04%)</title><rect x="514.0" y="451.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="517.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.04%)</title><rect x="514.0" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="517.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.&lt;init&gt; (8 samples, 0.03%)</title><rect x="514.8" y="515.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="517.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.&lt;init&gt; (8 samples, 0.03%)</title><rect x="514.8" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.8" y="510.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (24 samples, 0.08%)</title><rect x="515.1" y="515.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.1" y="526.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (16 samples, 0.05%)</title><rect x="515.4" y="499.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.4" y="510.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (14 samples, 0.05%)</title><rect x="515.4" y="483.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (320 samples, 1.09%)</title><rect x="516.0" y="531.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (278 samples, 0.95%)</title><rect x="516.3" y="515.0" width="11.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="519.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateInnerClass (278 samples, 0.95%)</title><rect x="516.3" y="499.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate (141 samples, 0.48%)</title><rect x="516.7" y="483.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.convertArgumentTypes (107 samples, 0.37%)</title><rect x="516.7" y="467.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="519.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.convertType (107 samples, 0.37%)</title><rect x="516.7" y="451.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="519.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.cast (29 samples, 0.10%)</title><rect x="516.7" y="435.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.descriptorToName (24 samples, 0.08%)</title><rect x="516.7" y="419.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="519.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.08%)</title><rect x="516.7" y="403.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="519.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.08%)</title><rect x="516.7" y="387.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.7" y="398.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (12 samples, 0.04%)</title><rect x="516.7" y="371.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="519.7" y="382.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (12 samples, 0.04%)</title><rect x="516.7" y="355.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="519.7" y="366.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (12 samples, 0.04%)</title><rect x="516.7" y="339.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="519.7" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.04%)</title><rect x="517.2" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.2" y="382.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (12 samples, 0.04%)</title><rect x="517.2" y="355.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="520.2" y="366.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (12 samples, 0.04%)</title><rect x="517.2" y="339.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="520.2" y="350.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (12 samples, 0.04%)</title><rect x="517.2" y="323.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="520.2" y="334.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (78 samples, 0.27%)</title><rect x="517.9" y="435.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (12 samples, 0.04%)</title><rect x="518.3" y="419.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.04%)</title><rect x="518.3" y="403.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.3" y="414.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (54 samples, 0.18%)</title><rect x="518.8" y="419.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.8" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (48 samples, 0.16%)</title><rect x="518.8" y="403.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.replace (12 samples, 0.04%)</title><rect x="519.1" y="387.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="522.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (12 samples, 0.04%)</title><rect x="519.1" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (12 samples, 0.04%)</title><rect x="519.8" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="522.8" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (12 samples, 0.04%)</title><rect x="519.8" y="371.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.8" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (12 samples, 0.04%)</title><rect x="519.8" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.04%)</title><rect x="519.8" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.8" y="350.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (12 samples, 0.04%)</title><rect x="519.8" y="323.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="522.8" y="334.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (12 samples, 0.04%)</title><rect x="519.8" y="307.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="522.8" y="318.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (12 samples, 0.04%)</title><rect x="519.8" y="291.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="522.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (12 samples, 0.04%)</title><rect x="520.3" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="523.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.04%)</title><rect x="520.3" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="523.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.convertType (21 samples, 0.07%)</title><rect x="521.0" y="467.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.cast (8 samples, 0.03%)</title><rect x="521.0" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.descriptorToName (8 samples, 0.03%)</title><rect x="521.0" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.03%)</title><rect x="521.0" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="521.0" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.0" y="414.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (13 samples, 0.04%)</title><rect x="521.3" y="451.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.3" y="462.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (9 samples, 0.03%)</title><rect x="521.5" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.5" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (8 samples, 0.03%)</title><rect x="521.5" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodVisitor.visitMethodInsn (13 samples, 0.04%)</title><rect x="521.9" y="467.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (13 samples, 0.04%)</title><rect x="521.9" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (13 samples, 0.04%)</title><rect x="521.9" y="435.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="524.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (13 samples, 0.04%)</title><rect x="521.9" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (7 samples, 0.02%)</title><rect x="522.1" y="403.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="525.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateConstructor (34 samples, 0.12%)</title><rect x="522.4" y="483.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="525.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.toMethodDescriptorString (12 samples, 0.04%)</title><rect x="522.4" y="467.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.4" y="478.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseMethod (12 samples, 0.04%)</title><rect x="522.4" y="451.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.4" y="462.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (8 samples, 0.03%)</title><rect x="522.5" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="525.5" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (7 samples, 0.02%)</title><rect x="522.5" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (12 samples, 0.04%)</title><rect x="522.9" y="467.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (10 samples, 0.03%)</title><rect x="523.0" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="526.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.defineHiddenClass (50 samples, 0.17%)</title><rect x="523.8" y="483.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="526.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.makeHiddenClassDefiner (40 samples, 0.14%)</title><rect x="524.1" y="467.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassFile.newInstance (36 samples, 0.12%)</title><rect x="524.1" y="451.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (12 samples, 0.04%)</title><rect x="525.0" y="435.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="528.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visit (18 samples, 0.06%)</title><rect x="526.0" y="483.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="529.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantClass (10 samples, 0.03%)</title><rect x="526.1" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8Reference (10 samples, 0.03%)</title><rect x="526.1" y="451.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (13 samples, 0.04%)</title><rect x="527.0" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (11 samples, 0.04%)</title><rect x="527.1" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findConstructor (32 samples, 0.11%)</title><rect x="527.6" y="515.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="530.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectConstructor (18 samples, 0.06%)</title><rect x="527.6" y="499.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectConstructorCommon (18 samples, 0.06%)</title><rect x="527.6" y="483.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="530.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (18 samples, 0.06%)</title><rect x="527.6" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makeAllocator (18 samples, 0.06%)</title><rect x="527.6" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.changeReturnType (10 samples, 0.03%)</title><rect x="527.9" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="530.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (10 samples, 0.03%)</title><rect x="527.9" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="530.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.resolveOrFail (14 samples, 0.05%)</title><rect x="528.3" y="499.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="531.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.checkSymbolicClass (8 samples, 0.03%)</title><rect x="528.6" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.isClassAccessible (8 samples, 0.03%)</title><rect x="528.6" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.6" y="478.0"></text>
</g>
<g>
<title>sun/invoke/util/VerifyAccess.isClassAccessible (8 samples, 0.03%)</title><rect x="528.6" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="531.6" y="462.0"></text>
</g>
<g>
<title>sun/invoke/util/VerifyAccess.isSamePackage (8 samples, 0.03%)</title><rect x="528.6" y="435.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.6" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (8 samples, 0.03%)</title><rect x="528.6" y="419.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (12 samples, 0.04%)</title><rect x="529.0" y="643.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (10 samples, 0.03%)</title><rect x="529.1" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.1" y="638.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,146 samples, 3.92%)</title><rect x="529.5" y="643.0" width="46.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="532.5" y="654.0">java..</text>
</g>
<g>
<title>java/util/HashMap$Values.spliterator (573 samples, 1.96%)</title><rect x="529.5" y="627.0" width="23.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.5" y="638.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (253 samples, 0.87%)</title><rect x="529.5" y="611.0" width="10.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="532.5" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (253 samples, 0.87%)</title><rect x="529.5" y="595.0" width="10.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="532.5" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (253 samples, 0.87%)</title><rect x="529.5" y="579.0" width="10.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="532.5" y="590.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (320 samples, 1.09%)</title><rect x="539.7" y="611.0" width="13.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="542.7" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (320 samples, 1.09%)</title><rect x="539.7" y="595.0" width="13.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="542.7" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (320 samples, 1.09%)</title><rect x="539.7" y="579.0" width="13.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="542.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (573 samples, 1.96%)</title><rect x="552.7" y="627.0" width="23.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.7" y="638.0">j..</text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (573 samples, 1.96%)</title><rect x="552.7" y="611.0" width="23.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="555.7" y="622.0">R..</text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (573 samples, 1.96%)</title><rect x="552.7" y="595.0" width="23.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="555.7" y="606.0">I..</text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (573 samples, 1.96%)</title><rect x="552.7" y="579.0" width="23.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="555.7" y="590.0">E..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (573 samples, 1.96%)</title><rect x="575.8" y="643.0" width="23.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.8" y="654.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (74 samples, 0.25%)</title><rect x="575.8" y="627.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="578.8" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (74 samples, 0.25%)</title><rect x="575.8" y="611.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="578.8" y="622.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (74 samples, 0.25%)</title><rect x="575.8" y="595.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="578.8" y="606.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (499 samples, 1.71%)</title><rect x="578.8" y="627.0" width="20.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="581.8" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (499 samples, 1.71%)</title><rect x="578.8" y="611.0" width="20.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="581.8" y="622.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (499 samples, 1.71%)</title><rect x="578.8" y="595.0" width="20.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="581.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (2,871 samples, 9.82%)</title><rect x="599.0" y="643.0" width="115.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.0" y="654.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2,296 samples, 7.85%)</title><rect x="599.0" y="627.0" width="92.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.0" y="638.0">java/util/s..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2,296 samples, 7.85%)</title><rect x="599.0" y="611.0" width="92.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.0" y="622.0">java/util/s..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1,148 samples, 3.93%)</title><rect x="599.0" y="595.0" width="46.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.0" y="606.0">java..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (575 samples, 1.97%)</title><rect x="599.0" y="579.0" width="23.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.0" y="590.0">j..</text>
</g>
<g>
<title>java/util/HashMap$ValueSpliterator.forEachRemaining (575 samples, 1.97%)</title><rect x="599.0" y="563.0" width="23.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="602.0" y="574.0">j..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (575 samples, 1.97%)</title><rect x="599.0" y="547.0" width="23.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.0" y="558.0">j..</text>
</g>
<g>
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder$$Lambda$220.0x0000000800b71840.test (575 samples, 1.97%)</title><rect x="599.0" y="531.0" width="23.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.0" y="542.0">j..</text>
</g>
<g>
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder.lambda$findSingleton$5 (575 samples, 1.97%)</title><rect x="599.0" y="515.0" width="23.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="602.0" y="526.0">j..</text>
</g>
<g>
<title>jdk/management/jfr/internal/FlightRecorderMXBeanProvider$SingleMBeanComponent.mbeanInterfaceNames (575 samples, 1.97%)</title><rect x="599.0" y="499.0" width="23.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="602.0" y="510.0">j..</text>
</g>
<g>
<title>java/util/Collections.singleton (573 samples, 1.96%)</title><rect x="599.0" y="483.0" width="23.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.0" y="494.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (122 samples, 0.42%)</title><rect x="599.0" y="467.0" width="5.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="602.0" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (122 samples, 0.42%)</title><rect x="599.0" y="451.0" width="5.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="602.0" y="462.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (122 samples, 0.42%)</title><rect x="599.0" y="435.0" width="5.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="602.0" y="446.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (451 samples, 1.54%)</title><rect x="604.0" y="467.0" width="18.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="607.0" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (451 samples, 1.54%)</title><rect x="604.0" y="451.0" width="18.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="607.0" y="462.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (451 samples, 1.54%)</title><rect x="604.0" y="435.0" width="18.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="607.0" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (573 samples, 1.96%)</title><rect x="622.2" y="579.0" width="23.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.2" y="590.0">j..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (573 samples, 1.96%)</title><rect x="622.2" y="563.0" width="23.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="625.2" y="574.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (74 samples, 0.25%)</title><rect x="622.2" y="547.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="625.2" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (74 samples, 0.25%)</title><rect x="622.2" y="531.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="625.2" y="542.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (74 samples, 0.25%)</title><rect x="622.2" y="515.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="625.2" y="526.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (499 samples, 1.71%)</title><rect x="625.1" y="547.0" width="20.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="628.1" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (499 samples, 1.71%)</title><rect x="625.1" y="531.0" width="20.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="628.1" y="542.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (499 samples, 1.71%)</title><rect x="625.1" y="515.0" width="20.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="628.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (575 samples, 1.97%)</title><rect x="645.3" y="595.0" width="23.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="648.3" y="606.0">j..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (575 samples, 1.97%)</title><rect x="645.3" y="579.0" width="23.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.3" y="590.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (514 samples, 1.76%)</title><rect x="645.3" y="563.0" width="20.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="648.3" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (512 samples, 1.75%)</title><rect x="645.4" y="547.0" width="20.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="648.4" y="558.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (512 samples, 1.75%)</title><rect x="645.4" y="531.0" width="20.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="648.4" y="542.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (61 samples, 0.21%)</title><rect x="666.0" y="563.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="669.0" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (61 samples, 0.21%)</title><rect x="666.0" y="547.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="669.0" y="558.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (61 samples, 0.21%)</title><rect x="666.0" y="531.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="669.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (573 samples, 1.96%)</title><rect x="668.5" y="595.0" width="23.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="671.5" y="606.0">j..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (573 samples, 1.96%)</title><rect x="668.5" y="579.0" width="23.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.5" y="590.0">j..</text>
</g>
<g>
<title>java/util/Optional.of (573 samples, 1.96%)</title><rect x="668.5" y="563.0" width="23.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.5" y="574.0">j..</text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (573 samples, 1.96%)</title><rect x="668.5" y="547.0" width="23.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="671.5" y="558.0">R..</text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (573 samples, 1.96%)</title><rect x="668.5" y="531.0" width="23.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="671.5" y="542.0">I..</text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (573 samples, 1.96%)</title><rect x="668.5" y="515.0" width="23.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="671.5" y="526.0">E..</text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (575 samples, 1.97%)</title><rect x="691.6" y="627.0" width="23.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.6" y="638.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (386 samples, 1.32%)</title><rect x="691.6" y="611.0" width="15.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="694.6" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (384 samples, 1.31%)</title><rect x="691.7" y="595.0" width="15.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="694.7" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (384 samples, 1.31%)</title><rect x="691.7" y="579.0" width="15.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="694.7" y="590.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (189 samples, 0.65%)</title><rect x="707.2" y="611.0" width="7.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="710.2" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (189 samples, 0.65%)</title><rect x="707.2" y="595.0" width="7.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="710.2" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (189 samples, 0.65%)</title><rect x="707.2" y="579.0" width="7.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="710.2" y="590.0"></text>
</g>
<g>
<title>sun/management/spi/PlatformMBeanProvider$PlatformComponent.getMBeans (8,949 samples, 30.61%)</title><rect x="714.8" y="659.0" width="361.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.8" y="670.0">sun/management/spi/PlatformMBeanProvider$Platform..</text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (27 samples, 0.09%)</title><rect x="714.8" y="643.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="717.8" y="654.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (27 samples, 0.09%)</title><rect x="714.8" y="627.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="717.8" y="638.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (27 samples, 0.09%)</title><rect x="714.8" y="611.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="717.8" y="622.0"></text>
</g>
<g>
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, Thread*) (27 samples, 0.09%)</title><rect x="714.8" y="595.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="717.8" y="606.0"></text>
</g>
<g>
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, Thread*) (27 samples, 0.09%)</title><rect x="714.8" y="579.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="717.8" y="590.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_bsm(Thread*) (25 samples, 0.09%)</title><rect x="714.8" y="563.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="717.8" y="574.0"></text>
</g>
<g>
<title>BootstrapInfo::resolve_args(Thread*) (14 samples, 0.05%)</title><rect x="714.8" y="547.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="717.8" y="558.0"></text>
</g>
<g>
<title>ConstantPool::copy_bootstrap_arguments_at_impl(constantPoolHandle const&amp;, int, int, int, objArrayHandle, int, bool, Handle, Thread*) (12 samples, 0.04%)</title><rect x="714.8" y="531.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="717.8" y="542.0"></text>
</g>
<g>
<title>ConstantPool::resolve_constant_at_impl(constantPoolHandle const&amp;, int, int, bool*, Thread*) (12 samples, 0.04%)</title><rect x="714.8" y="515.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="717.8" y="526.0"></text>
</g>
<g>
<title>SystemDictionary::link_method_handle_constant(Klass*, int, Klass*, Symbol*, Symbol*, Thread*) (12 samples, 0.04%)</title><rect x="714.8" y="499.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="717.8" y="510.0"></text>
</g>
<g>
<title>java_lang_String::create_from_symbol(Symbol*, Thread*) (8 samples, 0.03%)</title><rect x="715.0" y="483.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="718.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,146 samples, 3.92%)</title><rect x="715.9" y="643.0" width="46.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.9" y="654.0">java..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1,146 samples, 3.92%)</title><rect x="715.9" y="627.0" width="46.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="718.9" y="638.0">java..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1,146 samples, 3.92%)</title><rect x="715.9" y="611.0" width="46.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.9" y="622.0">java..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1,080 samples, 3.69%)</title><rect x="715.9" y="595.0" width="43.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="718.9" y="606.0">Opto..</text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1,080 samples, 3.69%)</title><rect x="715.9" y="579.0" width="43.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="718.9" y="590.0">Inst..</text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (1,080 samples, 3.69%)</title><rect x="715.9" y="563.0" width="43.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="718.9" y="574.0">Epsi..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (66 samples, 0.23%)</title><rect x="759.5" y="595.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.5" y="606.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance (66 samples, 0.23%)</title><rect x="759.5" y="579.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="762.5" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (66 samples, 0.23%)</title><rect x="759.5" y="563.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="762.5" y="574.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (66 samples, 0.23%)</title><rect x="759.5" y="547.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="762.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.findMethodHandleType (10 samples, 0.03%)</title><rect x="762.2" y="643.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="765.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (10 samples, 0.03%)</title><rect x="762.2" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="765.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (252 samples, 0.86%)</title><rect x="762.6" y="643.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="765.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (252 samples, 0.86%)</title><rect x="762.6" y="627.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (252 samples, 0.86%)</title><rect x="762.6" y="611.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="765.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (252 samples, 0.86%)</title><rect x="762.6" y="595.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="765.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (250 samples, 0.86%)</title><rect x="762.6" y="579.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="765.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x0000000800c78040.invokeStatic (250 samples, 0.86%)</title><rect x="762.6" y="563.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="765.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (250 samples, 0.86%)</title><rect x="762.6" y="547.0" width="10.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="765.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.&lt;init&gt; (70 samples, 0.24%)</title><rect x="762.7" y="531.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="765.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.lambdaClassName (16 samples, 0.05%)</title><rect x="763.5" y="515.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="766.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.&lt;init&gt; (8 samples, 0.03%)</title><rect x="764.2" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="767.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.&lt;init&gt; (8 samples, 0.03%)</title><rect x="764.2" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="767.2" y="510.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparse (24 samples, 0.08%)</title><rect x="764.5" y="515.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="767.5" y="526.0"></text>
</g>
<g>
<title>sun/invoke/util/BytecodeDescriptor.unparseSig (16 samples, 0.05%)</title><rect x="764.8" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="767.8" y="510.0"></text>
</g>
<g>
<title>java/lang/Class.descriptorString (14 samples, 0.05%)</title><rect x="764.8" y="483.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="767.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (178 samples, 0.61%)</title><rect x="765.5" y="531.0" width="7.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (136 samples, 0.47%)</title><rect x="765.7" y="515.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="768.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateInnerClass (136 samples, 0.47%)</title><rect x="765.7" y="499.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="768.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate (11 samples, 0.04%)</title><rect x="766.1" y="483.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodVisitor.visitMethodInsn (11 samples, 0.04%)</title><rect x="766.1" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (11 samples, 0.04%)</title><rect x="766.1" y="451.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (11 samples, 0.04%)</title><rect x="766.1" y="435.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (11 samples, 0.04%)</title><rect x="766.1" y="419.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateConstructor (22 samples, 0.08%)</title><rect x="766.6" y="483.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (12 samples, 0.04%)</title><rect x="766.6" y="467.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="769.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (10 samples, 0.03%)</title><rect x="766.7" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.defineHiddenClass (50 samples, 0.17%)</title><rect x="767.5" y="483.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="770.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.makeHiddenClassDefiner (40 samples, 0.14%)</title><rect x="767.8" y="467.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassFile.newInstance (36 samples, 0.12%)</title><rect x="767.8" y="451.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (12 samples, 0.04%)</title><rect x="768.8" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="771.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visit (18 samples, 0.06%)</title><rect x="769.7" y="483.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="772.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantClass (10 samples, 0.03%)</title><rect x="769.8" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="772.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8Reference (10 samples, 0.03%)</title><rect x="769.8" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="772.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (13 samples, 0.04%)</title><rect x="770.7" y="483.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="773.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (11 samples, 0.04%)</title><rect x="770.8" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findConstructor (32 samples, 0.11%)</title><rect x="771.3" y="515.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="774.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectConstructor (18 samples, 0.06%)</title><rect x="771.3" y="499.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="774.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectConstructorCommon (18 samples, 0.06%)</title><rect x="771.3" y="483.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (18 samples, 0.06%)</title><rect x="771.3" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="774.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makeAllocator (18 samples, 0.06%)</title><rect x="771.3" y="451.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="774.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.changeReturnType (10 samples, 0.03%)</title><rect x="771.6" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="774.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (10 samples, 0.03%)</title><rect x="771.6" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.resolveOrFail (14 samples, 0.05%)</title><rect x="772.0" y="499.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.checkSymbolicClass (8 samples, 0.03%)</title><rect x="772.3" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.isClassAccessible (8 samples, 0.03%)</title><rect x="772.3" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.3" y="478.0"></text>
</g>
<g>
<title>sun/invoke/util/VerifyAccess.isClassAccessible (8 samples, 0.03%)</title><rect x="772.3" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="775.3" y="462.0"></text>
</g>
<g>
<title>sun/invoke/util/VerifyAccess.isSamePackage (8 samples, 0.03%)</title><rect x="772.3" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.3" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (8 samples, 0.03%)</title><rect x="772.3" y="419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (50 samples, 0.17%)</title><rect x="772.7" y="643.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="775.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (47 samples, 0.16%)</title><rect x="772.9" y="627.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="775.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodForConstant (22 samples, 0.08%)</title><rect x="773.2" y="611.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodNoSecurityManager (22 samples, 0.08%)</title><rect x="773.2" y="595.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="776.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodCommon (22 samples, 0.08%)</title><rect x="773.2" y="579.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (22 samples, 0.08%)</title><rect x="773.2" y="563.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="776.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (12 samples, 0.04%)</title><rect x="773.6" y="547.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="776.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (10 samples, 0.03%)</title><rect x="773.7" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="776.7" y="542.0"></text>
</g>
<g>
<title>java/lang/management/DefaultPlatformMBeanProvider$3.nameToMBeanMap (588 samples, 2.01%)</title><rect x="774.8" y="643.0" width="23.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="777.8" y="654.0">j..</text>
</g>
<g>
<title>java/util/Collections.singletonMap (573 samples, 1.96%)</title><rect x="774.8" y="627.0" width="23.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.8" y="638.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (383 samples, 1.31%)</title><rect x="774.8" y="611.0" width="15.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="777.8" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (383 samples, 1.31%)</title><rect x="774.8" y="595.0" width="15.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="777.8" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (383 samples, 1.31%)</title><rect x="774.8" y="579.0" width="15.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="777.8" y="590.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (190 samples, 0.65%)</title><rect x="790.2" y="611.0" width="7.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="793.2" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (190 samples, 0.65%)</title><rect x="790.2" y="595.0" width="7.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="793.2" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (190 samples, 0.65%)</title><rect x="790.2" y="579.0" width="7.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="793.2" y="590.0"></text>
</g>
<g>
<title>sun/management/ManagementFactoryHelper.getMemoryMXBean (15 samples, 0.05%)</title><rect x="797.9" y="627.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="800.9" y="638.0"></text>
</g>
<g>
<title>sun/management/MemoryImpl.&lt;clinit&gt; (10 samples, 0.03%)</title><rect x="798.1" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="801.1" y="622.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_ldc(JavaThread*, Bytecodes::Code) (8 samples, 0.03%)</title><rect x="798.1" y="595.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="801.1" y="606.0"></text>
</g>
<g>
<title>Bytecode_loadconstant::resolve_constant(Thread*) const (8 samples, 0.03%)</title><rect x="798.1" y="579.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="801.1" y="590.0"></text>
</g>
<g>
<title>ConstantPool::resolve_constant_at_impl(constantPoolHandle const&amp;, int, int, bool*, Thread*) (8 samples, 0.03%)</title><rect x="798.1" y="563.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="801.1" y="574.0"></text>
</g>
<g>
<title>ConstantPool::string_at_impl(constantPoolHandle const&amp;, int, int, Thread*) (8 samples, 0.03%)</title><rect x="798.1" y="547.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="801.1" y="558.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (8 samples, 0.03%)</title><rect x="798.1" y="531.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="801.1" y="542.0"></text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short const*, int, unsigned long, Thread*) (8 samples, 0.03%)</title><rect x="798.1" y="515.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="801.1" y="526.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short const*, int, Thread*) (8 samples, 0.03%)</title><rect x="798.1" y="499.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="801.1" y="510.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,146 samples, 3.92%)</title><rect x="798.5" y="643.0" width="46.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.5" y="654.0">java..</text>
</g>
<g>
<title>java/util/Collections$SingletonSet.spliterator (573 samples, 1.96%)</title><rect x="798.5" y="627.0" width="23.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="801.5" y="638.0">j..</text>
</g>
<g>
<title>java/util/Collections.singletonSpliterator (573 samples, 1.96%)</title><rect x="798.5" y="611.0" width="23.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="801.5" y="622.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (383 samples, 1.31%)</title><rect x="798.5" y="595.0" width="15.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="801.5" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (383 samples, 1.31%)</title><rect x="798.5" y="579.0" width="15.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="801.5" y="590.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (383 samples, 1.31%)</title><rect x="798.5" y="563.0" width="15.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="801.5" y="574.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (190 samples, 0.65%)</title><rect x="814.0" y="595.0" width="7.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="817.0" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (190 samples, 0.65%)</title><rect x="814.0" y="579.0" width="7.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="817.0" y="590.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (190 samples, 0.65%)</title><rect x="814.0" y="563.0" width="7.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="817.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (573 samples, 1.96%)</title><rect x="821.6" y="627.0" width="23.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.6" y="638.0">j..</text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (573 samples, 1.96%)</title><rect x="821.6" y="611.0" width="23.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="824.6" y="622.0">R..</text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (573 samples, 1.96%)</title><rect x="821.6" y="595.0" width="23.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="824.6" y="606.0">I..</text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (573 samples, 1.96%)</title><rect x="821.6" y="579.0" width="23.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="824.6" y="590.0">E..</text>
</g>
<g>
<title>java/util/Collections$SingletonMap.values (573 samples, 1.96%)</title><rect x="844.8" y="643.0" width="23.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="847.8" y="654.0">j..</text>
</g>
<g>
<title>java/util/Collections.singleton (573 samples, 1.96%)</title><rect x="844.8" y="627.0" width="23.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="847.8" y="638.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (122 samples, 0.42%)</title><rect x="844.8" y="611.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="847.8" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (122 samples, 0.42%)</title><rect x="844.8" y="595.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="847.8" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (122 samples, 0.42%)</title><rect x="844.8" y="579.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="847.8" y="590.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (451 samples, 1.54%)</title><rect x="849.7" y="611.0" width="18.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="852.7" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (451 samples, 1.54%)</title><rect x="849.7" y="595.0" width="18.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="852.7" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (451 samples, 1.54%)</title><rect x="849.7" y="579.0" width="18.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="852.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (573 samples, 1.96%)</title><rect x="867.9" y="643.0" width="23.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="870.9" y="654.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (246 samples, 0.84%)</title><rect x="867.9" y="627.0" width="9.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="870.9" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (246 samples, 0.84%)</title><rect x="867.9" y="611.0" width="9.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="870.9" y="622.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (246 samples, 0.84%)</title><rect x="867.9" y="595.0" width="9.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="870.9" y="606.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (327 samples, 1.12%)</title><rect x="877.8" y="627.0" width="13.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="880.8" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (327 samples, 1.12%)</title><rect x="877.8" y="611.0" width="13.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="880.8" y="622.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (327 samples, 1.12%)</title><rect x="877.8" y="595.0" width="13.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="880.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (3,438 samples, 11.76%)</title><rect x="891.0" y="643.0" width="138.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="894.0" y="654.0">java/util/stream/..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2,865 samples, 9.80%)</title><rect x="891.0" y="627.0" width="115.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="894.0" y="638.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2,865 samples, 9.80%)</title><rect x="891.0" y="611.0" width="115.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="894.0" y="622.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2,292 samples, 7.84%)</title><rect x="891.0" y="595.0" width="92.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.0" y="606.0">java/util/s..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1,146 samples, 3.92%)</title><rect x="891.0" y="579.0" width="46.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.0" y="590.0">java..</text>
</g>
<g>
<title>java/util/Collections$2.forEachRemaining (573 samples, 1.96%)</title><rect x="891.0" y="563.0" width="23.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="894.0" y="574.0">j..</text>
</g>
<g>
<title>java/util/Collections$2.tryAdvance (573 samples, 1.96%)</title><rect x="891.0" y="547.0" width="23.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="894.0" y="558.0">j..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (573 samples, 1.96%)</title><rect x="891.0" y="531.0" width="23.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.0" y="542.0">j..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (573 samples, 1.96%)</title><rect x="891.0" y="515.0" width="23.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="894.0" y="526.0">j..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (573 samples, 1.96%)</title><rect x="891.0" y="499.0" width="23.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="894.0" y="510.0">j..</text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$93.0x0000000800b57348.accept (573 samples, 1.96%)</title><rect x="891.0" y="483.0" width="23.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="894.0" y="494.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.add (573 samples, 1.96%)</title><rect x="891.0" y="467.0" width="23.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="894.0" y="478.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.add (573 samples, 1.96%)</title><rect x="891.0" y="451.0" width="23.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="894.0" y="462.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.grow (573 samples, 1.96%)</title><rect x="891.0" y="435.0" width="23.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.0" y="446.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.grow (573 samples, 1.96%)</title><rect x="891.0" y="419.0" width="23.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="894.0" y="430.0">j..</text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (573 samples, 1.96%)</title><rect x="891.0" y="403.0" width="23.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="894.0" y="414.0">R..</text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (573 samples, 1.96%)</title><rect x="891.0" y="387.0" width="23.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="894.0" y="398.0">I..</text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (573 samples, 1.96%)</title><rect x="891.0" y="371.0" width="23.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="894.0" y="382.0">E..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (573 samples, 1.96%)</title><rect x="914.1" y="563.0" width="23.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="917.1" y="574.0">j..</text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (573 samples, 1.96%)</title><rect x="914.1" y="547.0" width="23.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="917.1" y="558.0">j..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (573 samples, 1.96%)</title><rect x="914.1" y="531.0" width="23.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="917.1" y="542.0">j..</text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$92.0x0000000800b57128.get (573 samples, 1.96%)</title><rect x="914.1" y="515.0" width="23.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="917.1" y="526.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (246 samples, 0.84%)</title><rect x="914.1" y="499.0" width="10.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="917.1" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (246 samples, 0.84%)</title><rect x="914.1" y="483.0" width="10.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="917.1" y="494.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (246 samples, 0.84%)</title><rect x="914.1" y="467.0" width="10.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="917.1" y="478.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (327 samples, 1.12%)</title><rect x="924.1" y="499.0" width="13.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="927.1" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (327 samples, 1.12%)</title><rect x="924.1" y="483.0" width="13.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="927.1" y="494.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (327 samples, 1.12%)</title><rect x="924.1" y="467.0" width="13.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="927.1" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1,146 samples, 3.92%)</title><rect x="937.3" y="579.0" width="46.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="940.3" y="590.0">java..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (573 samples, 1.96%)</title><rect x="937.3" y="563.0" width="23.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="940.3" y="574.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (74 samples, 0.25%)</title><rect x="937.3" y="547.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="940.3" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (74 samples, 0.25%)</title><rect x="937.3" y="531.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="940.3" y="542.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (74 samples, 0.25%)</title><rect x="937.3" y="515.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="940.3" y="526.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (499 samples, 1.71%)</title><rect x="940.2" y="547.0" width="20.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="943.2" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (499 samples, 1.71%)</title><rect x="940.2" y="531.0" width="20.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="943.2" y="542.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (499 samples, 1.71%)</title><rect x="940.2" y="515.0" width="20.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="943.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (573 samples, 1.96%)</title><rect x="960.4" y="563.0" width="23.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="963.4" y="574.0">j..</text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (573 samples, 1.96%)</title><rect x="960.4" y="547.0" width="23.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="963.4" y="558.0">R..</text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (573 samples, 1.96%)</title><rect x="960.4" y="531.0" width="23.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="963.4" y="542.0">I..</text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (573 samples, 1.96%)</title><rect x="960.4" y="515.0" width="23.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="963.4" y="526.0">E..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (573 samples, 1.96%)</title><rect x="983.5" y="595.0" width="23.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="986.5" y="606.0">j..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (573 samples, 1.96%)</title><rect x="983.5" y="579.0" width="23.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="986.5" y="590.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (327 samples, 1.12%)</title><rect x="983.5" y="563.0" width="13.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="986.5" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (327 samples, 1.12%)</title><rect x="983.5" y="547.0" width="13.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="986.5" y="558.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (327 samples, 1.12%)</title><rect x="983.5" y="531.0" width="13.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="986.5" y="542.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (246 samples, 0.84%)</title><rect x="996.7" y="563.0" width="9.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="999.7" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (246 samples, 0.84%)</title><rect x="996.7" y="547.0" width="9.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="999.7" y="558.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (246 samples, 0.84%)</title><rect x="996.7" y="531.0" width="9.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="999.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (573 samples, 1.96%)</title><rect x="1006.6" y="627.0" width="23.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1009.6" y="638.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (328 samples, 1.12%)</title><rect x="1006.6" y="611.0" width="13.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1009.6" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (328 samples, 1.12%)</title><rect x="1006.6" y="595.0" width="13.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1009.6" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (328 samples, 1.12%)</title><rect x="1006.6" y="579.0" width="13.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1009.6" y="590.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (245 samples, 0.84%)</title><rect x="1019.9" y="611.0" width="9.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1022.9" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (245 samples, 0.84%)</title><rect x="1019.9" y="595.0" width="9.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1022.9" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (245 samples, 0.84%)</title><rect x="1019.9" y="579.0" width="9.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1022.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (573 samples, 1.96%)</title><rect x="1029.8" y="643.0" width="23.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1032.8" y="654.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (74 samples, 0.25%)</title><rect x="1029.8" y="627.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1032.8" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (74 samples, 0.25%)</title><rect x="1029.8" y="611.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1032.8" y="622.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (74 samples, 0.25%)</title><rect x="1029.8" y="595.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1032.8" y="606.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (499 samples, 1.71%)</title><rect x="1032.8" y="627.0" width="20.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1035.8" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (499 samples, 1.71%)</title><rect x="1032.8" y="611.0" width="20.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1035.8" y="622.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (499 samples, 1.71%)</title><rect x="1032.8" y="595.0" width="20.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1035.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (573 samples, 1.96%)</title><rect x="1052.9" y="643.0" width="23.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.9" y="654.0">j..</text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (573 samples, 1.96%)</title><rect x="1052.9" y="627.0" width="23.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1055.9" y="638.0">R..</text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (573 samples, 1.96%)</title><rect x="1052.9" y="611.0" width="23.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1055.9" y="622.0">I..</text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (573 samples, 1.96%)</title><rect x="1052.9" y="595.0" width="23.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1055.9" y="606.0">E..</text>
</g>
<g>
<title>sun/management/MemoryImpl.getHeapMemoryUsage (579 samples, 1.98%)</title><rect x="1076.0" y="691.0" width="23.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.0" y="702.0">s..</text>
</g>
<g>
<title>sun/management/MemoryImpl.getMemoryUsage0 (579 samples, 1.98%)</title><rect x="1076.0" y="675.0" width="23.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1079.0" y="686.0">s..</text>
</g>
<g>
<title>jmm_GetMemoryUsage (576 samples, 1.97%)</title><rect x="1076.1" y="659.0" width="23.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1079.1" y="670.0">j..</text>
</g>
<g>
<title>MemoryService::create_MemoryUsage_obj(MemoryUsage, Thread*) (576 samples, 1.97%)</title><rect x="1076.1" y="643.0" width="23.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1079.1" y="654.0">M..</text>
</g>
<g>
<title>JavaCalls::construct_new_instance(InstanceKlass*, Symbol*, JavaCallArguments*, Thread*) (573 samples, 1.96%)</title><rect x="1076.1" y="627.0" width="23.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1079.1" y="638.0">J..</text>
</g>
<g>
<title>InstanceKlass::allocate_instance_handle(Thread*) (573 samples, 1.96%)</title><rect x="1076.1" y="611.0" width="23.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1079.1" y="622.0">I..</text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (573 samples, 1.96%)</title><rect x="1076.1" y="595.0" width="23.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1079.1" y="606.0">E..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,245 samples, 7.68%)</title><rect x="1099.4" y="835.0" width="90.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1102.4" y="846.0">java/lang/..</text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LL.make (211 samples, 0.72%)</title><rect x="1099.5" y="819.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1102.5" y="830.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (7 samples, 0.02%)</title><rect x="1099.5" y="803.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1102.5" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="1099.5" y="787.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1102.5" y="798.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="1099.5" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1102.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LL.&lt;init&gt; (204 samples, 0.70%)</title><rect x="1099.8" y="803.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1102.8" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (204 samples, 0.70%)</title><rect x="1099.8" y="787.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (204 samples, 0.70%)</title><rect x="1099.8" y="771.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1102.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (204 samples, 0.70%)</title><rect x="1099.8" y="755.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (204 samples, 0.70%)</title><rect x="1099.8" y="739.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1102.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (202 samples, 0.69%)</title><rect x="1099.8" y="723.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1102.8" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (182 samples, 0.62%)</title><rect x="1099.9" y="707.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1102.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (99 samples, 0.34%)</title><rect x="1099.9" y="691.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1102.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classData (7 samples, 0.02%)</title><rect x="1099.9" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1102.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (44 samples, 0.15%)</title><rect x="1100.3" y="675.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1103.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArguments (9 samples, 0.03%)</title><rect x="1100.3" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1103.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArgument (9 samples, 0.03%)</title><rect x="1100.3" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1103.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitImplicitConversion (8 samples, 0.03%)</title><rect x="1100.3" y="627.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1103.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitReferenceCast (8 samples, 0.03%)</title><rect x="1100.3" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1103.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitTypeInsn (7 samples, 0.02%)</title><rect x="1100.3" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1103.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getInvocationType (11 samples, 0.04%)</title><rect x="1100.7" y="659.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1103.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitFieldInsn (12 samples, 0.04%)</title><rect x="1101.2" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1104.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantFieldref (7 samples, 0.02%)</title><rect x="1101.4" y="643.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1104.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (7 samples, 0.02%)</title><rect x="1101.4" y="627.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1104.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (10 samples, 0.03%)</title><rect x="1101.6" y="659.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1104.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (8 samples, 0.03%)</title><rect x="1101.7" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1104.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (8 samples, 0.03%)</title><rect x="1101.7" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1104.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodEpilogue (24 samples, 0.08%)</title><rect x="1102.1" y="675.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1105.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMaxs (24 samples, 0.08%)</title><rect x="1102.1" y="659.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1105.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.computeAllFrames (24 samples, 0.08%)</title><rect x="1102.1" y="643.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1105.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.setInputFrameFromDescriptor (23 samples, 0.08%)</title><rect x="1102.1" y="627.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1105.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (14 samples, 0.05%)</title><rect x="1102.5" y="611.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1105.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.05%)</title><rect x="1102.5" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1105.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.05%)</title><rect x="1102.5" y="579.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1105.5" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.02%)</title><rect x="1102.5" y="563.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1105.5" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="1102.5" y="547.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1105.5" y="558.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="1102.5" y="531.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1105.5" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.02%)</title><rect x="1102.8" y="563.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1105.8" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.02%)</title><rect x="1102.8" y="547.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1105.8" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.02%)</title><rect x="1102.8" y="531.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1105.8" y="542.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="1102.8" y="515.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1105.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodPrologue (8 samples, 0.03%)</title><rect x="1103.1" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1106.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (8 samples, 0.03%)</title><rect x="1103.1" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1106.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (7 samples, 0.02%)</title><rect x="1103.1" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1106.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitAnnotation (13 samples, 0.04%)</title><rect x="1103.4" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1106.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/AnnotationWriter.create (13 samples, 0.04%)</title><rect x="1103.4" y="659.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1106.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classFilePrologue (20 samples, 0.07%)</title><rect x="1103.9" y="691.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1106.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (58 samples, 0.20%)</title><rect x="1104.7" y="691.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1107.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (53 samples, 0.18%)</title><rect x="1104.9" y="675.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1107.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="1105.4" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1108.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (14 samples, 0.05%)</title><rect x="1106.2" y="659.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1109.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (10 samples, 0.03%)</title><rect x="1106.3" y="643.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1109.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (10 samples, 0.03%)</title><rect x="1106.3" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1109.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadMethod (16 samples, 0.05%)</title><rect x="1107.3" y="707.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLL.make (215 samples, 0.74%)</title><rect x="1108.0" y="819.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1111.0" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLL.&lt;init&gt; (213 samples, 0.73%)</title><rect x="1108.1" y="803.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1111.1" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (213 samples, 0.73%)</title><rect x="1108.1" y="787.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1111.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (213 samples, 0.73%)</title><rect x="1108.1" y="771.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1111.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (213 samples, 0.73%)</title><rect x="1108.1" y="755.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1111.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (213 samples, 0.73%)</title><rect x="1108.1" y="739.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1111.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (211 samples, 0.72%)</title><rect x="1108.1" y="723.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.1" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (191 samples, 0.65%)</title><rect x="1108.2" y="707.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1111.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (108 samples, 0.37%)</title><rect x="1108.2" y="691.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1111.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classData (7 samples, 0.02%)</title><rect x="1108.2" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1111.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (53 samples, 0.18%)</title><rect x="1108.6" y="675.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1111.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArguments (9 samples, 0.03%)</title><rect x="1108.6" y="659.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1111.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArgument (9 samples, 0.03%)</title><rect x="1108.6" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1111.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitImplicitConversion (8 samples, 0.03%)</title><rect x="1108.6" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1111.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitReferenceCast (8 samples, 0.03%)</title><rect x="1108.6" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1111.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitTypeInsn (7 samples, 0.02%)</title><rect x="1108.6" y="595.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1111.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getInvocationType (15 samples, 0.05%)</title><rect x="1109.0" y="659.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1112.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (8 samples, 0.03%)</title><rect x="1109.3" y="643.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1112.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitFieldInsn (17 samples, 0.06%)</title><rect x="1109.6" y="659.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1112.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.execute (7 samples, 0.02%)</title><rect x="1109.6" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1112.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.push (7 samples, 0.02%)</title><rect x="1109.6" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1112.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.getAbstractTypeFromDescriptor (7 samples, 0.02%)</title><rect x="1109.6" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1112.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantFieldref (10 samples, 0.03%)</title><rect x="1109.9" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1112.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (10 samples, 0.03%)</title><rect x="1109.9" y="627.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1112.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (7 samples, 0.02%)</title><rect x="1110.0" y="611.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1113.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (10 samples, 0.03%)</title><rect x="1110.3" y="659.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1113.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (8 samples, 0.03%)</title><rect x="1110.4" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (8 samples, 0.03%)</title><rect x="1110.4" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1113.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodEpilogue (24 samples, 0.08%)</title><rect x="1110.8" y="675.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1113.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMaxs (24 samples, 0.08%)</title><rect x="1110.8" y="659.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1113.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.computeAllFrames (24 samples, 0.08%)</title><rect x="1110.8" y="643.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1113.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.setInputFrameFromDescriptor (23 samples, 0.08%)</title><rect x="1110.8" y="627.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1113.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (14 samples, 0.05%)</title><rect x="1111.2" y="611.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1114.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.05%)</title><rect x="1111.2" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.05%)</title><rect x="1111.2" y="579.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1114.2" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.02%)</title><rect x="1111.2" y="563.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1114.2" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="1111.2" y="547.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1114.2" y="558.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="1111.2" y="531.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1114.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.02%)</title><rect x="1111.5" y="563.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1114.5" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.02%)</title><rect x="1111.5" y="547.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1114.5" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.02%)</title><rect x="1111.5" y="531.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1114.5" y="542.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="1111.5" y="515.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1114.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodPrologue (8 samples, 0.03%)</title><rect x="1111.7" y="675.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1114.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (8 samples, 0.03%)</title><rect x="1111.7" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1114.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (7 samples, 0.02%)</title><rect x="1111.8" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1114.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitAnnotation (13 samples, 0.04%)</title><rect x="1112.1" y="675.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1115.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/AnnotationWriter.create (13 samples, 0.04%)</title><rect x="1112.1" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1115.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classFilePrologue (20 samples, 0.07%)</title><rect x="1112.6" y="691.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1115.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (58 samples, 0.20%)</title><rect x="1113.4" y="691.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1116.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (53 samples, 0.18%)</title><rect x="1113.6" y="675.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1116.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="1114.1" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1117.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (14 samples, 0.05%)</title><rect x="1114.8" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1117.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (10 samples, 0.03%)</title><rect x="1115.0" y="643.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1118.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (10 samples, 0.03%)</title><rect x="1115.0" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1118.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadMethod (16 samples, 0.05%)</title><rect x="1115.9" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1118.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLL.make (227 samples, 0.78%)</title><rect x="1116.7" y="819.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1119.7" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLL.&lt;init&gt; (224 samples, 0.77%)</title><rect x="1116.8" y="803.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1119.8" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (224 samples, 0.77%)</title><rect x="1116.8" y="787.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1119.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (224 samples, 0.77%)</title><rect x="1116.8" y="771.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1119.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (224 samples, 0.77%)</title><rect x="1116.8" y="755.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1119.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (224 samples, 0.77%)</title><rect x="1116.8" y="739.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1119.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (222 samples, 0.76%)</title><rect x="1116.8" y="723.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1119.8" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (202 samples, 0.69%)</title><rect x="1116.9" y="707.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1119.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (119 samples, 0.41%)</title><rect x="1116.9" y="691.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1119.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classData (7 samples, 0.02%)</title><rect x="1116.9" y="675.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1119.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (63 samples, 0.22%)</title><rect x="1117.3" y="675.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1120.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArguments (9 samples, 0.03%)</title><rect x="1117.3" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArgument (9 samples, 0.03%)</title><rect x="1117.3" y="643.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1120.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitImplicitConversion (8 samples, 0.03%)</title><rect x="1117.3" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitReferenceCast (8 samples, 0.03%)</title><rect x="1117.3" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1120.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitTypeInsn (7 samples, 0.02%)</title><rect x="1117.3" y="595.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1120.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getInvocationType (19 samples, 0.06%)</title><rect x="1117.8" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (10 samples, 0.03%)</title><rect x="1118.1" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1121.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitFieldInsn (22 samples, 0.08%)</title><rect x="1118.5" y="659.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1121.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.execute (9 samples, 0.03%)</title><rect x="1118.5" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.push (9 samples, 0.03%)</title><rect x="1118.5" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1121.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.getAbstractTypeFromDescriptor (9 samples, 0.03%)</title><rect x="1118.5" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1121.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.03%)</title><rect x="1118.5" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1121.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="1118.5" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1121.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantFieldref (13 samples, 0.04%)</title><rect x="1118.9" y="643.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1121.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (13 samples, 0.04%)</title><rect x="1118.9" y="627.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1121.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (9 samples, 0.03%)</title><rect x="1119.0" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1122.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (11 samples, 0.04%)</title><rect x="1119.4" y="659.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (8 samples, 0.03%)</title><rect x="1119.5" y="643.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1122.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (8 samples, 0.03%)</title><rect x="1119.5" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodEpilogue (24 samples, 0.08%)</title><rect x="1119.9" y="675.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMaxs (24 samples, 0.08%)</title><rect x="1119.9" y="659.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1122.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.computeAllFrames (24 samples, 0.08%)</title><rect x="1119.9" y="643.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1122.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.setInputFrameFromDescriptor (23 samples, 0.08%)</title><rect x="1120.0" y="627.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1123.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (14 samples, 0.05%)</title><rect x="1120.3" y="611.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1123.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.05%)</title><rect x="1120.3" y="595.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1123.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.05%)</title><rect x="1120.3" y="579.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1123.3" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.02%)</title><rect x="1120.3" y="563.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1123.3" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="1120.3" y="547.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1123.3" y="558.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="1120.3" y="531.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1123.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.02%)</title><rect x="1120.6" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1123.6" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.02%)</title><rect x="1120.6" y="547.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1123.6" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.02%)</title><rect x="1120.6" y="531.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1123.6" y="542.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="1120.6" y="515.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1123.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodPrologue (8 samples, 0.03%)</title><rect x="1120.9" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1123.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (8 samples, 0.03%)</title><rect x="1120.9" y="659.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1123.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (7 samples, 0.02%)</title><rect x="1120.9" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1123.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitAnnotation (13 samples, 0.04%)</title><rect x="1121.2" y="675.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1124.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/AnnotationWriter.create (13 samples, 0.04%)</title><rect x="1121.2" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1124.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classFilePrologue (20 samples, 0.07%)</title><rect x="1121.7" y="691.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1124.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (58 samples, 0.20%)</title><rect x="1122.6" y="691.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1125.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (53 samples, 0.18%)</title><rect x="1122.8" y="675.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1125.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="1123.2" y="659.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1126.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (14 samples, 0.05%)</title><rect x="1124.0" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1127.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (10 samples, 0.03%)</title><rect x="1124.2" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (10 samples, 0.03%)</title><rect x="1124.2" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1127.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadMethod (16 samples, 0.05%)</title><rect x="1125.1" y="707.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLL.make (234 samples, 0.80%)</title><rect x="1125.8" y="819.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1128.8" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLL.&lt;init&gt; (233 samples, 0.80%)</title><rect x="1125.9" y="803.0" width="9.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1128.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (233 samples, 0.80%)</title><rect x="1125.9" y="787.0" width="9.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1128.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (233 samples, 0.80%)</title><rect x="1125.9" y="771.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (233 samples, 0.80%)</title><rect x="1125.9" y="755.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1128.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (233 samples, 0.80%)</title><rect x="1125.9" y="739.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (231 samples, 0.79%)</title><rect x="1125.9" y="723.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1128.9" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (211 samples, 0.72%)</title><rect x="1126.0" y="707.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (128 samples, 0.44%)</title><rect x="1126.0" y="691.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classData (7 samples, 0.02%)</title><rect x="1126.0" y="675.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (72 samples, 0.25%)</title><rect x="1126.4" y="675.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1129.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArguments (9 samples, 0.03%)</title><rect x="1126.4" y="659.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1129.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArgument (9 samples, 0.03%)</title><rect x="1126.4" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1129.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitImplicitConversion (8 samples, 0.03%)</title><rect x="1126.4" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1129.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitReferenceCast (8 samples, 0.03%)</title><rect x="1126.4" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1129.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitTypeInsn (7 samples, 0.02%)</title><rect x="1126.4" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1129.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getInvocationType (23 samples, 0.08%)</title><rect x="1126.8" y="659.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1129.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (12 samples, 0.04%)</title><rect x="1127.3" y="643.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1130.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitFieldInsn (28 samples, 0.10%)</title><rect x="1127.8" y="659.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1130.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.execute (11 samples, 0.04%)</title><rect x="1127.8" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1130.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.push (11 samples, 0.04%)</title><rect x="1127.8" y="627.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1130.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.getAbstractTypeFromDescriptor (11 samples, 0.04%)</title><rect x="1127.8" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1130.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.03%)</title><rect x="1127.8" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1130.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.03%)</title><rect x="1127.8" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1130.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantFieldref (17 samples, 0.06%)</title><rect x="1128.2" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1131.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (17 samples, 0.06%)</title><rect x="1128.2" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1131.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (12 samples, 0.04%)</title><rect x="1128.4" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (10 samples, 0.03%)</title><rect x="1128.9" y="659.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1131.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (7 samples, 0.02%)</title><rect x="1129.0" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (7 samples, 0.02%)</title><rect x="1129.0" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1132.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodEpilogue (24 samples, 0.08%)</title><rect x="1129.4" y="675.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1132.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMaxs (24 samples, 0.08%)</title><rect x="1129.4" y="659.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1132.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.computeAllFrames (24 samples, 0.08%)</title><rect x="1129.4" y="643.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1132.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.setInputFrameFromDescriptor (23 samples, 0.08%)</title><rect x="1129.4" y="627.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1132.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (14 samples, 0.05%)</title><rect x="1129.8" y="611.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1132.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.05%)</title><rect x="1129.8" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1132.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.05%)</title><rect x="1129.8" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1132.8" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.02%)</title><rect x="1129.8" y="563.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1132.8" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="1129.8" y="547.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1132.8" y="558.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="1129.8" y="531.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1132.8" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.02%)</title><rect x="1130.1" y="563.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1133.1" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.02%)</title><rect x="1130.1" y="547.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1133.1" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.02%)</title><rect x="1130.1" y="531.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1133.1" y="542.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="1130.1" y="515.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1133.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodPrologue (8 samples, 0.03%)</title><rect x="1130.3" y="675.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1133.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (8 samples, 0.03%)</title><rect x="1130.3" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1133.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (7 samples, 0.02%)</title><rect x="1130.4" y="643.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitAnnotation (13 samples, 0.04%)</title><rect x="1130.7" y="675.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1133.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/AnnotationWriter.create (13 samples, 0.04%)</title><rect x="1130.7" y="659.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classFilePrologue (20 samples, 0.07%)</title><rect x="1131.2" y="691.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1134.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (58 samples, 0.20%)</title><rect x="1132.0" y="691.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1135.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (53 samples, 0.18%)</title><rect x="1132.2" y="675.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1135.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="1132.7" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1135.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (14 samples, 0.05%)</title><rect x="1133.5" y="659.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1136.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (10 samples, 0.03%)</title><rect x="1133.6" y="643.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (10 samples, 0.03%)</title><rect x="1133.6" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadMethod (16 samples, 0.05%)</title><rect x="1134.5" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLL.make (252 samples, 0.86%)</title><rect x="1135.3" y="819.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1138.3" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLL.&lt;init&gt; (251 samples, 0.86%)</title><rect x="1135.3" y="803.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.3" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (251 samples, 0.86%)</title><rect x="1135.3" y="787.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1138.3" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (251 samples, 0.86%)</title><rect x="1135.3" y="771.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1138.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (251 samples, 0.86%)</title><rect x="1135.3" y="755.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1138.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (251 samples, 0.86%)</title><rect x="1135.3" y="739.0" width="10.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (249 samples, 0.85%)</title><rect x="1135.3" y="723.0" width="10.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1138.3" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (229 samples, 0.78%)</title><rect x="1135.5" y="707.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1138.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (146 samples, 0.50%)</title><rect x="1135.5" y="691.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1138.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classData (7 samples, 0.02%)</title><rect x="1135.5" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1138.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (89 samples, 0.30%)</title><rect x="1135.8" y="675.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1138.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArguments (10 samples, 0.03%)</title><rect x="1135.8" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1138.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArgument (10 samples, 0.03%)</title><rect x="1135.8" y="643.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1138.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitImplicitConversion (9 samples, 0.03%)</title><rect x="1135.8" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1138.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitReferenceCast (9 samples, 0.03%)</title><rect x="1135.8" y="611.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1138.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitTypeInsn (8 samples, 0.03%)</title><rect x="1135.9" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1138.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getInvocationType (30 samples, 0.10%)</title><rect x="1136.3" y="659.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1139.3" y="670.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (8 samples, 0.03%)</title><rect x="1136.3" y="643.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1139.3" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (8 samples, 0.03%)</title><rect x="1136.3" y="627.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1139.3" y="638.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="1136.3" y="611.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1139.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (16 samples, 0.05%)</title><rect x="1136.9" y="643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1139.9" y="654.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (8 samples, 0.03%)</title><rect x="1136.9" y="627.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1139.9" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (8 samples, 0.03%)</title><rect x="1136.9" y="611.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1139.9" y="622.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="1136.9" y="595.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1139.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (8 samples, 0.03%)</title><rect x="1137.2" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.2" y="638.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (8 samples, 0.03%)</title><rect x="1137.2" y="611.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1140.2" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="1137.2" y="595.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1140.2" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="1137.2" y="579.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1140.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitFieldInsn (33 samples, 0.11%)</title><rect x="1137.5" y="659.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.execute (13 samples, 0.04%)</title><rect x="1137.5" y="643.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1140.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.push (13 samples, 0.04%)</title><rect x="1137.5" y="627.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1140.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.getAbstractTypeFromDescriptor (13 samples, 0.04%)</title><rect x="1137.5" y="611.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1140.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.04%)</title><rect x="1137.5" y="595.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1140.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.04%)</title><rect x="1137.5" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1140.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantFieldref (20 samples, 0.07%)</title><rect x="1138.1" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (20 samples, 0.07%)</title><rect x="1138.1" y="627.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (14 samples, 0.05%)</title><rect x="1138.3" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1141.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8 (7 samples, 0.02%)</title><rect x="1138.6" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.6" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.02%)</title><rect x="1138.6" y="579.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1141.6" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="1138.6" y="563.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1141.6" y="574.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="1138.6" y="547.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1141.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (14 samples, 0.05%)</title><rect x="1138.9" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (10 samples, 0.03%)</title><rect x="1139.0" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1142.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (10 samples, 0.03%)</title><rect x="1139.0" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1142.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (7 samples, 0.02%)</title><rect x="1139.1" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodEpilogue (19 samples, 0.06%)</title><rect x="1139.5" y="675.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1142.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMaxs (19 samples, 0.06%)</title><rect x="1139.5" y="659.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.computeAllFrames (19 samples, 0.06%)</title><rect x="1139.5" y="643.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1142.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.setInputFrameFromDescriptor (18 samples, 0.06%)</title><rect x="1139.6" y="627.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1142.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (12 samples, 0.04%)</title><rect x="1139.8" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.04%)</title><rect x="1139.8" y="595.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1142.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.04%)</title><rect x="1139.8" y="579.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodPrologue (14 samples, 0.05%)</title><rect x="1140.3" y="675.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1143.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (8 samples, 0.03%)</title><rect x="1140.6" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1143.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (7 samples, 0.02%)</title><rect x="1140.6" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1143.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitAnnotation (12 samples, 0.04%)</title><rect x="1140.9" y="675.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1143.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/AnnotationWriter.create (12 samples, 0.04%)</title><rect x="1140.9" y="659.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classFilePrologue (20 samples, 0.07%)</title><rect x="1141.4" y="691.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1144.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (58 samples, 0.20%)</title><rect x="1142.2" y="691.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1145.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (53 samples, 0.18%)</title><rect x="1142.4" y="675.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1145.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="1142.9" y="659.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1145.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (14 samples, 0.05%)</title><rect x="1143.6" y="659.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (10 samples, 0.03%)</title><rect x="1143.8" y="643.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1146.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (10 samples, 0.03%)</title><rect x="1143.8" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1146.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadMethod (16 samples, 0.05%)</title><rect x="1144.7" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1147.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLL.make (259 samples, 0.89%)</title><rect x="1145.4" y="819.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1148.4" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLL.&lt;init&gt; (258 samples, 0.88%)</title><rect x="1145.5" y="803.0" width="10.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1148.5" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (258 samples, 0.88%)</title><rect x="1145.5" y="787.0" width="10.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1148.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (258 samples, 0.88%)</title><rect x="1145.5" y="771.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1148.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (258 samples, 0.88%)</title><rect x="1145.5" y="755.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1148.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (258 samples, 0.88%)</title><rect x="1145.5" y="739.0" width="10.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1148.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (256 samples, 0.88%)</title><rect x="1145.5" y="723.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1148.5" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (236 samples, 0.81%)</title><rect x="1145.6" y="707.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1148.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (153 samples, 0.52%)</title><rect x="1145.6" y="691.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1148.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classData (7 samples, 0.02%)</title><rect x="1145.6" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1148.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (103 samples, 0.35%)</title><rect x="1146.0" y="675.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1149.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArguments (11 samples, 0.04%)</title><rect x="1146.0" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1149.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArgument (11 samples, 0.04%)</title><rect x="1146.0" y="643.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitImplicitConversion (9 samples, 0.03%)</title><rect x="1146.0" y="627.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitReferenceCast (9 samples, 0.03%)</title><rect x="1146.0" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1149.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitTypeInsn (8 samples, 0.03%)</title><rect x="1146.0" y="595.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getInvocationType (34 samples, 0.12%)</title><rect x="1146.5" y="659.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1149.5" y="670.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (9 samples, 0.03%)</title><rect x="1146.5" y="643.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1149.5" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (9 samples, 0.03%)</title><rect x="1146.5" y="627.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.5" y="638.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (9 samples, 0.03%)</title><rect x="1146.5" y="611.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1149.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getMethodOrFieldType (7 samples, 0.02%)</title><rect x="1146.9" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1149.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.methodType (7 samples, 0.02%)</title><rect x="1146.9" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (7 samples, 0.02%)</title><rect x="1146.9" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.9" y="622.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (7 samples, 0.02%)</title><rect x="1146.9" y="595.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1149.9" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="1146.9" y="579.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1149.9" y="590.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="1146.9" y="563.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1149.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (18 samples, 0.06%)</title><rect x="1147.2" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1150.2" y="654.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (9 samples, 0.03%)</title><rect x="1147.2" y="627.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1150.2" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (9 samples, 0.03%)</title><rect x="1147.2" y="611.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1150.2" y="622.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (9 samples, 0.03%)</title><rect x="1147.2" y="595.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1150.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (9 samples, 0.03%)</title><rect x="1147.5" y="627.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1150.5" y="638.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (9 samples, 0.03%)</title><rect x="1147.5" y="611.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1150.5" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (9 samples, 0.03%)</title><rect x="1147.5" y="595.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1150.5" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (9 samples, 0.03%)</title><rect x="1147.5" y="579.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1150.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitFieldInsn (38 samples, 0.13%)</title><rect x="1147.9" y="659.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1150.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.execute (15 samples, 0.05%)</title><rect x="1147.9" y="643.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1150.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.push (15 samples, 0.05%)</title><rect x="1147.9" y="627.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1150.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.getAbstractTypeFromDescriptor (15 samples, 0.05%)</title><rect x="1147.9" y="611.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1150.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.05%)</title><rect x="1147.9" y="595.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1150.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.05%)</title><rect x="1147.9" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1150.9" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.02%)</title><rect x="1147.9" y="563.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1150.9" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="1147.9" y="547.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1150.9" y="558.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="1147.9" y="531.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1150.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.02%)</title><rect x="1148.2" y="563.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1151.2" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.02%)</title><rect x="1148.2" y="547.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1151.2" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.02%)</title><rect x="1148.2" y="531.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.2" y="542.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="1148.2" y="515.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantFieldref (22 samples, 0.08%)</title><rect x="1148.5" y="643.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1151.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (22 samples, 0.08%)</title><rect x="1148.5" y="627.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1151.5" y="638.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (7 samples, 0.02%)</title><rect x="1148.5" y="611.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1151.5" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="1148.5" y="595.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1151.5" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="1148.5" y="579.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (15 samples, 0.05%)</title><rect x="1148.8" y="611.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1151.8" y="622.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (7 samples, 0.02%)</title><rect x="1148.8" y="595.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.8" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.02%)</title><rect x="1148.8" y="579.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1151.8" y="590.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (7 samples, 0.02%)</title><rect x="1148.8" y="563.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1151.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8 (8 samples, 0.03%)</title><rect x="1149.1" y="595.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1152.1" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.03%)</title><rect x="1149.1" y="579.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.1" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="1149.1" y="563.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1152.1" y="574.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="1149.1" y="547.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1152.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (18 samples, 0.06%)</title><rect x="1149.4" y="659.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1152.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (14 samples, 0.05%)</title><rect x="1149.6" y="643.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1152.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (14 samples, 0.05%)</title><rect x="1149.6" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1152.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (10 samples, 0.03%)</title><rect x="1149.8" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1152.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodEpilogue (19 samples, 0.06%)</title><rect x="1150.2" y="675.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1153.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMaxs (19 samples, 0.06%)</title><rect x="1150.2" y="659.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1153.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.computeAllFrames (19 samples, 0.06%)</title><rect x="1150.2" y="643.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1153.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.setInputFrameFromDescriptor (18 samples, 0.06%)</title><rect x="1150.3" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1153.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (12 samples, 0.04%)</title><rect x="1150.5" y="611.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1153.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.04%)</title><rect x="1150.5" y="595.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1153.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.04%)</title><rect x="1150.5" y="579.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1153.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodPrologue (8 samples, 0.03%)</title><rect x="1151.0" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1154.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (8 samples, 0.03%)</title><rect x="1151.0" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1154.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (7 samples, 0.02%)</title><rect x="1151.1" y="643.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1154.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitAnnotation (12 samples, 0.04%)</title><rect x="1151.3" y="675.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1154.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/AnnotationWriter.create (12 samples, 0.04%)</title><rect x="1151.3" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1154.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classFilePrologue (20 samples, 0.07%)</title><rect x="1151.8" y="691.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1154.8" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (58 samples, 0.20%)</title><rect x="1152.6" y="691.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1155.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (53 samples, 0.18%)</title><rect x="1152.8" y="675.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1155.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="1153.3" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1156.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (14 samples, 0.05%)</title><rect x="1154.1" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1157.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (10 samples, 0.03%)</title><rect x="1154.2" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1157.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (10 samples, 0.03%)</title><rect x="1154.2" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1157.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadMethod (16 samples, 0.05%)</title><rect x="1155.2" y="707.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1158.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLLL.make (268 samples, 0.92%)</title><rect x="1155.9" y="819.0" width="10.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1158.9" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLLL.&lt;init&gt; (267 samples, 0.91%)</title><rect x="1155.9" y="803.0" width="10.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1158.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (267 samples, 0.91%)</title><rect x="1155.9" y="787.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (267 samples, 0.91%)</title><rect x="1155.9" y="771.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1158.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (267 samples, 0.91%)</title><rect x="1155.9" y="755.0" width="10.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1158.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (267 samples, 0.91%)</title><rect x="1155.9" y="739.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1158.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (265 samples, 0.91%)</title><rect x="1155.9" y="723.0" width="10.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1158.9" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (245 samples, 0.84%)</title><rect x="1156.1" y="707.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1159.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (162 samples, 0.55%)</title><rect x="1156.1" y="691.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1159.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classData (7 samples, 0.02%)</title><rect x="1156.1" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1159.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (112 samples, 0.38%)</title><rect x="1156.5" y="675.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1159.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArguments (10 samples, 0.03%)</title><rect x="1156.5" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1159.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArgument (10 samples, 0.03%)</title><rect x="1156.5" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1159.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitImplicitConversion (9 samples, 0.03%)</title><rect x="1156.5" y="627.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1159.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitReferenceCast (9 samples, 0.03%)</title><rect x="1156.5" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1159.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitTypeInsn (8 samples, 0.03%)</title><rect x="1156.5" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1159.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getInvocationType (38 samples, 0.13%)</title><rect x="1156.9" y="659.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1159.9" y="670.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (10 samples, 0.03%)</title><rect x="1156.9" y="643.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.9" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (10 samples, 0.03%)</title><rect x="1156.9" y="627.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1159.9" y="638.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (10 samples, 0.03%)</title><rect x="1156.9" y="611.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1159.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getMethodOrFieldType (8 samples, 0.03%)</title><rect x="1157.3" y="643.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1160.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.methodType (8 samples, 0.03%)</title><rect x="1157.3" y="627.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1160.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (8 samples, 0.03%)</title><rect x="1157.3" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.3" y="622.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (8 samples, 0.03%)</title><rect x="1157.3" y="595.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1160.3" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="1157.3" y="579.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1160.3" y="590.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="1157.3" y="563.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1160.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (20 samples, 0.07%)</title><rect x="1157.7" y="643.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1160.7" y="654.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (10 samples, 0.03%)</title><rect x="1157.7" y="627.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1160.7" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (10 samples, 0.03%)</title><rect x="1157.7" y="611.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1160.7" y="622.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (10 samples, 0.03%)</title><rect x="1157.7" y="595.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (10 samples, 0.03%)</title><rect x="1158.1" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.1" y="638.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (10 samples, 0.03%)</title><rect x="1158.1" y="611.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1161.1" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (10 samples, 0.03%)</title><rect x="1158.1" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.1" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (10 samples, 0.03%)</title><rect x="1158.1" y="579.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitFieldInsn (44 samples, 0.15%)</title><rect x="1158.5" y="659.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1161.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.execute (17 samples, 0.06%)</title><rect x="1158.6" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.push (17 samples, 0.06%)</title><rect x="1158.6" y="627.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1161.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.getAbstractTypeFromDescriptor (17 samples, 0.06%)</title><rect x="1158.6" y="611.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1161.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.05%)</title><rect x="1158.6" y="595.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1161.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.05%)</title><rect x="1158.6" y="579.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1161.6" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.03%)</title><rect x="1158.6" y="563.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.6" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="1158.6" y="547.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1161.6" y="558.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="1158.6" y="531.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1161.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.03%)</title><rect x="1158.9" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1161.9" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.03%)</title><rect x="1158.9" y="547.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1161.9" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.03%)</title><rect x="1158.9" y="531.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1161.9" y="542.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="1158.9" y="515.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantFieldref (25 samples, 0.09%)</title><rect x="1159.2" y="643.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1162.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (25 samples, 0.09%)</title><rect x="1159.2" y="627.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1162.2" y="638.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (8 samples, 0.03%)</title><rect x="1159.2" y="611.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1162.2" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="1159.2" y="595.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.2" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="1159.2" y="579.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (17 samples, 0.06%)</title><rect x="1159.6" y="611.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1162.6" y="622.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (8 samples, 0.03%)</title><rect x="1159.6" y="595.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1162.6" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.03%)</title><rect x="1159.6" y="579.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1162.6" y="590.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (8 samples, 0.03%)</title><rect x="1159.6" y="563.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8 (9 samples, 0.03%)</title><rect x="1159.9" y="595.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1162.9" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (9 samples, 0.03%)</title><rect x="1159.9" y="579.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.9" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (9 samples, 0.03%)</title><rect x="1159.9" y="563.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1162.9" y="574.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (9 samples, 0.03%)</title><rect x="1159.9" y="547.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (18 samples, 0.06%)</title><rect x="1160.3" y="659.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1163.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (14 samples, 0.05%)</title><rect x="1160.4" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1163.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (14 samples, 0.05%)</title><rect x="1160.4" y="627.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1163.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (10 samples, 0.03%)</title><rect x="1160.6" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1163.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodEpilogue (19 samples, 0.06%)</title><rect x="1161.1" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1164.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMaxs (19 samples, 0.06%)</title><rect x="1161.1" y="659.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1164.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.computeAllFrames (19 samples, 0.06%)</title><rect x="1161.1" y="643.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1164.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.setInputFrameFromDescriptor (18 samples, 0.06%)</title><rect x="1161.1" y="627.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1164.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (12 samples, 0.04%)</title><rect x="1161.3" y="611.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1164.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.04%)</title><rect x="1161.3" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1164.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.04%)</title><rect x="1161.3" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1164.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodPrologue (8 samples, 0.03%)</title><rect x="1161.8" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1164.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (8 samples, 0.03%)</title><rect x="1161.8" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1164.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (7 samples, 0.02%)</title><rect x="1161.9" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1164.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitAnnotation (12 samples, 0.04%)</title><rect x="1162.2" y="675.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1165.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/AnnotationWriter.create (12 samples, 0.04%)</title><rect x="1162.2" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1165.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classFilePrologue (20 samples, 0.07%)</title><rect x="1162.6" y="691.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1165.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (58 samples, 0.20%)</title><rect x="1163.4" y="691.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1166.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (53 samples, 0.18%)</title><rect x="1163.6" y="675.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1166.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="1164.1" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (14 samples, 0.05%)</title><rect x="1164.9" y="659.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1167.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (10 samples, 0.03%)</title><rect x="1165.1" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1168.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (10 samples, 0.03%)</title><rect x="1165.1" y="627.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1168.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadMethod (16 samples, 0.05%)</title><rect x="1166.0" y="707.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1169.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLLLL.make (277 samples, 0.95%)</title><rect x="1166.7" y="819.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1169.7" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLLLL.&lt;init&gt; (276 samples, 0.94%)</title><rect x="1166.8" y="803.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1169.8" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (276 samples, 0.94%)</title><rect x="1166.8" y="787.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1169.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (276 samples, 0.94%)</title><rect x="1166.8" y="771.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1169.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (276 samples, 0.94%)</title><rect x="1166.8" y="755.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1169.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (276 samples, 0.94%)</title><rect x="1166.8" y="739.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1169.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (274 samples, 0.94%)</title><rect x="1166.8" y="723.0" width="11.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1169.8" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (254 samples, 0.87%)</title><rect x="1166.9" y="707.0" width="10.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1169.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (171 samples, 0.58%)</title><rect x="1166.9" y="691.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1169.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classData (7 samples, 0.02%)</title><rect x="1166.9" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1169.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (121 samples, 0.41%)</title><rect x="1167.3" y="675.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1170.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArguments (10 samples, 0.03%)</title><rect x="1167.3" y="659.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1170.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArgument (10 samples, 0.03%)</title><rect x="1167.3" y="643.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1170.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitImplicitConversion (9 samples, 0.03%)</title><rect x="1167.3" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1170.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitReferenceCast (9 samples, 0.03%)</title><rect x="1167.3" y="611.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1170.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitTypeInsn (8 samples, 0.03%)</title><rect x="1167.3" y="595.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1170.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getInvocationType (42 samples, 0.14%)</title><rect x="1167.8" y="659.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1170.8" y="670.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (11 samples, 0.04%)</title><rect x="1167.8" y="643.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.8" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (11 samples, 0.04%)</title><rect x="1167.8" y="627.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.8" y="638.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (11 samples, 0.04%)</title><rect x="1167.8" y="611.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1170.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getMethodOrFieldType (9 samples, 0.03%)</title><rect x="1168.2" y="643.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1171.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.methodType (9 samples, 0.03%)</title><rect x="1168.2" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1171.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (9 samples, 0.03%)</title><rect x="1168.2" y="611.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1171.2" y="622.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (9 samples, 0.03%)</title><rect x="1168.2" y="595.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.2" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (9 samples, 0.03%)</title><rect x="1168.2" y="579.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.2" y="590.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (9 samples, 0.03%)</title><rect x="1168.2" y="563.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (22 samples, 0.08%)</title><rect x="1168.6" y="643.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1171.6" y="654.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (11 samples, 0.04%)</title><rect x="1168.6" y="627.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.6" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (11 samples, 0.04%)</title><rect x="1168.6" y="611.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.6" y="622.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (11 samples, 0.04%)</title><rect x="1168.6" y="595.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (11 samples, 0.04%)</title><rect x="1169.0" y="627.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1172.0" y="638.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (11 samples, 0.04%)</title><rect x="1169.0" y="611.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.0" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (11 samples, 0.04%)</title><rect x="1169.0" y="595.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1172.0" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (11 samples, 0.04%)</title><rect x="1169.0" y="579.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1172.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitFieldInsn (50 samples, 0.17%)</title><rect x="1169.5" y="659.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1172.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.execute (19 samples, 0.06%)</title><rect x="1169.5" y="643.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1172.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.push (19 samples, 0.06%)</title><rect x="1169.5" y="627.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1172.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.getAbstractTypeFromDescriptor (19 samples, 0.06%)</title><rect x="1169.5" y="611.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1172.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.06%)</title><rect x="1169.5" y="595.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1172.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.06%)</title><rect x="1169.5" y="579.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1172.5" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (9 samples, 0.03%)</title><rect x="1169.5" y="563.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.5" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (9 samples, 0.03%)</title><rect x="1169.5" y="547.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1172.5" y="558.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (9 samples, 0.03%)</title><rect x="1169.5" y="531.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.5" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.03%)</title><rect x="1169.9" y="563.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1172.9" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (9 samples, 0.03%)</title><rect x="1169.9" y="547.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.9" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.03%)</title><rect x="1169.9" y="531.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1172.9" y="542.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (9 samples, 0.03%)</title><rect x="1169.9" y="515.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1172.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantFieldref (29 samples, 0.10%)</title><rect x="1170.3" y="643.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1173.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (29 samples, 0.10%)</title><rect x="1170.3" y="627.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1173.3" y="638.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (9 samples, 0.03%)</title><rect x="1170.3" y="611.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.3" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (9 samples, 0.03%)</title><rect x="1170.3" y="595.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.3" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (9 samples, 0.03%)</title><rect x="1170.3" y="579.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (20 samples, 0.07%)</title><rect x="1170.7" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1173.7" y="622.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (9 samples, 0.03%)</title><rect x="1170.7" y="595.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1173.7" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (9 samples, 0.03%)</title><rect x="1170.7" y="579.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1173.7" y="590.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (9 samples, 0.03%)</title><rect x="1170.7" y="563.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8 (10 samples, 0.03%)</title><rect x="1171.1" y="595.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1174.1" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (10 samples, 0.03%)</title><rect x="1171.1" y="579.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.1" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (10 samples, 0.03%)</title><rect x="1171.1" y="563.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1174.1" y="574.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (10 samples, 0.03%)</title><rect x="1171.1" y="547.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1174.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (17 samples, 0.06%)</title><rect x="1171.5" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1174.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (13 samples, 0.04%)</title><rect x="1171.6" y="643.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1174.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (13 samples, 0.04%)</title><rect x="1171.6" y="627.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1174.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (9 samples, 0.03%)</title><rect x="1171.8" y="611.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1174.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodEpilogue (19 samples, 0.06%)</title><rect x="1172.2" y="675.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1175.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMaxs (19 samples, 0.06%)</title><rect x="1172.2" y="659.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1175.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.computeAllFrames (19 samples, 0.06%)</title><rect x="1172.2" y="643.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1175.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.setInputFrameFromDescriptor (18 samples, 0.06%)</title><rect x="1172.3" y="627.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1175.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (12 samples, 0.04%)</title><rect x="1172.5" y="611.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1175.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.04%)</title><rect x="1172.5" y="595.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1175.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.04%)</title><rect x="1172.5" y="579.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1175.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodPrologue (8 samples, 0.03%)</title><rect x="1173.0" y="675.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1176.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (8 samples, 0.03%)</title><rect x="1173.0" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1176.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (7 samples, 0.02%)</title><rect x="1173.0" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1176.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitAnnotation (12 samples, 0.04%)</title><rect x="1173.3" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1176.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/AnnotationWriter.create (12 samples, 0.04%)</title><rect x="1173.3" y="659.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1176.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classFilePrologue (20 samples, 0.07%)</title><rect x="1173.8" y="691.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1176.8" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (58 samples, 0.20%)</title><rect x="1174.6" y="691.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1177.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (53 samples, 0.18%)</title><rect x="1174.8" y="675.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1177.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="1175.3" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1178.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (14 samples, 0.05%)</title><rect x="1176.1" y="659.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1179.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (10 samples, 0.03%)</title><rect x="1176.2" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1179.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (10 samples, 0.03%)</title><rect x="1176.2" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1179.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadMethod (16 samples, 0.05%)</title><rect x="1177.2" y="707.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1180.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLLLLL.make (300 samples, 1.03%)</title><rect x="1177.9" y="819.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1180.9" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLLLLL.&lt;init&gt; (298 samples, 1.02%)</title><rect x="1178.0" y="803.0" width="12.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1181.0" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (298 samples, 1.02%)</title><rect x="1178.0" y="787.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1181.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (298 samples, 1.02%)</title><rect x="1178.0" y="771.0" width="12.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1181.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (298 samples, 1.02%)</title><rect x="1178.0" y="755.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1181.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (298 samples, 1.02%)</title><rect x="1178.0" y="739.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1181.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (291 samples, 1.00%)</title><rect x="1178.0" y="723.0" width="11.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1181.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (271 samples, 0.93%)</title><rect x="1178.1" y="707.0" width="11.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1181.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (187 samples, 0.64%)</title><rect x="1178.1" y="691.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1181.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classData (7 samples, 0.02%)</title><rect x="1178.1" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1181.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (133 samples, 0.45%)</title><rect x="1178.5" y="675.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1181.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArguments (11 samples, 0.04%)</title><rect x="1178.5" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1181.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArgument (11 samples, 0.04%)</title><rect x="1178.5" y="643.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1181.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitImplicitConversion (9 samples, 0.03%)</title><rect x="1178.5" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1181.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitReferenceCast (9 samples, 0.03%)</title><rect x="1178.5" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1181.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitTypeInsn (8 samples, 0.03%)</title><rect x="1178.5" y="595.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1181.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getInvocationType (46 samples, 0.16%)</title><rect x="1179.0" y="659.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1182.0" y="670.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (12 samples, 0.04%)</title><rect x="1179.0" y="643.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.0" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (12 samples, 0.04%)</title><rect x="1179.0" y="627.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.0" y="638.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (12 samples, 0.04%)</title><rect x="1179.0" y="611.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getMethodOrFieldType (10 samples, 0.03%)</title><rect x="1179.5" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1182.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.methodType (10 samples, 0.03%)</title><rect x="1179.5" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1182.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (10 samples, 0.03%)</title><rect x="1179.5" y="611.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.5" y="622.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (10 samples, 0.03%)</title><rect x="1179.5" y="595.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.5" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (10 samples, 0.03%)</title><rect x="1179.5" y="579.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.5" y="590.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (10 samples, 0.03%)</title><rect x="1179.5" y="563.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (24 samples, 0.08%)</title><rect x="1179.9" y="643.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.9" y="654.0"></text>
</g>
<g>
<title>Runtime1::new_object_array(JavaThread*, Klass*, int) (12 samples, 0.04%)</title><rect x="1179.9" y="627.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.9" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (12 samples, 0.04%)</title><rect x="1179.9" y="611.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.9" y="622.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (12 samples, 0.04%)</title><rect x="1179.9" y="595.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (12 samples, 0.04%)</title><rect x="1180.4" y="627.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1183.4" y="638.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (12 samples, 0.04%)</title><rect x="1180.4" y="611.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.4" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (12 samples, 0.04%)</title><rect x="1180.4" y="595.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.4" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (12 samples, 0.04%)</title><rect x="1180.4" y="579.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitFieldInsn (53 samples, 0.18%)</title><rect x="1180.9" y="659.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1183.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.execute (21 samples, 0.07%)</title><rect x="1180.9" y="643.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1183.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.push (21 samples, 0.07%)</title><rect x="1180.9" y="627.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1183.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.getAbstractTypeFromDescriptor (21 samples, 0.07%)</title><rect x="1180.9" y="611.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1183.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.07%)</title><rect x="1180.9" y="595.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1183.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.07%)</title><rect x="1180.9" y="579.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1183.9" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (10 samples, 0.03%)</title><rect x="1180.9" y="563.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.9" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (10 samples, 0.03%)</title><rect x="1180.9" y="547.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.9" y="558.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (10 samples, 0.03%)</title><rect x="1180.9" y="531.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.03%)</title><rect x="1181.3" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1184.3" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (10 samples, 0.03%)</title><rect x="1181.3" y="547.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.3" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (10 samples, 0.03%)</title><rect x="1181.3" y="531.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.3" y="542.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (10 samples, 0.03%)</title><rect x="1181.3" y="515.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantFieldref (31 samples, 0.11%)</title><rect x="1181.8" y="643.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1184.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (31 samples, 0.11%)</title><rect x="1181.8" y="627.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1184.8" y="638.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (10 samples, 0.03%)</title><rect x="1181.8" y="611.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.8" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (10 samples, 0.03%)</title><rect x="1181.8" y="595.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.8" y="606.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (10 samples, 0.03%)</title><rect x="1181.8" y="579.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (21 samples, 0.07%)</title><rect x="1182.2" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1185.2" y="622.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (10 samples, 0.03%)</title><rect x="1182.2" y="595.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.2" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (10 samples, 0.03%)</title><rect x="1182.2" y="579.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.2" y="590.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (10 samples, 0.03%)</title><rect x="1182.2" y="563.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8 (11 samples, 0.04%)</title><rect x="1182.6" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1185.6" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (11 samples, 0.04%)</title><rect x="1182.6" y="579.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.6" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (11 samples, 0.04%)</title><rect x="1182.6" y="563.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.6" y="574.0"></text>
</g>
<g>
<title>EpsilonHeap::allocate_work(unsigned long) (11 samples, 0.04%)</title><rect x="1182.6" y="547.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (21 samples, 0.07%)</title><rect x="1183.0" y="659.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1186.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (17 samples, 0.06%)</title><rect x="1183.2" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1186.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (17 samples, 0.06%)</title><rect x="1183.2" y="627.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1186.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (12 samples, 0.04%)</title><rect x="1183.4" y="611.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1186.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8 (7 samples, 0.02%)</title><rect x="1183.6" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1186.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodEpilogue (17 samples, 0.06%)</title><rect x="1183.9" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1186.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMaxs (17 samples, 0.06%)</title><rect x="1183.9" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1186.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.computeAllFrames (17 samples, 0.06%)</title><rect x="1183.9" y="643.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1186.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.setInputFrameFromDescriptor (16 samples, 0.05%)</title><rect x="1184.0" y="627.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1187.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (10 samples, 0.03%)</title><rect x="1184.2" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1187.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.03%)</title><rect x="1184.2" y="595.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1187.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.03%)</title><rect x="1184.2" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1187.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodPrologue (13 samples, 0.04%)</title><rect x="1184.6" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1187.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="1184.9" y="659.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1187.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitAnnotation (13 samples, 0.04%)</title><rect x="1185.2" y="675.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/AnnotationWriter.create (13 samples, 0.04%)</title><rect x="1185.2" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1188.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classFilePrologue (20 samples, 0.07%)</title><rect x="1185.7" y="691.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (58 samples, 0.20%)</title><rect x="1186.5" y="691.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1189.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.clinit (53 samples, 0.18%)</title><rect x="1186.7" y="675.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1189.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (7 samples, 0.02%)</title><rect x="1187.2" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (14 samples, 0.05%)</title><rect x="1187.9" y="659.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1190.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (10 samples, 0.03%)</title><rect x="1188.1" y="643.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1191.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (10 samples, 0.03%)</title><rect x="1188.1" y="627.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadMethod (16 samples, 0.05%)</title><rect x="1189.1" y="707.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.methodType (7 samples, 0.02%)</title><rect x="1189.7" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.7" y="734.0"></text>
</g>
</g>
</svg>
